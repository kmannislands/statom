[{
	"foreign": {
		"functions": [{
			"name": "lookup.xport",
			"args": [{
				"name": "file",
				"description": "character variable with the name of the file to read.  The\n    file must be in SAS XPORT format."
			}]
		}, {
			"name": "read.epiinfo",
			"args": [{
				"name": "file",
				"description": "A filename, URL, or connection."
			}, {
				"name": "read.deleted",
				"description": "Deleted records are read if <code>TRUE</code>, omitted\n    if <code>FALSE</code> or replaced with <code>NA</code> if <code>NA</code>."
			}, {
				"name": "guess.broken.dates",
				"description": "Attempt to convert dates with 0 or 2 digit\n    year information (see &#x2018;Details&#x2019;)."
			}, {
				"name": "thisyear",
				"description": "A 4-digit year to use for dates with no year. Defaults\n    to the current year."
			}, {
				"name": "lower.case.names",
				"description": "Convert variable names to lowercase?"
			}]
		}, {
			"name": "read.octave",
			"args": [{
				"name": "file",
				"description": "a character string with the name of the file to read."
			}]
		}, {
			"name": "read.dta",
			"args": [{
				"name": "file",
				"description": "a filename or URL as a character string."
			}, {
				"name": "convert.dates",
				"description": "Convert Stata dates to <code>Date</code> class, and\n    date-times to <code>POSIXct</code> class?"
			}, {
				"name": "convert.factors",
				"description": "Use Stata value labels to create factors?\n    (Version 6.0 or later)."
			}, {
				"name": "missing.type",
				"description": "For version 8 or later, store information about\n    different types of missing data?"
			}, {
				"name": "convert.underscore",
				"description": "Convert <code>&quot;_&quot;</code> in Stata variable names\n    to <code>&quot;.&quot;</code> in R names?"
			}, {
				"name": "warn.missing.labels",
				"description": "Warn if a variable is specified with value\n    labels and those value labels are not present in the file."
			}]
		}, {
			"name": "read.arff",
			"args": [{
				"name": "file",
				"description": "a character string with the name of the ARFF file to read\n    from, or a <code><a rd-options=\"\" href=\"/link/connection?package=foreign&amp;version=0.8-67\">connection</a></code> which will be opened if\n    necessary, and if so closed at the end of the function call."
			}]
		}, {
			"name": "read.spss",
			"args": [{
				"name": "file",
				"description": "character string: the name of the file or URL to read."
			}, {
				"name": "use.value.labels",
				"description": "logical: convert variables with value labels\n    into <span style=\"R\">R</span> factors with those levels?  This is only done if there are\n    at least as many labels as values of the variable (when values\n    without a matching label are returned as <code>NA</code>)."
			}, {
				"name": "to.data.frame",
				"description": "logical: return a data frame?"
			}, {
				"name": "max.value.labels",
				"description": "logical: only variables with value labels and\n    at most this many unique values will be converted to factors if\n    <code>TRUE</code>."
			}, {
				"name": "trim.factor.names",
				"description": "logical: trim trailing spaces from factor levels?"
			}, {
				"name": "trim_values",
				"description": "logical: should values and value labels have\n    trailing spaces ignored when matching for <code>use.value.labels = TRUE</code>?"
			}, {
				"name": "reencode",
				"description": "logical: should character strings be re-encoded to the\n    current locale.  The default, <code>NA</code>, means to do so in a UTF-8\n    locale, only.  Alternatively a character string specifying an encoding to\n    assume for the file."
			}, {
				"name": "use.missings",
				"description": "logical: should information on user-defined\n    missing values be used to set the corresponding values to <code>NA</code>?"
			}]
		}, {
			"name": "S3 read functions",
			"args": [{
				"name": "file",
				"description": "the filename of the S-PLUS <code>data.dump</code> or binary\n    file."
			}, {
				"name": "print",
				"description": "whether to print the name of each object as read from the\n    file."
			}, {
				"name": "verbose",
				"description": "whether to print the name of every subitem within each\n    object."
			}, {
				"name": "env",
				"description": "environment within which to create the restored object(s)."
			}]
		}, {
			"name": "write.dta",
			"args": [{
				"name": "dataframe",
				"description": "a data frame."
			}, {
				"name": "file",
				"description": "character string giving filename."
			}, {
				"name": "version",
				"description": "integer: Stata version: 6, 7, 8 and 10 are supported,\n    and 9 is mapped to 8, 11 to 10."
			}, {
				"name": "convert.dates",
				"description": "logical: convert <code>Date</code> and <code>POSIXct</code>\n    objects: see section &#x2018;Dates&#x2019;."
			}, {
				"name": "tz",
				"description": "timezone for date conversion."
			}, {
				"name": "convert.factors",
				"description": "how to handle factors."
			}]
		}, {
			"name": "read.systat",
			"args": [{
				"name": "file",
				"description": "character variable with the name of the file to read"
			}, {
				"name": "to.data.frame",
				"description": "return a data frame (otherwise a list)"
			}]
		}, {
			"name": "read.xport",
			"args": [{
				"name": "file",
				"description": "character variable with the name of the file to read.  The\n   file must be in SAS XPORT format."
			}]
		}, {
			"name": "write.arff",
			"args": [{
				"name": "x",
				"description": "the data to be written, preferably a matrix or data frame.\n    If not, coercion to a data frame is attempted."
			}, {
				"name": "file",
				"description": "either a character string naming a file, or a connection.\n    <code>&quot;&quot;</code> indicates output to the standard output connection."
			}, {
				"name": "eol",
				"description": "the character(s) to print at the end of each line (row)."
			}, {
				"name": "relation",
				"description": "The name of the relation to be written in the file."
			}]
		}, {
			"name": "write.dbf",
			"args": [{
				"name": "dataframe",
				"description": "a data frame object."
			}, {
				"name": "file",
				"description": "a file name to be written to."
			}, {
				"name": "factor2char",
				"description": "logical, default <code>TRUE</code>, convert factor columns to\n    character: otherwise they are written as the internal integer codes."
			}, {
				"name": "max_nchar",
				"description": "The maximum number of characters allowed in a\n    character field.  Strings which exceed this will be truncated with a\n    warning.  See Details."
			}]
		}, {
			"name": "write.foreign",
			"args": [{
				"name": "df",
				"description": "A data frame"
			}, {
				"name": "datafile",
				"description": "Name of file for data output"
			}, {
				"name": "codefile",
				"description": "Name of file for code output"
			}, {
				"name": "package",
				"description": "Name of package"
			}, {
				"name": "...",
				"description": "Other arguments for the individual <code>writeForeign</code>\n    functions"
			}]
		}, {
			"name": "read.dbf",
			"args": [{
				"name": "file",
				"description": "name of input file"
			}, {
				"name": "as.is",
				"description": "should character vectors not be converted to factors?"
			}]
		}, {
			"name": "read.mtp",
			"args": [{
				"name": "file",
				"description": "character variable with the name of the file to read.  The\n    file must be in Minitab Portable Worksheet format."
			}]
		}, {
			"name": "read.ssd",
			"args": [{
				"name": "libname",
				"description": "character string defining the SAS library (usually a\n    directory reference)"
			}, {
				"name": "sectionnames",
				"description": "character vector giving member names.  These are\n    files in the <code>libname</code> directory. They will usually have a\n    <code>.ssd0x</code> or <code>.sas7bdat</code> extension, which should be\n    omitted.  Use of ASCII names of at most 8 characters is strongly\n    recommended."
			}, {
				"name": "tmpXport",
				"description": "character  string: location where temporary xport\n    format archive should reside -- defaults to a randomly named file\n    in the session temporary directory, which will be removed."
			}, {
				"name": "tmpProgLoc",
				"description": "character  string: location where temporary\n    conversion SAS program should reside -- defaults to a randomly named\n    file in session temporary directory, which will be removed on\n    successful operation."
			}, {
				"name": "sascmd",
				"description": "character string giving full path to SAS executable."
			}]
		}]
	}
}, {
	"nlme": {
		"functions": [{
			"name": "ACF.lme",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>lme</code>, representing\n    a fitted linear mixed-effects model."
			}, {
				"name": "maxLag",
				"description": "an optional integer giving the maximum lag for which the\n    autocorrelation should be calculated. Defaults to maximum lag in the\n    within-group residuals."
			}, {
				"name": "resType",
				"description": "an optional character string specifying the type of\n    residuals to be used. If <code>&quot;response&quot;</code>, the &quot;raw&quot; residuals\n    (observed - fitted) are used; else, if <code>&quot;pearson&quot;</code>, the\n    standardized residuals (raw residuals divided by the c"
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n   arguments -- not used."
			}]
		}, {
			"name": "LDEsysMat",
			"args": [{
				"name": "pars",
				"description": "a numeric vector of parameter values."
			}, {
				"name": "incidence",
				"description": "an integer matrix with columns named <code>From</code>,\n    <code>To</code>, and <code>Par</code>.  Values in the <code>Par</code> column must\n    be in the range 1 to <code>length(pars)</code>.  \n    Values in the <code>From</code>\n    column must be bet"
			}]
		}, {
			"name": "Names.pdMat",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>pdMat</code>,\n   representing a positive-definite matrix."
			}, {
				"name": "value",
				"description": "a character vector with the replacement values for the\n   column and row names of the matrix represented by <code>object</code>. It\n   must have length equal to the dimension of the matrix\n   represented by <code>object</code> and, if names have been prev"
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "Names.pdBlocked",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>pdBlocked</code>\n   representing a positive-definite matrix with block diagonal\n   structure"
			}, {
				"name": "asList",
				"description": "a logical value. If <code>TRUE</code> a <code>list</code> with the\n   names for each block diagonal element is returned. If <code>FALSE</code>\n   a character vector with all column names is returned. Defaults to\n   <code>FALSE</code>."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "ACF",
			"args": [{
				"name": "object",
				"description": "any object from which an autocorrelation function can be\n   obtained. Generally an object resulting from a model fit, from which\n   residuals can be extracted."
			}, {
				"name": "maxLag",
				"description": "maximum lag for which the autocorrelation should be\n   calculated."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n   arguments."
			}]
		}, {
			"name": "Variogram.gls",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>gls</code>, representing\n    a generalized least squares fitted model."
			}, {
				"name": "distance",
				"description": "an optional numeric vector with the distances between\n    residual pairs. If a grouping variable is present, only the\n    distances between residual pairs within the same group should be\n    given. If missing, the distances are calculated based on the"
			}, {
				"name": "form",
				"description": "an optional one-sided formula specifying the covariate(s)\n    to be used for calculating the distances between residual pairs and,\n    optionally, a grouping factor for partitioning the residuals (which\n    must appear to the right of a <code>|</code> ope"
			}, {
				"name": "resType",
				"description": "an optional character string specifying the type of\n    residuals to be used. If <code>&quot;response&quot;</code>, the &quot;raw&quot; residuals\n    (observed - fitted) are used; else, if <code>&quot;pearson&quot;</code>, the\n    standardized residuals (raw residuals divided by the c"
			}, {
				"name": "data",
				"description": "an optional data frame in which to interpret the variables\n    in <code>form</code>. By default, the same data used to fit <code>object</code>\n    is used."
			}, {
				"name": "na.action",
				"description": "a function that indicates what should happen when the\n    data contain <code>NA</code>s. The default action (<code>na.fail</code>) causes\n    an error message to be printed and the function to terminate, if there\n    are any incomplete observations."
			}, {
				"name": "maxDist",
				"description": "an optional numeric value for the maximum distance used\n    for calculating the semi-variogram between two residuals. By default\n    all residual pairs are included."
			}, {
				"name": "length.out",
				"description": "an optional integer value. When <code>object</code>\n    includes a <code>corSpatial</code> element, its semi-variogram values are\n    calculated and this argument is used as the <code>length.out</code>\n    argument to the corresponding <code>Variogram</code>"
			}, {
				"name": "collapse",
				"description": "an optional character string specifying the type of\n    collapsing to be applied to the individual semi-variogram values. If\n    equal to <code>&quot;quantiles&quot;</code>, the semi-variogram values are split\n    according to quantiles of the distance distribution"
			}, {
				"name": "nint",
				"description": "an optional integer with the number of intervals to be\n    used when collapsing the semi-variogram values. Defaults to <code>20</code>."
			}, {
				"name": "robust",
				"description": "an optional logical value specifying if a robust\n    semi-variogram estimator should be used when collapsing the\n    individual values. If <code>TRUE</code> the robust estimator is\n    used. Defaults to <code>FALSE</code>."
			}, {
				"name": "breaks",
				"description": "an optional numeric vector with the breakpoints for the\n    distance intervals to be used in collapsing the semi-variogram\n    values. If not missing, the option specified in <code>collapse</code> is\n    ignored."
			}, {
				"name": "metric",
				"description": "an optional character string specifying the distance\n    metric to be used. The currently available options are\n    <code>&quot;euclidean&quot;</code> for the root sum-of-squares of distances;\n    <code>&quot;maximum&quot;</code> for the maximum difference; and <code>&quot;manhat</code>"
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "Variogram.corGaus",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>corGaus</code>,\n    representing an Gaussian spatial correlation structure."
			}, {
				"name": "distance",
				"description": "an optional numeric vector with the distances at\n    which the semi-variogram is to be calculated. Defaults to\n    <code>NULL</code>, in which case a sequence of length <code>length.out</code>\n    between the minimum and maximum values of\n    <code>getCov</code>"
			}, {
				"name": "sig2",
				"description": "an optional numeric value representing the process\n    variance. Defaults to <code>1</code>."
			}, {
				"name": "length.out",
				"description": "an optional integer specifying the length of the\n    sequence of distances to be used for calculating the semi-variogram,\n    when <code>distance = NULL</code>. Defaults to <code>50</code>."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "corCompSymm",
			"args": [{
				"name": "value",
				"description": "the correlation between any two correlated\n   observations. Defaults to 0."
			}, {
				"name": "form",
				"description": "a one sided formula of the form <code>~ t</code>, or <code>~ t |\n     g</code>, specifying a time covariate <code>t</code> and,  optionally, a\n   grouping factor <code>g</code>. When a grouping factor is present in\n   <code>form</code>, the correlation st"
			}, {
				"name": "fixed",
				"description": "an optional logical value indicating whether the\n   coefficients should be allowed to vary in the optimization, or kept\n   fixed at their initial value. Defaults to <code>FALSE</code>, in which case\n   the coefficients are allowed to vary."
			}]
		}, {
			"name": "BIC",
			"args": [{
				"name": "object",
				"description": "a fitted model object, for which there exists a\n   <code>logLik</code> method to extract the corresponding log-likelihood, or\n   an object inheriting from class <code>logLik</code>."
			}, {
				"name": "...",
				"description": "optional fitted model objects."
			}]
		}, {
			"name": "corFactor.corStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>corStruct</code>\n   representing a correlation structure, which must have been\n   initialized (using <code>Initialize</code>)."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "formula.reStruct",
			"args": [{
				"name": "x",
				"description": "an object inheriting from class <code>reStruct</code>,\n   representing a random effects structure and consisting of a list of\n   <code>pdMat</code> objects."
			}, {
				"name": "asList",
				"description": "logical.  Should the asList argument be applied to each\n   of the components?"
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "corNatural",
			"args": [{
				"name": "value",
				"description": "an optional vector with the parameter values. Default is\n   <code>numeric(0)</code>, which results in a vector of zeros of appropriate\n   dimension being assigned to the parameters when <code>object</code> is\n   initialized (corresponding to an identity c"
			}, {
				"name": "form",
				"description": "a one sided formula of the form <code>~ t</code>, or <code>~ t |\n     g</code>, specifying a time covariate <code>t</code> and,  optionally, a\n   grouping factor <code>g</code>. A covariate for this correlation structure\n   must be integer valued. When a"
			}, {
				"name": "fixed",
				"description": "an optional logical value indicating whether the\n   coefficients should be allowed to vary in the optimization, or kept\n   fixed at their initial value. Defaults to <code>FALSE</code>, in which case\n   the coefficients are allowed to vary."
			}]
		}, {
			"name": "fdHess",
			"args": [{
				"name": "pars",
				"description": "the numeric values of the parameters at which to evaluate the\n    function <code>fun</code> and its derivatives."
			}, {
				"name": "fun",
				"description": "a function depending on the parameters <code>pars</code> that\n    returns a numeric scalar."
			}, {
				"name": "...",
				"description": "Optional additional arguments to <code>fun</code>"
			}, {
				"name": ".relStep",
				"description": "The relative step size to use in the finite\n    differences.  It defaults to the cube root of <code>.Machine$double.eps</code>"
			}, {
				"name": "minAbsPar",
				"description": "The minimum magnitude of a parameter value that is\n    considered non-zero.  It defaults to zero meaning that any non-zero\n    value will be considered different from zero."
			}]
		}, {
			"name": "getCovariate.data.frame",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>data.frame</code>."
			}, {
				"name": "form",
				"description": "an optional formula specifying the covariate to be\n   evaluated in <code>object</code>. Defaults to <code>formula(object)</code>."
			}, {
				"name": "data",
				"description": "some methods for this generic require a separate data\n   frame. Not used in this method."
			}]
		}, {
			"name": "Initialize.lmeStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>lmeStruct</code>,\n   representing a list of linear mixed-effects model components, such as\n   <code>reStruct</code>, <code>corStruct</code>, and <code>varFunc</code> objects."
			}, {
				"name": "data",
				"description": "a data frame in which to evaluate the variables defined in\n   <code>formula(object)</code>."
			}, {
				"name": "groups",
				"description": "a data frame with the grouping factors corresponding to\n   the lme model associated with <code>object</code> as columns, sorted from\n   innermost to outermost grouping level."
			}, {
				"name": "conLin",
				"description": "an optional condensed linear model object, consisting of\n   a list with components <code>&quot;Xy&quot;</code>, corresponding to a regression\n   matrix (<code>X</code>) combined with a response vector (<code>y</code>), and \n   <code>&quot;logLik&quot;</code>, corresponding t"
			}, {
				"name": "control",
				"description": "an optional list with control parameters for the\n   initialization and optimization algorithms used in\n   <code>lme</code>. Defaults to <code>list(niterEM=20, gradHess=TRUE)</code>,\n   implying that 20 EM iterations are to be used in the derivation of"
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "Coef",
			"args": [{
				"name": "object",
				"description": "any object representing a fitted model, or, by default,\n   any object with a <code>coef</code> component."
			}, {
				"name": "...",
				"description": "some methods for this generic function may require\n   additional arguments."
			}, {
				"name": "value",
				"description": "a value to be assigned to the coefficients associated with\n <code>object</code>."
			}]
		}, {
			"name": "fixed.effects",
			"args": [{
				"name": "object",
				"description": "any fitted model object from which fixed effects\n   estimates can be extracted."
			}, {
				"name": "...",
				"description": "some methods for this generic function require additional\n   arguments."
			}]
		}, {
			"name": "Variogram",
			"args": [{
				"name": "object",
				"description": "a numeric vector with the values to be used for\n    calculating the semi-variogram, usually a residual vector from a\n    fitted model."
			}, {
				"name": "distance",
				"description": "a numeric vector with the pairwise distances\n    corresponding to the elements of <code>object</code>. The order of the\n    elements in <code>distance</code> must correspond to the pairs\n    <code>(1,2), (1,3), ..., (n-1,n)</code>, with <code>n</code> rep"
			}, {
				"name": "...",
				"description": "some methods for this generic function require additional\n    arguments."
			}]
		}, {
			"name": "Variogram.default",
			"args": [{
				"name": "object",
				"description": "a numeric vector with the values to be used for\n    calculating the semi-variogram, usually a residual vector from a\n    fitted model."
			}, {
				"name": "distance",
				"description": "a numeric vector with the pairwise distances\n    corresponding to the elements of <code>object</code>. The order of the\n    elements in <code>distance</code> must correspond to the pairs\n    <code>(1,2), (1,3), ..., (n-1,n)</code>, with <code>n</code> rep"
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "gapply",
			"args": [{
				"name": "object",
				"description": "an object to which the function will be applied - usually\n   a <code>groupedData</code> object or a <code>data.frame</code>. Must inherit from\n   class <code>data.frame</code>."
			}, {
				"name": "which",
				"description": "an optional character or positive integer vector\n   specifying which columns of <code>object</code> should be used with\n   <code>FUN</code>. Defaults to all columns in <code>object</code>."
			}, {
				"name": "FUN",
				"description": "function to apply to the distinct sets of rows\n   of the data frame <code>object</code> defined by the values of\n   <code>groups</code>."
			}, {
				"name": "form",
				"description": "an optional one-sided formula that defines the groups.\n   When this formula is given the right-hand side is evaluated in\n   <code>object</code>, converted to a factor if necessary, and the unique\n   levels are used to define the groups.  Defaults to"
			}, {
				"name": "level",
				"description": "an optional positive integer giving the level of grouping\n   to be used in an object with multiple nested grouping levels.\n   Defaults to the highest or innermost level of grouping."
			}, {
				"name": "groups",
				"description": "an optional factor that will be used to split the \n   rows into groups.  Defaults to <code>getGroups(object, form, level)</code>."
			}, {
				"name": "...",
				"description": "optional additional arguments to the summary function\n   <code>FUN</code>.  Often it is helpful to specify <code>na.rm = TRUE</code>."
			}]
		}, {
			"name": "Initialize.corStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>corStruct</code>\n   representing a correlation structure."
			}, {
				"name": "data",
				"description": "a data frame in which to evaluate the variables defined in\n   <code>formula(object)</code>."
			}, {
				"name": "...",
				"description": "this argument is included to make this method compatible\n   with the generic."
			}]
		}, {
			"name": "coef.reStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>reStruct</code>,\n   representing a random effects structure and consisting of a list of\n   <code>pdMat</code> objects."
			}, {
				"name": "unconstrained",
				"description": "a logical value. If <code>TRUE</code> the coefficients\n   are returned in unconstrained form (the same used in the optimization\n   algorithm). If <code>FALSE</code> the coefficients are returned in\n   &quot;natural&quot;, possibly constrained, form. Defaults to"
			}, {
				"name": "value",
				"description": "a vector with the replacement values for the coefficients\n   associated with <code>object</code>. It must be a vector with the same length\n   of <code>coef(object)</code> and must be given in unconstrained form."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "getVarCov",
			"args": [{
				"name": "obj",
				"description": "A fitted model.  Methods are available for models fit by\n    <code><a href=\"/link/lme?package=nlme&amp;version=3.1-68.1\" rd-options=\"\">lme</a></code> and by <code><a href=\"/link/gls?package=nlme&amp;version=3.1-68.1\" rd-options=\"\">gls</a></code>"
			}, {
				"name": "individuals",
				"description": "For models fit by <code><a href=\"/link/lme?package=nlme&amp;version=3.1-68.1\" rd-options=\"\">lme</a></code> a vector of\n    levels of the grouping factor can be specified for the conditional\n    or marginal variance-covariance matrices."
			}, {
				"name": "individual",
				"description": "For models fit by <code><a href=\"/link/gls?package=nlme&amp;version=3.1-68.1\" rd-options=\"\">gls</a></code> the only type of\n    variance-covariance matrix provided is the marginal\n    variance-covariance of the responses by group.  The\n    optional argument <code>individual</code> specifies the"
			}, {
				"name": "type",
				"description": "For models fit by <code><a href=\"/link/lme?package=nlme&amp;version=3.1-68.1\" rd-options=\"\">lme</a></code> the <code>type</code>\n    argument specifies the type of variance-covariance matrix, either\n    <code>&quot;random.effects&quot;</code> for the random-effects variance-covariance\n    (the default),"
			}, {
				"name": "...",
				"description": "Optional arguments for some methods, as described above"
			}]
		}, {
			"name": "BIC.logLik",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>logLik</code>, usually\n   resulting from applying a <code>logLik</code> method to a fitted model\n   object."
			}, {
				"name": "...",
				"description": "some methods for this generic use optional arguments.\n   None are used in this method."
			}]
		}, {
			"name": "getData",
			"args": [{
				"name": "object",
				"description": "an object from which a data.frame can be extracted,\n   generally a fitted model object."
			}]
		}, {
			"name": "gnlsObject",
			"args": []
		}, {
			"name": "corFactor",
			"args": [{
				"name": "object",
				"description": "an object from which a correlation matrix can be\n   extracted."
			}, {
				"name": "...",
				"description": "some methods for this generic function require additional\n   arguments."
			}]
		}, {
			"name": "Matrix.pdMat",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>pdMat</code>, representing\n   a positive definite matrix."
			}, {
				"name": "value",
				"description": "a matrix with the new values to be assigned to the\n   positive-definite matrix represented by <code>object</code>. Must have the\n   same dimensions as <code>as.matrix(object)</code>."
			}]
		}, {
			"name": "gnlsControl",
			"args": [{
				"name": "maxIter",
				"description": "maximum number of iterations for the <code>gnls</code>\n   optimization algorithm. Default is 50."
			}, {
				"name": "nlsMaxIter",
				"description": "maximum number of iterations\n   for the <code>nls</code> optimization step inside the <code>gnls</code>\n   optimization. Default is 7."
			}, {
				"name": "msMaxIter",
				"description": "maximum number of iterations\n   for the <code>ms</code> optimization step inside the <code>gnls</code>\n   optimization. Default is 50."
			}, {
				"name": "minScale",
				"description": "minimum factor by which to shrink the default step size\n   in an attempt to decrease the sum of squares in the <code>nls</code> step.\n   Default 0.001."
			}, {
				"name": "tolerance",
				"description": "tolerance for the convergence criterion in the\n   <code>gnls</code> algorithm. Default is 1e-6."
			}, {
				"name": "nlsTol",
				"description": "tolerance for the convergence criterion in <code>nls</code>\n   step. Default is 1e-3."
			}, {
				"name": "msTol",
				"description": "tolerance for the convergence criterion in <code>ms</code>,\n   passed as the <code>rel.tolerance</code> argument to the function (see\n   documentation on <code>ms</code>). Default is 1e-7."
			}, {
				"name": "msScale",
				"description": "scale function passed as the <code>scale</code> argument to\n   the <code>ms</code> function (see documentation on that function). Default\n   is <code>lmeScale</code>."
			}, {
				"name": "returnObject",
				"description": "a logical value indicating whether the fitted\n   object should be returned when the maximum number of iterations is\n   reached without convergence of the algorithm. Default is\n   <code>FALSE</code>."
			}, {
				"name": "msVerbose",
				"description": "a logical value passed as the <code>trace</code> argument to\n   <code>ms</code> (see documentation on that function). Default is\n   <code>FALSE</code>."
			}, {
				"name": "apVar",
				"description": "a logical value indicating whether the approximate\n   covariance matrix of the variance-covariance parameters should be\n   calculated. Default is <code>TRUE</code>."
			}, {
				"name": ".relStep",
				"description": "relative step for numerical derivatives\n   calculations. Default is <code>.Machine$double.eps^(1/3)</code>."
			}, {
				"name": "optimMethod",
				"description": "character - the optimization method to be used with\n   the <code><a href=\"/link/optim?package=nlme&amp;version=3.1-68.1&amp;to=stats\" rd-options=\"stats\">optim</a></code> optimizer. The default is\n   <code>&quot;BFGS&quot;</code>.  An alternative is <code>&quot;L-BFGS-B&quot;</code>."
			}, {
				"name": "nlmStepMax",
				"description": "stepmax value to be passed to nlm. See\n     <code><a href=\"/link/nlm?package=nlme&amp;version=3.1-68.1\" rd-options=\"\">nlm</a></code> for details. Default is 100.0"
			}, {
				"name": "minAbsParApVar",
				"description": "numeric value - minimum absolute parameter value\n   in the approximate variance calculation.  The default is <code>0.05</code>."
			}]
		}, {
			"name": "gnls",
			"args": [{
				"name": "model",
				"description": "a two-sided formula object describing the\n    model, with the response on the left of a <code>~</code> operator and \n    a nonlinear expression involving parameters and covariates on the\n    right. If <code>data</code> is given, all names used in the form"
			}, {
				"name": "data",
				"description": "an optional data frame containing the variables named in\n   <code>model</code>, <code>correlation</code>, <code>weights</code>, \n   <code>subset</code>, and <code>naPattern</code>. By default the variables are \n   taken from the environment from which"
			}, {
				"name": "params",
				"description": "an optional two-sided linear formula of the form\n   <code>p1+...+pn~x1+...+xm</code>, or list of two-sided formulas of the form\n   <code>p1~x1+...+xm</code>, with possibly different models for each\n   parameter. The <code>p1,...,pn</code> represent parame"
			}, {
				"name": "start",
				"description": "an optional named list, or numeric vector, with the\n   initial values for the parameters in <code>model</code>. It can be omitted\n   when a <code>selfStarting</code> function is used in <code>model</code>, in which\n   case the starting estimates will be o"
			}, {
				"name": "correlation",
				"description": "an optional <code>corStruct</code> object describing the\n   within-group correlation structure. See the documentation of\n   <code>corClasses</code> for a description of the available <code>corStruct</code>\n   classes. If a grouping variable is to be used,"
			}, {
				"name": "weights",
				"description": "an optional <code>varFunc</code> object or one-sided formula\n   describing the within-group heteroscedasticity structure. If given as\n   a formula, it is used as the argument to <code>varFixed</code>,\n   corresponding to fixed variance weights. See the do"
			}, {
				"name": "subset",
				"description": "an optional expression indicating which subset of the rows of\n   <code>data</code> should  be  used in the fit. This can be a logical\n   vector, or a numeric vector indicating which observation numbers are\n   to be included, or a  character  vector of the"
			}, {
				"name": "na.action",
				"description": "a function that indicates what should happen when the\n   data contain <code>NA</code>s.  The default action (<code>na.fail</code>) causes\n   <code>gnls</code> to print an error message and terminate if there are any\n   incomplete observations."
			}, {
				"name": "naPattern",
				"description": "an expression or formula object, specifying which returned\n   values are to be regarded as missing."
			}, {
				"name": "control",
				"description": "a list of control values for the estimation algorithm to\n   replace the default values returned by the function <code>gnlsControl</code>.\n   Defaults to an empty list."
			}, {
				"name": "verbose",
				"description": "an optional logical value. If <code>TRUE</code> information on\n   the evolution of the iterative algorithm is printed. Default is\n   <code>FALSE</code>."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "intervals.lmList",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>lmList</code>, representing\n   a list of <code>lm</code> objects with a common model."
			}, {
				"name": "level",
				"description": "an optional numeric value with the confidence level for\n   the intervals. Defaults to 0.95."
			}, {
				"name": "pool",
				"description": "an optional logical value indicating whether a pooled\n   estimate of the residual standard error should be used. Default is\n   <code>attr(object, &quot;pool&quot;)</code>."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "pdLogChol",
			"args": [{
				"name": "value",
				"description": "an optional initialization value, which can be any of the\n   following: a <code>pdMat</code> object, a positive-definite\n   matrix, a one-sided linear formula (with variables separated by\n   <code>+</code>), a vector of character strings, or a numeric"
			}, {
				"name": "form",
				"description": "an optional one-sided linear formula specifying the\n   row/column names for the matrix represented by <code>object</code>. Because\n   factors may be present in <code>form</code>, the formula needs to be\n   evaluated on a data.frame to resolve the names it"
			}, {
				"name": "nam",
				"description": "an optional vector of character strings specifying the\n   row/column names for the matrix represented by object. It must have \n   length equal to the dimension of the underlying positive-definite\n   matrix and unreplicated elements. This argument is ignor"
			}, {
				"name": "data",
				"description": "an optional data frame in which to evaluate the variables\n   named in <code>value</code> and <code>form</code>. It is used to\n   obtain the levels for <code>factors</code>, which affect the\n   dimensions and the row/column names of the underlying matrix."
			}]
		}, {
			"name": "Matrix.reStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>reStruct</code>,\n   representing a random effects structure and consisting of a list of\n   <code>pdMat</code> objects."
			}, {
				"name": "value",
				"description": "a matrix, or list of matrices, with the new values to be\n   assigned to the matrices associated with the <code>pdMat</code> components\n   of <code>object</code>."
			}]
		}, {
			"name": "corMatrix.reStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>reStruct</code>,\n   representing a random effects structure and consisting of a list of\n   <code>pdMat</code> objects."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "pdIdent",
			"args": [{
				"name": "value",
				"description": "an optional initialization value, which can be any of the\n   following: a <code>pdMat</code> object, a positive-definite\n   matrix, a one-sided linear formula (with variables separated by\n   <code>+</code>), a vector of character strings, or a numeric"
			}, {
				"name": "form",
				"description": "an optional one-sided linear formula specifying the\n   row/column names for the matrix represented by <code>object</code>. Because\n   factors may be present in <code>form</code>, the formula needs to be\n   evaluated on a data.frame to resolve the names it"
			}, {
				"name": "nam",
				"description": "an optional vector of character strings specifying the\n   row/column names for the matrix represented by object. It must have \n   length equal to the dimension of the underlying positive-definite\n   matrix and unreplicated elements. This argument is ignor"
			}, {
				"name": "data",
				"description": "an optional data frame in which to evaluate the variables\n   named in <code>value</code> and <code>form</code>. It is used to\n   obtain the levels for <code>factors</code>, which affect the\n   dimensions and the row/column names of the underlying matrix."
			}]
		}, {
			"name": "Variogram.lme",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>lme</code>, representing\n    a fitted linear mixed-effects model."
			}, {
				"name": "distance",
				"description": "an optional numeric vector with the distances between\n    residual pairs. If a grouping variable is present, only the\n    distances between residual pairs within the same group should be\n    given. If missing, the distances are calculated based on the"
			}, {
				"name": "form",
				"description": "an optional one-sided formula specifying the covariate(s)\n    to be used for calculating the distances between residual pairs and,\n    optionally, a grouping factor for partitioning the residuals (which\n    must appear to the right of a <code>|</code> ope"
			}, {
				"name": "resType",
				"description": "an optional character string specifying the type of\n    residuals to be used. If <code>&quot;response&quot;</code>, the &quot;raw&quot; residuals\n    (observed - fitted) are used; else, if <code>&quot;pearson&quot;</code>, the\n    standardized residuals (raw residuals divided by the c"
			}, {
				"name": "data",
				"description": "an optional data frame in which to interpret the variables\n    in <code>form</code>. By default, the same data used to fit <code>object</code>\n    is used."
			}, {
				"name": "na.action",
				"description": "a function that indicates what should happen when the\n    data contain <code>NA</code>s. The default action (<code>na.fail</code>) causes\n    an error message to be printed and the function to terminate, if there\n    are any incomplete observations."
			}, {
				"name": "maxDist",
				"description": "an optional numeric value for the maximum distance used\n    for calculating the semi-variogram between two residuals. By default\n    all residual pairs are included."
			}, {
				"name": "length.out",
				"description": "an optional integer value. When <code>object</code>\n    includes a <code>corSpatial</code> element, its semi-variogram values are\n    calculated and this argument is used as the <code>length.out</code>\n    argument to the corresponding <code>Variogram</code>"
			}, {
				"name": "collapse",
				"description": "an optional character string specifying the type of\n    collapsing to be applied to the individual semi-variogram values. If\n    equal to <code>&quot;quantiles&quot;</code>, the semi-variogram values are split\n    according to quantiles of the distance distribution"
			}, {
				"name": "nint",
				"description": "an optional integer with the number of intervals to be\n    used when collapsing the semi-variogram values. Defaults to <code>20</code>."
			}, {
				"name": "robust",
				"description": "an optional logical value specifying if a robust\n    semi-variogram estimator should be used when collapsing the\n    individual values. If <code>TRUE</code> the robust estimator is\n    used. Defaults to <code>FALSE</code>."
			}, {
				"name": "breaks",
				"description": "an optional numeric vector with the breakpoints for the\n    distance intervals to be used in collapsing the semi-variogram\n    values. If not missing, the option specified in <code>collapse</code> is\n    ignored."
			}, {
				"name": "metric",
				"description": "an optional character string specifying the distance\n    metric to be used. The currently available options are\n    <code>&quot;euclidean&quot;</code> for the root sum-of-squares of distances;\n    <code>&quot;maximum&quot;</code> for the maximum difference; and <code>&quot;manhat</code>"
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "coef.varFunc",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>varFunc</code>\n   representing a variance function structure."
			}, {
				"name": "unconstrained",
				"description": "a logical value. If <code>TRUE</code> the coefficients\n   are returned in unconstrained form (the same used in the optimization\n   algorithm). If <code>FALSE</code> the coefficients are returned in\n   &quot;natural&quot;, generally constrained form. Defaults to"
			}, {
				"name": "allCoef",
				"description": "a logical value. If <code>FALSE</code> only the coefficients\n   which may vary during the optimization are returned. If <code>TRUE</code>\n   all coefficients are returned. Defaults to <code>FALSE</code>."
			}, {
				"name": "value",
				"description": "a vector with the replacement values for the coefficients\n   associated with <code>object</code>. It must be have the same length of\n   <code>coef{object}</code> and must be given in unconstrained\n   form. <code>Object</code> must be initialized before ne"
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "isInitialized",
			"args": [{
				"name": "object",
				"description": "any object requiring initialization."
			}]
		}, {
			"name": "getData.lmList",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>lmList</code>, representing\n   a list of <code>lm</code> objects with a common model."
			}]
		}, {
			"name": "getData.gls",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>gls</code>, representing\n   a generalized least squares fitted linear model."
			}]
		}, {
			"name": "corAR1",
			"args": [{
				"name": "value",
				"description": "the value of the lag 1 autocorrelation, which must be\n   between -1 and 1. Defaults to 0 (no autocorrelation)."
			}, {
				"name": "form",
				"description": "a one sided formula of the form <code>~ t</code>, or <code>~ t |\n     g</code>, specifying a time covariate <code>t</code> and,  optionally, a\n   grouping factor <code>g</code>. A covariate for this correlation structure\n   must be integer valued. When a"
			}, {
				"name": "fixed",
				"description": "an optional logical value indicating whether the\n   coefficients should be allowed to vary in the optimization, or kept\n   fixed at their initial value. Defaults to <code>FALSE</code>, in which case\n   the coefficients are allowed to vary."
			}]
		}, {
			"name": "corClasses",
			"args": []
		}, {
			"name": "corMatrix.pdMat",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>pdMat</code>, representing\n   a positive definite matrix."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "lme.lmList",
			"args": [{
				"name": "fixed",
				"description": "an object inheriting from class <code>lmList</code>,\n    representing a list of <code>lm</code> fits with a common model."
			}, {
				"name": "data",
				"description": "this argument is included for consistency with the generic\n    function. It is ignored in this method function."
			}, {
				"name": "random",
				"description": "an optional one-sided linear formula with no conditioning\n   expression, or a <code>pdMat</code> object with a <code>formula</code>\n   attribute. Multiple levels of grouping are not allowed with this\n   method function.  Defaults to a formula consisting o"
			}, {
				"name": "correlation",
				"description": "an optional <code>corStruct</code> object describing the\n   within-group correlation structure. See the documentation of\n   <code>corClasses</code> for a description of the available <code>corStruct</code>\n   classes. Defaults to <code>NULL</code>,\n   cor"
			}, {
				"name": "weights",
				"description": "an optional <code>varFunc</code> object or one-sided formula\n   describing the within-group heteroscedasticity structure. If given as\n   a formula, it is used as the argument to <code>varFixed</code>,\n   corresponding to fixed variance weights. See the do"
			}, {
				"name": "subset",
				"description": "an optional expression indicating the subset of the rows of\n   <code>data</code> that should be used in the fit. This can be a logical\n   vector, or a numeric vector indicating which observation numbers are\n   to be included, or a  character  vector of th"
			}, {
				"name": "method",
				"description": "a character string.  If <code>&quot;REML&quot;</code> the model is fit by\n   maximizing the restricted log-likelihood.  If <code>&quot;ML&quot;</code> the\n   log-likelihood is maximized.  Defaults to <code>&quot;REML&quot;</code>."
			}, {
				"name": "na.action",
				"description": "a function that indicates what should happen when the\n   data contain <code>NA</code>s.  The default action (<code>na.fail</code>) causes\n   <code>lme</code> to print an error message and terminate if there are any\n   incomplete observations."
			}, {
				"name": "control",
				"description": "a list of control values for the estimation algorithm to\n   replace the default values returned by the function <code>lmeControl</code>.\n   Defaults to an empty list."
			}, {
				"name": "contrasts",
				"description": "an optional list. See the <code>contrasts.arg</code>\n   of <code>model.matrix.default</code>."
			}]
		}, {
			"name": "plot.nfnGroupedData",
			"args": [{
				"name": "x",
				"description": "an object inheriting from class <code>nfnGroupedData</code>,\n   representing a <code>groupedData</code> object with a numeric primary\n   covariate and a single grouping level."
			}, {
				"name": "outer",
				"description": "an optional logical value or one-sided formula,\n   indicating covariates that are outer to the grouping factor, which\n   are used to determine the panels of the Trellis plot. If\n   equal to <code>TRUE</code>, <code>attr(object, &quot;outer&quot;)</code> is used to"
			}, {
				"name": "inner",
				"description": "an optional logical value or one-sided formula, indicating\n   a covariate that is inner to the grouping factor, which is used to\n   associate points within each panel of the Trellis plot. If\n   equal to <code>TRUE</code>, <code>attr(object, &quot;inner&quot;)</code>"
			}, {
				"name": "innerGroups",
				"description": "an optional one-sided formula specifying a factor\n   to be used for grouping the levels of the <code>inner</code>\n   covariate. Different colors, or line types, are used for each level\n   of the <code>innerGroups</code> factor. Default is <code>NULL</code>"
			}, {
				"name": "xlab, ylab",
				"description": "optional character strings with the labels for the\n   plot. Default is the corresponding elements of <code>attr(object,\n     &quot;labels&quot;)</code> and <code>attr(object, &quot;units&quot;)</code> pasted together."
			}, {
				"name": "strip",
				"description": "an optional function passed as the <code>strip</code> argument to\n   the <code>xyplot</code> function. Default is <code>strip.default(..., style\n     = 1)</code> (see <code>trellis.args</code>)."
			}, {
				"name": "aspect",
				"description": "an optional character string indicating the aspect ratio\n   for the plot passed as the <code>aspect</code> argument to the\n   <code>xyplot</code> function. Default is <code>&quot;xy&quot;</code> (see\n   <code>trellis.args</code>)."
			}, {
				"name": "panel",
				"description": "an optional function used to generate the individual\n   panels in the Trellis display, passed as the <code>panel</code> argument\n   to the <code>xyplot</code> function."
			}, {
				"name": "key",
				"description": "an optional logical function or function. If <code>TRUE</code>\n   and <code>innerGroups</code> is non-<code>NULL</code>, a legend for the\n   different <code>innerGroups</code> levels is included at the top of the\n   plot. If given as a function, it is pas"
			}, {
				"name": "grid",
				"description": "an optional logical value indicating whether a grid should\n   be added to plot. Default is <code>TRUE</code>."
			}, {
				"name": "...",
				"description": "optional arguments passed to the <code>xyplot</code> function."
			}]
		}, {
			"name": "Dim.corSpatial",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>corSpatial</code>,\n   representing a spatial correlation structure."
			}, {
				"name": "groups",
				"description": "an optional factor defining the grouping of the\n   observations; observations within a group are correlated and\n   observations in different groups are uncorrelated."
			}, {
				"name": "...",
				"description": "further arguments to be passed to or from methods."
			}]
		}, {
			"name": "getGroups",
			"args": [{
				"name": "object",
				"description": "any object"
			}, {
				"name": "form",
				"description": "an optional formula with a conditioning expression on its\n   right hand side (i.e. an expression involving the <code>|</code>\n   operator). Defaults to <code>formula(object)</code>."
			}, {
				"name": "level",
				"description": "a positive integer vector with the level(s) of grouping to\n   be used when multiple nested levels of grouping are present. This\n   argument is optional for most methods of this generic function and\n   defaults to all levels of nesting."
			}, {
				"name": "data",
				"description": "a data frame in which to interpret the variables named in\n   <code>form</code>. Optional for most methods."
			}, {
				"name": "sep",
				"description": "character, the separator to use between group levels when\n   multiple levels are collapsed.  The default is <code>&apos;/&apos;</code>."
			}]
		}, {
			"name": "corMatrix.corStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>corStruct</code>\n   representing a correlation structure."
			}, {
				"name": "covariate",
				"description": "an optional covariate vector (matrix), or list of\n   covariate vectors (matrices), at which values the correlation matrix,\n   or list of correlation  matrices, are to be evaluated. Defaults to\n   <code>getCovariate(object)</code>."
			}, {
				"name": "corr",
				"description": "a logical value. If <code>TRUE</code> the function returns the\n   correlation matrix, or list of correlation matrices, represented by\n   <code>object</code>. If <code>FALSE</code> the function returns a transpose\n   inverse square-root of the correlation"
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "getGroups.lme",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>lme</code>, representing\n   a fitted linear mixed-effects model."
			}, {
				"name": "form",
				"description": "this argument is included to make the method function\n   compatible with the generic and is ignored in this method."
			}, {
				"name": "level",
				"description": "an optional integer vector giving the level(s) of grouping\n   to be extracted from <code>object</code>. Defaults to the highest or\n   innermost level of grouping."
			}, {
				"name": "data",
				"description": "unused"
			}, {
				"name": "sep",
				"description": "character, the separator to use between group levels when\n   multiple levels are collapsed.  The default is <code>&apos;/&apos;</code>."
			}]
		}, {
			"name": "pooledSD",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>lmList</code>."
			}]
		}, {
			"name": "logLik.glsStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>glsStruct</code>,\n   representing a list of linear model components, such as\n   <code>corStruct</code> and <code>varFunc</code> objects."
			}, {
				"name": "Pars",
				"description": "the parameter values at which the (restricted)\n   log-likelihood is to be evaluated."
			}, {
				"name": "conLin",
				"description": "an optional condensed linear model object, consisting of\n   a list with components <code>&quot;Xy&quot;</code>, corresponding to a regression\n   matrix (<code>X</code>) combined with a response vector (<code>y</code>), and \n   <code>&quot;logLik&quot;</code>, corresponding t"
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "Initialize.varFunc",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>varFunc</code>,\n   representing a variance function structure."
			}, {
				"name": "data",
				"description": "a data frame in which to evaluate the variables named in\n   <code>formula(object)</code>."
			}, {
				"name": "...",
				"description": "this argument is included to make this method compatible\n   with the generic."
			}]
		}, {
			"name": "predict.nlme",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>nlme</code>, representing\n   a fitted nonlinear mixed-effects model."
			}, {
				"name": "newdata",
				"description": "an optional data frame to be used for obtaining the\n   predictions. All variables used in the nonlinear model, the fixed and\n   the random effects models, as well as the grouping factors, must be\n   present in the data frame. If missing, the fitted values"
			}, {
				"name": "level",
				"description": "an optional integer vector giving the level(s) of grouping\n   to be used in obtaining the predictions. Level values increase from\n   outermost to innermost grouping, with level zero corresponding to the\n   population predictions. Defaults to the highest o"
			}, {
				"name": "asList",
				"description": "an optional logical value. If <code>TRUE</code> and a single\n   value is given in <code>level</code>, the returned object is a list with\n   the predictions split by groups; else the returned value is\n   either a vector or a data frame, according to the le"
			}, {
				"name": "na.action",
				"description": "a function that indicates what should happen when\n   <code>newdata</code> contains <code>NA</code>s.  The default action\n   (<code>na.fail</code>) causes the function to print an error message and\n   terminate if there are any incomplete observations."
			}, {
				"name": "naPattern",
				"description": "an expression or formula object, specifying which returned\n   values are to be regarded as missing."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "allCoef",
			"args": [{
				"name": "...",
				"description": "objects to which <code>extract</code> will be applied. Generally\n these will be model components, such as <code>corStruct</code> and\n <code>varFunc</code> objects."
			}, {
				"name": "extract",
				"description": "an optional extractor function. Defaults to <code>coef</code>."
			}]
		}, {
			"name": "logLik.gnls",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>gnls</code>, representing\n   a generalized nonlinear least squares fitted model."
			}, {
				"name": "REML",
				"description": "an optional logical value. If <code>TRUE</code> the restricted\n   log-likelihood is returned, else, if <code>FALSE</code>, the log-likelihood\n   is returned. Defaults to <code>FALSE</code>."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "solve.reStruct",
			"args": [{
				"name": "a",
				"description": "an object inheriting from class <code>reStruct</code>,\n   representing a random effects structure and consisting of a list of\n   <code>pdMat</code> objects."
			}, {
				"name": "b",
				"description": "this argument is only included for consistency with the\n   generic function and is not used in this method function."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "Variogram.corRatio",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>corRatio</code>,\n    representing an Rational Quadratic spatial correlation structure."
			}, {
				"name": "distance",
				"description": "an optional numeric vector with the distances at\n    which the semi-variogram is to be calculated. Defaults to\n    <code>NULL</code>, in which case a sequence of length <code>length.out</code>\n    between the minimum and maximum values of\n    <code>getCov</code>"
			}, {
				"name": "sig2",
				"description": "an optional numeric value representing the process\n    variance. Defaults to <code>1</code>."
			}, {
				"name": "length.out",
				"description": "an optional integer specifying the length of the\n    sequence of distances to be used for calculating the semi-variogram,\n    when <code>distance = NULL</code>. Defaults to <code>50</code>."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "as.matrix.reStruct",
			"args": [{
				"name": "x",
				"description": "an object inheriting from class <code>reStruct</code>, representing\n   a random effects structure and consisting of a list of <code>pdMat</code>\n   objects."
			}]
		}, {
			"name": "augPred",
			"args": [{
				"name": "object",
				"description": "a fitted model object from which predictions can be\n   extracted, using a <code>predict</code> method."
			}, {
				"name": "primary",
				"description": "an optional one-sided formula specifying the primary\n   covariate to be used to generate the augmented predictions. By\n   default, if a  covariate can be extracted from the data used to generate\n   <code>object</code> (using <code>getCovariate</code>), it"
			}, {
				"name": "minimum",
				"description": "an optional lower limit for the primary\n   covariate. Defaults to <code>min(primary)</code>."
			}, {
				"name": "maximum",
				"description": "an optional upper limit for the primary\n   covariate. Defaults to <code>max(primary)</code>."
			}, {
				"name": "length.out",
				"description": "an optional integer with the number of primary\n   covariate values at which to evaluate the predictions. Defaults to\n   51."
			}, {
				"name": "...",
				"description": "some methods for the generic may require additional\n   arguments."
			}]
		}, {
			"name": "Names.formula",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>formula</code>."
			}, {
				"name": "data",
				"description": "an optional data frame containing the variables specified\n   in <code>object</code>. By default the variables are taken from the\n   environment from which <code>Names.formula</code> is called."
			}, {
				"name": "exclude",
				"description": "an optional character vector with names to be excluded\n   from the returned value. Default is <code>c(&quot;pi&quot;,&quot;.&quot;)</code>."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "fitted.lme",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>lme</code>, representing\n   a fitted linear mixed-effects model."
			}, {
				"name": "level",
				"description": "an optional integer vector giving the level(s) of grouping\n   to be used in extracting the fitted values from <code>object</code>. Level\n   values increase from outermost to innermost grouping, with\n   level zero corresponding to the population fitted val"
			}, {
				"name": "asList",
				"description": "an optional logical value. If <code>TRUE</code> and a single\n   value is given in <code>level</code>, the returned object is a list with\n   the fitted values split by groups; else the returned value is\n   either a vector or a data frame, according to the"
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "varConstPower",
			"args": [{
				"name": "const, power",
				"description": "optional numeric vectors, or lists of numeric\n    values, with, respectively, the coefficients for the constant \n    and the power terms. Both arguments must have length one, unless a\n    grouping factor is specified in <code>form</code>. If either argume"
			}, {
				"name": "form",
				"description": "an optional one-sided formula of the form <code>~ v</code>, or\n    <code>~ v | g</code>, specifying a variance covariate <code>v</code> and,\n    optionally, a grouping factor <code>g</code> for the coefficients. The\n    variance covariate must evaluate to"
			}, {
				"name": "fixed",
				"description": "an optional list with components <code>const</code> and/or\n    <code>power</code>, consisting of numeric vectors, or lists of numeric\n    values, specifying the values at which some or all of the\n    coefficients in the variance function should be fixed."
			}]
		}, {
			"name": "glsStruct",
			"args": [{
				"name": "corStruct",
				"description": "an optional <code>corStruct</code> object, representing a\n   correlation structure. Default is <code>NULL</code>."
			}, {
				"name": "varStruct",
				"description": "an optional <code>varFunc</code> object, representing a\n   variance function structure. Default is <code>NULL</code>."
			}]
		}, {
			"name": "logLik.reStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>reStruct</code>,\n   representing a random effects structure and consisting of a list of\n   <code>pdMat</code> objects."
			}, {
				"name": "conLin",
				"description": "a condensed linear model object, consisting of a list\n   with components <code>&quot;Xy&quot;</code>, corresponding to a regression matrix\n   (<code>X</code>) combined with a response vector (<code>y</code>), and\n   <code>&quot;logLik&quot;</code>, corresponding to the log-l"
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "Dim.corStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>corStruct</code>,\n   representing a correlation structure."
			}, {
				"name": "groups",
				"description": "an optional factor defining the grouping of the\n   observations; observations within a group are correlated and\n   observations in different groups are uncorrelated."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "gnlsStruct",
			"args": [{
				"name": "corStruct",
				"description": "an optional <code>corStruct</code> object, representing a\n   correlation structure. Default is <code>NULL</code>."
			}, {
				"name": "varStruct",
				"description": "an optional <code>varFunc</code> object, representing a\n   variance function structure. Default is <code>NULL</code>."
			}]
		}, {
			"name": "Covariate",
			"args": [{
				"name": "object",
				"description": "any object with a <code>covariate</code> component."
			}, {
				"name": "value",
				"description": "a value to be assigned to the covariate associated with\n   <code>object</code>."
			}]
		}, {
			"name": "lmeObject",
			"args": []
		}, {
			"name": "getCovariate.corStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>corStruct</code>\n   representing a correlation structure."
			}, {
				"name": "form",
				"description": "this argument is included to make the method function\n   compatible with the generic. It will be assigned the value of\n   <code>formula(object)</code> and should not be modified."
			}, {
				"name": "data",
				"description": "an optional data frame in which to evaluate the variables\n   defined in <code>form</code>, in case <code>object</code> is not initialized and\n   the covariate needs to be evaluated."
			}]
		}, {
			"name": "getData.lme",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>lme</code>, representing\n   a linear mixed-effects fitted model."
			}]
		}, {
			"name": "glsObject",
			"args": []
		}, {
			"name": "Dim",
			"args": [{
				"name": "object",
				"description": "any object for which dimensions can be extracted."
			}, {
				"name": "...",
				"description": "some methods for this generic function require additional\n   arguments."
			}]
		}, {
			"name": "update.modelStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>modelStruct</code>,\n    representing a list of model components, such as <code>corStruct</code> and\n    <code>varFunc</code> objects."
			}, {
				"name": "data",
				"description": "a data frame in which to evaluate the variables needed for\n    updating the elements of <code>object</code>."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "Initialize.glsStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>glsStruct</code>,\n   representing a list of linear model components, such as\n   <code>corStruct</code> and <code>varFunc</code> objects."
			}, {
				"name": "data",
				"description": "a data frame in which to evaluate the variables defined in\n   <code>formula(object)</code>."
			}, {
				"name": "control",
				"description": "an optional list with control parameters for the\n   initialization and optimization algorithms used in\n   <code>gls</code>. Defaults to <code>list(singular.ok = FALSE, qrTol =\n     .Machine$single.eps)</code>, implying that linear dependencies are not"
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "Matrix",
			"args": [{
				"name": "object",
				"description": "any object to which <code>as.matrix</code> can be applied."
			}, {
				"name": "value",
				"description": "a matrix, or list of matrices, with the same dimensions as\n   <code>as.matrix(object)</code> with the new values to be assigned to the\n   matrix associated with <code>object</code>."
			}]
		}, {
			"name": "glsControl",
			"args": [{
				"name": "maxIter",
				"description": "maximum number of iterations for the <code>gls</code>\n   optimization algorithm. Default is 50."
			}, {
				"name": "msMaxIter",
				"description": "maximum number of iterations\n   for the optimization step inside the <code>gls</code>\n   optimization. Default is 50."
			}, {
				"name": "tolerance",
				"description": "tolerance for the convergence criterion in the\n   <code>gls</code> algorithm. Default is 1e-6."
			}, {
				"name": "msTol",
				"description": "tolerance for the convergence criterion in <code>ms</code>,\n   passed as the <code>rel.tolerance</code> argument to the function (see\n   documentation on <code>ms</code>). Default is 1e-7."
			}, {
				"name": "msScale",
				"description": "scale function passed as the <code>scale</code> argument to\n   the <code>ms</code> function (see documentation on that function). Default\n   is <code>lmeScale</code>."
			}, {
				"name": "msVerbose",
				"description": "a logical value passed as the <code>trace</code> argument to\n   <code>ms</code> (see documentation on that function). Default is\n   <code>FALSE</code>."
			}, {
				"name": "singular.ok",
				"description": "a logical value indicating whether non-estimable\n   coefficients (resulting from linear dependencies among the columns of\n   the regression matrix) should be allowed. Default is <code>FALSE</code>."
			}, {
				"name": "qrTol",
				"description": "a tolerance for detecting linear dependencies among the\n   columns of the regression matrix in its QR decomposition. Default is\n   <code>.Machine$single.eps</code>."
			}, {
				"name": "returnObject",
				"description": "a logical value indicating whether the fitted\n   object should be returned when the maximum number of iterations is\n   reached without convergence of the algorithm. Default is\n   <code>FALSE</code>."
			}, {
				"name": "apVar",
				"description": "a logical value indicating whether the approximate\n   covariance matrix of the variance-covariance parameters should be\n   calculated. Default is <code>TRUE</code>."
			}, {
				"name": ".relStep",
				"description": "relative step for numerical derivatives\n   calculations. Default is <code>.Machine$double.eps^(1/3)</code>."
			}, {
				"name": "nlmStepMax",
				"description": "stepmax value to be passed to nlm. See\n   <code><a href=\"/link/nlm?package=nlme&amp;version=3.1-68.1\" rd-options=\"\">nlm</a></code> for details. Default is 100.0"
			}, {
				"name": "optimMethod",
				"description": "character - the optimization method to be used with\n   the <code><a href=\"/link/optim?package=nlme&amp;version=3.1-68.1&amp;to=stats\" rd-options=\"stats\">optim</a></code> optimizer. The default is\n   <code>&quot;BFGS&quot;</code>.  An alternative is <code>&quot;L-BFGS-B&quot;</code>."
			}, {
				"name": "minAbsParApVar",
				"description": "numeric value - minimum absolute parameter value\n   in the approximate variance calculation.  The default is <code>0.05</code>."
			}, {
				"name": "natural",
				"description": "logical.  Should the natural parameterization be used\n   for the approximate variance calculations?  Default is <code>TRUE</code>."
			}]
		}, {
			"name": "needUpdate.modelStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>modelStruct</code>,\n   representing a list of model components, such as <code>corStruct</code> and\n   <code>varFunc</code> objects."
			}]
		}, {
			"name": "Dim.pdMat",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>pdMat</code>,\n   representing a positive-definite matrix."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "as.matrix.pdMat",
			"args": [{
				"name": "x",
				"description": "an object inheriting from class <code>pdMat</code>, representing a\n   positive-definite matrix."
			}]
		}, {
			"name": "pdMat",
			"args": [{
				"name": "value",
				"description": "an optional initialization value, which can be any of the\n   following: a <code>pdMat</code> object, a positive-definite\n   matrix, a one-sided linear formula (with variables separated by\n   <code>+</code>), a vector of character strings, or a numeric"
			}, {
				"name": "form",
				"description": "an optional one-sided linear formula specifying the\n   row/column names for the matrix represented by <code>object</code>. Because\n   factors may be present in <code>form</code>, the formula needs to be\n   evaluated on a data.frame to resolve the names it"
			}, {
				"name": "nam",
				"description": "an optional vector of character strings specifying the\n   row/column names for the matrix represented by object. It must have \n   length equal to the dimension of the underlying positive-definite\n   matrix and unreplicated elements. This argument is ignor"
			}, {
				"name": "data",
				"description": "an optional data frame in which to evaluate the variables\n   named in <code>value</code> and <code>form</code>. It is used to\n   obtain the levels for <code>factors</code>, which affect the\n   dimensions and the row/column names of the underlying matrix."
			}, {
				"name": "pdClass",
				"description": "an optional character string naming the\n   <code>pdMat</code> class to be assigned to the returned object. This\n   argument will only be used when <code>value</code> is not a <code>pdMat</code> \n   object. Defaults to <code>&quot;pdSymm&quot;</code>."
			}]
		}, {
			"name": "gsummary",
			"args": [{
				"name": "object",
				"description": "an object to be summarized - usually a <code>groupedData</code>\n   object or a <code>data.frame</code>."
			}, {
				"name": "FUN",
				"description": "an optional summary function or a list of summary functions\n   to be applied to each variable in the frame.  The function or\n   functions are applied only to variables in <code>object</code> that vary\n   within the groups defined by <code>groups</code>."
			}, {
				"name": "omitGroupingFactor",
				"description": "an optional logical value.  When <code>TRUE</code>\n   the grouping factor itself will be omitted from the group-wise\n   summary but the levels of the grouping factor will continue to be\n   used as the row names for the data frame that is produced by the"
			}, {
				"name": "form",
				"description": "an optional one-sided formula that defines the groups.\n   When this formula is given, the right-hand side is evaluated in\n   <code>object</code>, converted to a factor if necessary, and the unique\n   levels are used to define the groups.  Defaults to\n   &lt;"
			}, {
				"name": "level",
				"description": "an optional positive integer giving the level of grouping\n   to be used in an object with multiple nested grouping levels.\n   Defaults to the highest or innermost level of grouping."
			}, {
				"name": "groups",
				"description": "an optional factor that will be used to split the \n   rows into groups.  Defaults to <code>getGroups(object, form, level)</code>."
			}, {
				"name": "invariantsOnly",
				"description": "an optional logical value.  When <code>TRUE</code> only \n   those covariates that are invariant within each group will be\n   summarized.  The summary value for the group is always the unique\n   value taken on by that covariate within the group.  The colum"
			}, {
				"name": "...",
				"description": "optional additional arguments to the summary functions\n   that are invoked on the variables by group.  Often it is helpful to\n   specify <code>na.rm = TRUE</code>."
			}]
		}, {
			"name": "pdSymm",
			"args": [{
				"name": "value",
				"description": "an optional initialization value, which can be any of the\n   following: a <code>pdMat</code> object, a positive-definite\n   matrix, a one-sided linear formula (with variables separated by\n   <code>+</code>), a vector of character strings, or a numeric"
			}, {
				"name": "form",
				"description": "an optional one-sided linear formula specifying the\n   row/column names for the matrix represented by <code>object</code>. Because\n   factors may be present in <code>form</code>, the formula needs to be\n   evaluated on a data.frame to resolve the names it"
			}, {
				"name": "nam",
				"description": "an optional vector of character strings specifying the\n   row/column names for the matrix represented by object. It must have \n   length equal to the dimension of the underlying positive-definite\n   matrix and unreplicated elements. This argument is ignor"
			}, {
				"name": "data",
				"description": "an optional data frame in which to evaluate the variables\n   named in <code>value</code> and <code>form</code>. It is used to\n   obtain the levels for <code>factors</code>, which affect the\n   dimensions and the row/column names of the underlying matrix."
			}]
		}, {
			"name": "Initialize.reStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>reStruct</code>,\n   representing a random effects structure and consisting of a list of\n   <code>pdMat</code> objects."
			}, {
				"name": "data",
				"description": "a data frame in which to evaluate the variables defined in\n   <code>formula(object)</code>."
			}, {
				"name": "conLin",
				"description": "a condensed linear model object, consisting of a list\n   with components <code>&quot;Xy&quot;</code>, corresponding to a regression matrix\n   (<code>X</code>) combined with a response vector (<code>y</code>), and\n   <code>&quot;logLik&quot;</code>, corresponding to the log-l"
			}, {
				"name": "control",
				"description": "an optional list with a single component <code>niterEM</code>\n   controlling the number of iterations for the EM algorithm used to\n   refine initial parameter estimates. It is given as a list for\n   compatibility with other <code>Initialize</code> methods"
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "logLik.corStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>corStruct</code>,\n   representing a correlation structure."
			}, {
				"name": "data",
				"description": "this argument is included to make this method function\n   compatible with other <code>logLik</code> methods and will be ignored."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "coef.lme",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>lme</code>, representing\n   a fitted linear mixed-effects model."
			}, {
				"name": "augFrame",
				"description": "an optional logical value. If <code>TRUE</code>, the returned\n   data frame is augmented with variables defined in <code>data</code>; else,\n   if <code>FALSE</code>, only the coefficients are returned. Defaults to\n   <code>FALSE</code>."
			}, {
				"name": "level",
				"description": "an optional positive integer giving the level of grouping\n   to be used in extracting the coefficients from an object with\n   multiple nested grouping levels. Defaults to the highest or innermost\n   level of grouping."
			}, {
				"name": "data",
				"description": "an optional data frame with the variables to be used for\n   augmenting the returned data frame when <code>augFrame =\n     TRUE</code>. Defaults to the data frame used to fit <code>object</code>."
			}, {
				"name": "which",
				"description": "an optional positive integer or character vector\n   specifying which columns of <code>data</code> should be used in the\n   augmentation of the returned data frame. Defaults to all columns in\n   <code>data</code>."
			}, {
				"name": "FUN",
				"description": "an optional summary function or a list of summary functions\n   to be applied to group-varying variables, when collapsing <code>data</code>\n   by groups.  Group-invariant variables are always summarized by the\n   unique value that they assume within that g"
			}, {
				"name": "omitGroupingFactor",
				"description": "an optional logical value.  When <code>TRUE</code>\n   the grouping factor itself will be omitted from the group-wise\n   summary of <code>data</code> but the levels of the grouping factor will\n   continue to be used as the row names for the returned data f"
			}, {
				"name": "subset",
				"description": "an optional expression specifying a subset"
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "Initialize",
			"args": [{
				"name": "object",
				"description": "any object requiring initialization, e.g. &quot;plug-in&quot;\n   structures such as <code>corStruct</code> and <code>varFunc</code> objects."
			}, {
				"name": "data",
				"description": "a data frame to be used in the initialization procedure."
			}, {
				"name": "...",
				"description": "some methods for this generic function require additional\n   arguments."
			}]
		}, {
			"name": "balancedGrouped",
			"args": [{
				"name": "form",
				"description": "A formula of the form <code>y ~ x | g</code> giving the name of\n   the response, the primary covariate, and the grouping factor."
			}, {
				"name": "data",
				"description": "A matrix or data frame containing the values of the\n   response grouped according to the levels of the grouping factor\n   (rows) and the distinct levels of the primary covariate (columns).\n   The <code>dimnames</code> of the matrix are used to construct t"
			}, {
				"name": "labels",
				"description": "an optional list of character strings giving labels for\n   the response and the primary covariate.  The label for the primary\n   covariate is named <code>x</code> and that for the response is named\n   <code>y</code>.  Either label can be omitted."
			}, {
				"name": "units",
				"description": "an optional list of character strings giving the units for\n   the response and the primary covariate.  The units string for the\n   primary covariate is named <code>x</code> and that for the response is\n   named <code>y</code>.  Either units string can be"
			}]
		}, {
			"name": "plot.lme",
			"args": [{
				"name": "x",
				"description": "an object inheriting from class <code>lme</code>, representing\n   a fitted linear mixed-effects model, or from <code>nls</code>, representing\n   an fitted nonlinear least squares model."
			}, {
				"name": "form",
				"description": "an optional formula specifying the desired type of\n   plot. Any variable present in the original data frame used to obtain\n   <code>x</code> can be referenced. In addition, <code>x</code> itself\n   can be referenced in the formula using the symbol"
			}, {
				"name": "abline",
				"description": "an optional numeric value, or numeric vector of length\n   two. If given as a single value, a horizontal line will be added to the\n   plot at that coordinate; else, if given as a vector, its values are\n   used as the intercept and slope for a line added to"
			}, {
				"name": "id",
				"description": "an optional numeric value, or one-sided formula. If given as\n   a value, it is used as a significance level for a two-sided outlier\n   test for the standardized, or normalized residuals. Observations with\n   absolute standardized (normalized) residuals gr"
			}, {
				"name": "idLabels",
				"description": "an optional vector, or one-sided formula. If given as a\n   vector, it is converted to character and used to label the\n   observations identified according to <code>id</code>. If given as a\n   one-sided formula, its right hand side must evaluate to a vecto"
			}, {
				"name": "idResType",
				"description": "an optional character string specifying the type of\n   residuals to be used in identifying outliers, when <code>id</code> is a\n   numeric value. If <code>&quot;pearson&quot;</code>, the standardized residuals (raw \n   residuals divided by the corresponding standard"
			}, {
				"name": "grid",
				"description": "an optional logical value indicating whether a grid should\n   be added to plot. Default depends on the type of Trellis plot used:\n   if <code>xyplot</code> defaults to <code>TRUE</code>, else defaults to\n   <code>FALSE</code>."
			}, {
				"name": "...",
				"description": "optional arguments passed to the Trellis plot function."
			}]
		}, {
			"name": "asOneFormula",
			"args": [{
				"name": "...",
				"description": "objects, or lists of objects, from which a formula can be\n   extracted."
			}, {
				"name": "omit",
				"description": "an optional character vector with the names of variables to\n   be omitted from the returned formula. Defaults to c(&quot;.&quot;, &quot;pi&quot;)."
			}]
		}, {
			"name": "compareFits",
			"args": [{
				"name": "object1,object2",
				"description": "data frames, or matrices, with the same\n   row names, but possibly different column names. These will usually\n   correspond to coefficients from fitted objects with a grouping\n   structure (e.g. <code>lme</code> and <code>lmList</code> objects)."
			}, {
				"name": "which",
				"description": "an optional integer or character vector indicating which\n   columns in <code>object1</code> and <code>object2</code> are to be used in the\n   returned object. Defaults to all columns."
			}]
		}, {
			"name": "Variogram.corSpher",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>corSpher</code>,\n    representing an Spherical spatial correlation structure."
			}, {
				"name": "distance",
				"description": "an optional numeric vector with the distances at\n    which the semi-variogram is to be calculated. Defaults to\n    <code>NULL</code>, in which case a sequence of length <code>length.out</code>\n    between the minimum and maximum values of\n    <code>getCov</code>"
			}, {
				"name": "sig2",
				"description": "an optional numeric value representing the process\n    variance. Defaults to <code>1</code>."
			}, {
				"name": "length.out",
				"description": "an optional integer specifying the length of the\n    sequence of distances to be used for calculating the semi-variogram,\n    when <code>distance = NULL</code>. Defaults to <code>50</code>."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "corSpatial",
			"args": [{
				"name": "value",
				"description": "an optional vector with the parameter values in\n   constrained form. If <code>nugget</code> is <code>FALSE</code>, <code>value</code> can\n   have only one element, corresponding to the &quot;range&quot; of the\n   spatial correlation structure, which must be greater"
			}, {
				"name": "form",
				"description": "a one sided formula of the form <code>~ S1+...+Sp</code>, or\n   <code>~ S1+...+Sp | g</code>, specifying spatial covariates <code>S1</code>\n   through <code>Sp</code> and,  optionally, a grouping factor <code>g</code>. \n   When a grouping factor is presen"
			}, {
				"name": "nugget",
				"description": "an optional logical value indicating whether a nugget\n   effect is present. Defaults to <code>FALSE</code>."
			}, {
				"name": "type",
				"description": "an optional character string specifying the desired type of\n   correlation structure. Available types include <code>&quot;spherical&quot;</code>,\n   <code>&quot;exponential&quot;</code>, <code>&quot;gaussian&quot;</code>, <code>&quot;linear&quot;</code>, and\n   <code>&quot;rational&quot;</code>. See the"
			}, {
				"name": "metric",
				"description": "an optional character string specifying the distance\n   metric to be used. The currently available options are\n   <code>&quot;euclidean&quot;</code> for the root sum-of-squares of distances;\n   <code>&quot;maximum&quot;</code> for the maximum difference; and <code>&quot;manhattan</code>"
			}, {
				"name": "fixed",
				"description": "an optional logical value indicating whether the\n   coefficients should be allowed to vary in the optimization, or kept\n   fixed at their initial value. Defaults to <code>FALSE</code>, in which case\n   the coefficients are allowed to vary."
			}]
		}, {
			"name": "Names.reStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>reStruct</code>,\n   representing a random effects structure and consisting of a list of\n   <code>pdMat</code> objects."
			}, {
				"name": "value",
				"description": "a list of character vectors with the replacement values\n   for the names of the individual <code>pdMat</code> objects that form\n   <code>object</code>. It must have the same length as <code>object</code>."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "comparePred",
			"args": [{
				"name": "object1,object2",
				"description": "fitted model objects, from which predictions can\n   be extracted using the <code>predict</code> method."
			}, {
				"name": "primary",
				"description": "an optional one-sided formula specifying the primary\n   covariate to be used to generate the augmented predictions. By\n   default, if a  covariate can be extracted from the data used to generate\n   the objects (using <code>getCovariate</code>), it will be"
			}, {
				"name": "minimum",
				"description": "an optional lower limit for the primary\n   covariate. Defaults to <code>min(primary)</code>."
			}, {
				"name": "maximum",
				"description": "an optional upper limit for the primary\n   covariate. Defaults to <code>max(primary)</code>."
			}, {
				"name": "length.out",
				"description": "an optional integer with the number of primary\n   covariate values at which to evaluate the predictions. Defaults to\n   51."
			}, {
				"name": "level",
				"description": "an optional integer specifying the desired\n   prediction level. Levels increase from outermost to innermost\n   grouping, with level 0 representing the population (fixed effects)\n   predictions. Only one level can be specified. Defaults to the\n   innermost"
			}, {
				"name": "...",
				"description": "some methods for the generic may require additional\n   arguments."
			}]
		}, {
			"name": "lmList.groupedData",
			"args": [{
				"name": "object",
				"description": "a data frame inheriting from class <code>groupedData</code>."
			}, {
				"name": "data",
				"description": "this argument is included for consistency with the generic\n    function. It is ignored in this method function."
			}, {
				"name": "level",
				"description": "an optional integer specifying the level of grouping to be used when \n    multiple nested levels of grouping are present."
			}, {
				"name": "subset",
				"description": "an optional expression indicating which subset of the rows of\n    <code>data</code> should  be  used in the fit. This can be a logical\n    vector, or a numeric vector indicating which observation numbers are\n    to be included, or a  character  vector of"
			}, {
				"name": "na.action",
				"description": "a function that indicates what should happen when the\n    data contain <code>NA</code>s.  The default action (<code>na.fail</code>) causes\n    <code>lmList</code> to print an error message and terminate if there are any\n    incomplete observations."
			}, {
				"name": "pool",
				"description": "an optional logical value that is preserved as an attribute of the\n    returned value.  This will be used as the default for <code>pool</code> in\n    calculations of standard deviations or standard errors for summaries."
			}]
		}, {
			"name": "formula.pdMat",
			"args": [{
				"name": "x",
				"description": "an object inheriting from class <code>pdMat</code>, representing\n   a positive definite matrix."
			}, {
				"name": "asList",
				"description": "logical.  Should the asList argument be applied to each\n   of the components?  Never used."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "plot.ranef.lme",
			"args": [{
				"name": "x",
				"description": "an object inheriting from class\n   <code>ranef.lme</code>, representing the estimated coefficients or\n   estimated random effects for the <code>lme</code> object from which it was\n   produced."
			}, {
				"name": "form",
				"description": "an optional formula specifying the desired type of plot. If\n     given as a one-sided formula, a <code>dotplot</code> of the estimated\n     random effects (coefficients) grouped according to all combinations of\n     the levels of the factors named in"
			}, {
				"name": "omitFixed",
				"description": "an optional logical value indicating whether\n   columns with values that are constant across groups should be\n   omitted. Default is <code>TRUE</code>."
			}, {
				"name": "level",
				"description": "an optional integer value giving the level of grouping\n   to be used for <code>x</code>. Only used when <code>x</code> is a list\n   with different components for each grouping level. Defaults to the\n   highest or innermost level of grouping."
			}, {
				"name": "grid",
				"description": "an optional logical value indicating whether a grid should\n   be added to plot. Only applies to plots associated with two-sided\n   formulas in <code>form</code>. Default is <code>FALSE</code>."
			}, {
				"name": "control",
				"description": "an optional list with control values for the\n     plot, when <code>form</code> is given as a two-sided formula. The control\n     values are referenced by name in the <code>control</code> list and  only\n     the ones to be modified from the default need to"
			}, {
				"name": "...",
				"description": "optional arguments passed to the Trellis <code>dotplot</code>\n   function."
			}]
		}, {
			"name": "nlmeStruct",
			"args": [{
				"name": "reStruct",
				"description": "a <code>reStruct</code> representing a random effects\n   structure."
			}, {
				"name": "corStruct",
				"description": "an optional <code>corStruct</code> object, representing a\n   correlation structure. Default is <code>NULL</code>."
			}, {
				"name": "varStruct",
				"description": "an optional <code>varFunc</code> object, representing a\n   variance function structure. Default is <code>NULL</code>."
			}]
		}, {
			"name": "coef.gnls",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>gnls</code>, representing\n   a generalized nonlinear least squares fitted model."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "lme",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>lme</code>, representing\n   a fitted linear mixed-effects model."
			}, {
				"name": "fixed",
				"description": "a two-sided linear formula object describing the\n    fixed-effects part of the model, with the response on the left of a\n    <code>~</code> operator and the terms, separated by <code>+</code> operators, on\n    the right, an <code>lmList</code> object, or"
			}, {
				"name": "fixed.",
				"description": "Changes to the fixed-effects formula -- see\n   <code>update.formula</code> for details."
			}, {
				"name": "data",
				"description": "an optional data frame containing the variables named in\n   <code>fixed</code>, <code>random</code>, <code>correlation</code>, <code>weights</code>, and\n   <code>subset</code>.  By default the variables are taken from the\n   environment from which <code>l</code>"
			}, {
				"name": "random",
				"description": "optionally, any of the following: (i) a one-sided formula\n   of the form <code>~x1+...+xn | g1/.../gm</code>, with <code>x1+...+xn</code>\n   specifying the model for the random effects and <code>g1/.../gm</code> the\n   grouping structure (<code>m</code> m"
			}, {
				"name": "correlation",
				"description": "an optional <code>corStruct</code> object describing the\n   within-group correlation structure. See the documentation of\n   <code>corClasses</code> for a description of the available <code>corStruct</code>\n   classes. Defaults to <code>NULL</code>,\n   cor"
			}, {
				"name": "weights",
				"description": "an optional <code>varFunc</code> object or one-sided formula\n   describing the within-group heteroscedasticity structure. If given as\n   a formula, it is used as the argument to <code>varFixed</code>,\n   corresponding to fixed variance weights. See the do"
			}, {
				"name": "subset",
				"description": "an optional expression indicating the subset of the rows of\n   <code>data</code> that should be used in the fit. This can be a logical\n   vector, or a numeric vector indicating which observation numbers are\n   to be included, or a  character  vector of th"
			}, {
				"name": "method",
				"description": "a character string.  If <code>&quot;REML&quot;</code> the model is fit by\n   maximizing the restricted log-likelihood.  If <code>&quot;ML&quot;</code> the\n   log-likelihood is maximized.  Defaults to <code>&quot;REML&quot;</code>."
			}, {
				"name": "na.action",
				"description": "a function that indicates what should happen when the\n   data contain <code>NA</code>s.  The default action (<code>na.fail</code>) causes\n   <code>lme</code> to print an error message and terminate if there are any\n   incomplete observations."
			}, {
				"name": "control",
				"description": "a list of control values for the estimation algorithm to\n   replace the default values returned by the function <code>lmeControl</code>.\n   Defaults to an empty list."
			}, {
				"name": "contrasts",
				"description": "an optional list. See the <code>contrasts.arg</code>\n   of <code>model.matrix.default</code>."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}, {
				"name": "evaluate",
				"description": "If <code>TRUE</code> evaluate the new call else return the call."
			}]
		}, {
			"name": "pdClasses",
			"args": []
		}, {
			"name": "nlme.nlsList",
			"args": [{
				"name": "model",
				"description": "an object inheriting from class <code>nlsList</code>,\n    representing a list of <code>nls</code> fits with a common model."
			}, {
				"name": "data",
				"description": "this argument is included for consistency with the generic\n    function. It is ignored in this method function."
			}, {
				"name": "fixed",
				"description": "this argument is included for consistency with the generic\n    function. It is ignored in this method function."
			}, {
				"name": "random",
				"description": "an optional one-sided linear formula with no conditioning\n   expression, or a <code>pdMat</code> object with a <code>formula</code>\n   attribute. Multiple levels of grouping are not allowed with this\n   method function.  Defaults to a formula consisting o"
			}, {
				"name": "groups",
				"description": "an optional one-sided formula of the form <code>~g1</code>\n   (single level of nesting) or <code>~g1/.../gQ</code> (multiple levels of\n   nesting), specifying the partitions of the data over which the random\n   effects vary. <code>g1,...,gQ</code> must ev"
			}, {
				"name": "start",
				"description": "an optional numeric vector, or list of initial estimates\n   for the fixed effects and random effects. If declared as a numeric\n   vector, it is converted internally to a list with a single component\n   <code>fixed</code>, given by the vector. The <code>fi</code>"
			}, {
				"name": "correlation",
				"description": "an optional <code>corStruct</code> object describing the\n   within-group correlation structure. See the documentation of\n   <code>corClasses</code> for a description of the available <code>corStruct</code>\n   classes. Defaults to <code>NULL</code>, corres"
			}, {
				"name": "weights",
				"description": "an optional <code>varFunc</code> object or one-sided formula\n   describing the within-group heteroscedasticity structure. If given as\n   a formula, it is used as the argument to <code>varFixed</code>,\n   corresponding to fixed variance weights. See the do"
			}, {
				"name": "subset",
				"description": "an optional expression indicating the subset of the rows of\n   <code>data</code> that should be used in the fit. This can be a logical\n   vector, or a numeric vector indicating which observation numbers are\n   to be included, or a  character  vector of th"
			}, {
				"name": "method",
				"description": "a character string.  If <code>&quot;REML&quot;</code> the model is fit by\n   maximizing the restricted log-likelihood.  If <code>&quot;ML&quot;</code> the\n   log-likelihood is maximized.  Defaults to <code>&quot;ML&quot;</code>."
			}, {
				"name": "na.action",
				"description": "a function that indicates what should happen when the\n   data contain <code>NA</code>s.  The default action (<code>na.fail</code>) causes\n   <code>nlme</code> to print an error message and terminate if there are any\n   incomplete observations."
			}, {
				"name": "naPattern",
				"description": "an expression or formula object, specifying which returned\n   values are to be regarded as missing."
			}, {
				"name": "control",
				"description": "a list of control values for the estimation algorithm to\n   replace the default values returned by the function <code>nlmeControl</code>.\n   Defaults to an empty list."
			}, {
				"name": "verbose",
				"description": "an optional logical value. If <code>TRUE</code> information on\n   the evolution of the iterative algorithm is printed. Default is\n   <code>FALSE</code>."
			}]
		}, {
			"name": "Variogram.corLin",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>corLin</code>,\n    representing an Linear spatial correlation structure."
			}, {
				"name": "distance",
				"description": "an optional numeric vector with the distances at\n    which the semi-variogram is to be calculated. Defaults to\n    <code>NULL</code>, in which case a sequence of length <code>length.out</code>\n    between the minimum and maximum values of\n    <code>getCov</code>"
			}, {
				"name": "sig2",
				"description": "an optional numeric value representing the process\n    variance. Defaults to <code>1</code>."
			}, {
				"name": "length.out",
				"description": "an optional integer specifying the length of the\n    sequence of distances to be used for calculating the semi-variogram,\n    when <code>distance = NULL</code>. Defaults to <code>50</code>."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "needUpdate",
			"args": [{
				"name": "object",
				"description": "any object"
			}]
		}, {
			"name": "corGaus",
			"args": [{
				"name": "value",
				"description": "an optional vector with the parameter values in\n   constrained form. If <code>nugget</code> is <code>FALSE</code>, <code>value</code> can\n   have only one element, corresponding to the &quot;range&quot; of the\n   Gaussian correlation structure, which must be greate"
			}, {
				"name": "form",
				"description": "a one sided formula of the form <code>~ S1+...+Sp</code>, or\n   <code>~ S1+...+Sp | g</code>, specifying spatial covariates <code>S1</code>\n   through <code>Sp</code> and,  optionally, a grouping factor <code>g</code>. \n   When a grouping factor is presen"
			}, {
				"name": "nugget",
				"description": "an optional logical value indicating whether a nugget\n   effect is present. Defaults to <code>FALSE</code>."
			}, {
				"name": "metric",
				"description": "an optional character string specifying the distance\n   metric to be used. The currently available options are\n   <code>&quot;euclidean&quot;</code> for the root sum-of-squares of distances;\n   <code>&quot;maximum&quot;</code> for the maximum difference; and <code>&quot;manhattan</code>"
			}, {
				"name": "fixed",
				"description": "an optional logical value indicating whether the\n   coefficients should be allowed to vary in the optimization, or kept\n   fixed at their initial value. Defaults to <code>FALSE</code>, in which case\n   the coefficients are allowed to vary."
			}]
		}, {
			"name": "getGroups.corStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>corStruct</code>\n   representing a correlation structure."
			}, {
				"name": "form",
				"description": "this argument is included to make the method function\n   compatible with the generic. It will be assigned the value of\n   <code>formula(object)</code> and should not be modified."
			}, {
				"name": "level",
				"description": "this argument is included to make the method function\n   compatible with the generic and is not used."
			}, {
				"name": "data",
				"description": "an optional data frame in which to evaluate the variables\n   defined in <code>form</code>, in case <code>object</code> is not initialized and\n   the grouping factor needs to be evaluated."
			}, {
				"name": "sep",
				"description": "character, the separator to use between group levels when\n   multiple levels are collapsed.  The default is <code>&apos;/&apos;</code>."
			}]
		}, {
			"name": "Variogram.corSpatial",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>corSpatial</code>,\n    representing spatial correlation structure."
			}, {
				"name": "distance",
				"description": "an optional numeric vector with the distances at\n    which the semi-variogram is to be calculated. Defaults to\n    <code>NULL</code>, in which case a sequence of length <code>length.out</code>\n    between the minimum and maximum values of\n    <code>getCov</code>"
			}, {
				"name": "sig2",
				"description": "an optional numeric value representing the process\n    variance. Defaults to <code>1</code>."
			}, {
				"name": "length.out",
				"description": "an optional integer specifying the length of the\n    sequence of distances to be used for calculating the semi-variogram,\n    when <code>distance = NULL</code>. Defaults to <code>50</code>."
			}, {
				"name": "FUN",
				"description": "a function of two arguments, the distance and the range\n    corresponding to <code>object</code>, specifying the semi-variogram\n    model."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "logLik.lmeStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>lmeStruct</code>,\n   representing a list of linear mixed-effects model components, such as\n   <code>reStruct</code>, <code>corStruct</code>, and <code>varFunc</code> objects."
			}, {
				"name": "Pars",
				"description": "the parameter values at which the (restricted)\n   log-likelihood is to be evaluated."
			}, {
				"name": "conLin",
				"description": "an optional condensed linear model object, consisting of\n   a list with components <code>&quot;Xy&quot;</code>, corresponding to a regression\n   matrix (<code>X</code>) combined with a response vector (<code>y</code>), and \n   <code>&quot;logLik&quot;</code>, corresponding t"
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "anova.lme",
			"args": [{
				"name": "object",
				"description": "a fitted model object inheriting from class <code>lme</code>,\n   representing a mixed-effects model."
			}, {
				"name": "...",
				"description": "other optional fitted model objects inheriting from\n   classes <code>gls</code>, <code>gnls</code>, <code>lm</code>, <code>lme</code>,\n   <code>lmList</code>, <code>nlme</code>, <code>nlsList</code>, or <code>nls</code>."
			}, {
				"name": "test",
				"description": "an optional logical value controlling whether likelihood\n   ratio tests should be used to compare the fitted models represented\n   by <code>object</code> and the objects in <code>...</code>. Defaults to\n   <code>TRUE</code>."
			}, {
				"name": "type",
				"description": "an optional character string specifying the type of sum of\n   squares to be used in F-tests for the terms in the model. If \n   <code>&quot;sequential&quot;</code>, the sequential sum of squares obtained by\n   including the terms in the order they appear in the mode"
			}, {
				"name": "adjustSigma",
				"description": "an optional logical value. If <code>TRUE</code> and the\n   estimation method used to obtain <code>object</code> was maximum\n   likelihood, the residual standard error is multiplied by\n   $\\sqrt{n_{obs}/(n_{obs} - n_{par})}$,\n   converting it to a REML-lik"
			}, {
				"name": "Terms",
				"description": "an optional integer or character vector specifying which\n   terms in the model should be jointly tested to be zero using a Wald\n   F-test. If given as a character vector, its elements must correspond\n   to term names; else, if given as an integer vector,"
			}, {
				"name": "L",
				"description": "an optional numeric vector or array specifying linear\n   combinations of the coefficients in the model that should be tested\n   to be zero. If given as an array, its rows define the linear\n   combinations to be tested. If names are assigned to the vector"
			}, {
				"name": "x",
				"description": "an object inheriting from class <code>anova.lme</code>"
			}, {
				"name": "verbose",
				"description": "an optional logical value. If <code>TRUE</code>, the calling\n   sequences for each fitted model object are printed with the rest of\n   the output, being omitted if <code>verbose = FALSE</code>. Defaults to\n   <code>FALSE</code>."
			}]
		}, {
			"name": "predict.lmList",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>lmList</code>, representing\n   a list of <code>lm</code> objects with a common model."
			}, {
				"name": "newdata",
				"description": "an optional data frame to be used for obtaining the\n   predictions. All variables used in the <code>object</code> model formula\n   must be present in the data frame. If missing, the same data frame\n   used to produce <code>object</code> is used."
			}, {
				"name": "subset",
				"description": "an optional character or integer vector naming the\n   <code>lm</code> components of <code>object</code> from which the predictions\n   are to be extracted. Default is <code>NULL</code>, in which case all\n   components are used."
			}, {
				"name": "asList",
				"description": "an optional logical value. If <code>TRUE</code>, the returned\n   object is a list with the predictions split by groups; else the\n   returned value is a vector. Defaults to <code>FALSE</code>."
			}, {
				"name": "pool",
				"description": "an optional logical value indicating whether a pooled\n   estimate of the residual standard error should be used. Default is\n   <code>attr(object, &quot;pool&quot;)</code>."
			}, {
				"name": "se.fit",
				"description": "an optional logical value indicating whether pointwise\n   standard errors should be computed along with the\n   predictions. Default is <code>FALSE</code>."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "lmeScale",
			"args": [{
				"name": "start",
				"description": "the starting values for the coefficients to be estimated."
			}]
		}, {}, {
			"name": "random.effects",
			"args": [{
				"name": "object",
				"description": "any fitted model object from which random effects\n   estimates can be extracted."
			}, {
				"name": "...",
				"description": "some methods for this generic function require additional\n   arguments."
			}]
		}, {
			"name": "corExp",
			"args": [{
				"name": "value",
				"description": "an optional vector with the parameter values in\n   constrained form. If <code>nugget</code> is <code>FALSE</code>, <code>value</code> can\n   have only one element, corresponding to the &quot;range&quot; of the\n   exponential correlation structure, which must be gre"
			}, {
				"name": "form",
				"description": "a one sided formula of the form <code>~ S1+...+Sp</code>, or\n   <code>~ S1+...+Sp | g</code>, specifying spatial covariates <code>S1</code>\n   through <code>Sp</code> and,  optionally, a grouping factor <code>g</code>. \n   When a grouping factor is presen"
			}, {
				"name": "nugget",
				"description": "an optional logical value indicating whether a nugget\n   effect is present. Defaults to <code>FALSE</code>."
			}, {
				"name": "metric",
				"description": "an optional character string specifying the distance\n   metric to be used. The currently available options are\n   <code>&quot;euclidean&quot;</code> for the root sum-of-squares of distances;\n   <code>&quot;maximum&quot;</code> for the maximum difference; and <code>&quot;manhattan</code>"
			}, {
				"name": "fixed",
				"description": "an optional logical value indicating whether the\n   coefficients should be allowed to vary in the optimization, or kept\n   fixed at their initial value. Defaults to <code>FALSE</code>, in which case\n   the coefficients are allowed to vary."
			}]
		}, {
			"name": "coef.corStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>corStruct</code>,\n   representing a correlation structure."
			}, {
				"name": "unconstrained",
				"description": "a logical value. If <code>TRUE</code> the coefficients\n   are returned in unconstrained form (the same used in the optimization\n   algorithm). If <code>FALSE</code> the coefficients are returned in\n   &quot;natural&quot;, possibly constrained, form. Defaults to"
			}, {
				"name": "value",
				"description": "a vector with the replacement values for the coefficients\n   associated with <code>object</code>. It must be a vector with the same length\n   of <code>coef{object}</code> and must be given in unconstrained form."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "Names",
			"args": [{
				"name": "object",
				"description": "any object for which names can be extracted and/or assigned."
			}, {
				"name": "...",
				"description": "some methods for this generic function require additional\n   arguments."
			}, {
				"name": "value",
				"description": "names to be assigned to <code>object</code>."
			}]
		}, {
			"name": "residuals.nlmeStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>nlmeStruct</code>,\n   representing a list of mixed-effects model components, such as\n   <code>reStruct</code>, <code>corStruct</code>, and <code>varFunc</code> objects."
			}, {
				"name": "level",
				"description": "an optional integer vector giving the level(s) of grouping\n   to be used in extracting the residuals from <code>object</code>. Level\n   values increase from outermost to innermost grouping, with\n   level zero corresponding to the population fitted values."
			}, {
				"name": "conLin",
				"description": "an optional condensed linear model object, consisting of\n   a list with components <code>&quot;Xy&quot;</code>, corresponding to a regression\n   matrix (<code>X</code>) combined with a response vector (<code>y</code>), and \n   <code>&quot;logLik&quot;</code>, corresponding t"
			}, {
				"name": "...",
				"description": "optional arguments to the residuals generic.  Not\n   used."
			}]
		}, {
			"name": "predict.gls",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>gls</code>, representing\n   a generalized least squares fitted linear model."
			}, {
				"name": "newdata",
				"description": "an optional data frame to be used for obtaining the\n   predictions. All variables used in the linear model must be present\n   in the data frame. If missing, the fitted values are returned."
			}, {
				"name": "na.action",
				"description": "a function that indicates what should happen when\n   <code>newdata</code> contains <code>NA</code>s.  The default action\n   (<code>na.fail</code>) causes the function to print an error message and\n   terminate if there are any incomplete observations."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "corSymm",
			"args": [{
				"name": "value",
				"description": "an optional vector with the parameter values. Default is\n   <code>numeric(0)</code>, which results in a vector of zeros of appropriate\n   dimension being assigned to the parameters when <code>object</code> is\n   initialized (corresponding to an identity c"
			}, {
				"name": "form",
				"description": "a one sided formula of the form <code>~ t</code>, or <code>~ t |\n     g</code>, specifying a time covariate <code>t</code> and,  optionally, a\n   grouping factor <code>g</code>. A covariate for this correlation structure\n   must be integer valued. When a"
			}, {
				"name": "fixed",
				"description": "an optional logical value indicating whether the\n   coefficients should be allowed to vary in the optimization, or kept\n   fixed at their initial value. Defaults to <code>FALSE</code>, in which case\n   the coefficients are allowed to vary."
			}]
		}, {
			"name": "plot.augPred",
			"args": [{
				"name": "x",
				"description": "an object of class <code>augPred</code>."
			}, {
				"name": "key",
				"description": "an optional logical value, or list. If <code>TRUE</code>, a legend\n is included at the top of the plot indicating which symbols (colors)\n correspond to which prediction levels. If <code>FALSE</code>, no legend\n is included. If given as a list, <code>key</code>"
			}, {
				"name": "grid",
				"description": "an optional logical value indicating whether a grid should\n   be added to plot. Default is <code>FALSE</code>."
			}, {
				"name": "...",
				"description": "optional arguments passed down to the <code>trellis</code>\n   function generating the plots."
			}]
		}, {
			"name": "varFunc",
			"args": [{
				"name": "object",
				"description": "either an one-sided formula specifying a variance\n   covariate, or an object inheriting from class <code>varFunc</code>,\n   representing a variance function structure."
			}]
		}, {
			"name": "pairs.lme",
			"args": [{
				"name": "x",
				"description": "an object inheriting from class <code>lme</code>, representing\n   a fitted linear mixed-effects model."
			}, {
				"name": "form",
				"description": "an optional one-sided formula specifying the desired type of\n   plot. Any variable present in the original data frame used to obtain\n   <code>x</code> can be referenced. In addition, <code>x</code> itself\n   can be referenced in the formula using the symb"
			}, {
				"name": "label",
				"description": "an optional character vector of labels for the variables\n   in the pairs plot."
			}, {
				"name": "id",
				"description": "an optional numeric value, or one-sided formula. If given as\n   a value, it is used as a significance level for an outlier\n   test based on the Mahalanobis distances of the estimated random\n   effects. Groups with random effects distances greater than the"
			}, {
				"name": "idLabels",
				"description": "an optional vector, or one-sided formula. If given as a\n   vector, it is converted to character and used to label the\n   points identified according to <code>id</code>. If given as a\n   one-sided formula, its right hand side must evaluate to a vector\n   w"
			}, {
				"name": "grid",
				"description": "an optional logical value indicating whether a grid should\n   be added to plot. Default is <code>FALSE</code>."
			}, {
				"name": "...",
				"description": "optional arguments passed to the Trellis plot function."
			}]
		}, {
			"name": "fitted.lmList",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>lmList</code>, representing\n   a list of <code>lm</code> objects with a common model."
			}, {
				"name": "subset",
				"description": "an optional character or integer vector naming the\n   <code>lm</code> components of <code>object</code> from which the fitted values\n   are to be extracted. Default is <code>NULL</code>, in which case all\n   components are used."
			}, {
				"name": "asList",
				"description": "an optional logical value. If <code>TRUE</code>, the returned\n   object is a list with the fitted values split by groups; else the\n   returned value is a vector. Defaults to <code>FALSE</code>."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "recalc.reStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>reStruct</code>,\n   representing a random effects structure and consisting of a list of\n   <code>pdMat</code> objects."
			}, {
				"name": "conLin",
				"description": "a condensed linear model object, consisting of a list\n   with components <code>&quot;Xy&quot;</code>, corresponding to a regression matrix\n   (<code>X</code>) combined with a response vector (<code>y</code>), and\n   <code>&quot;logLik&quot;</code>, corresponding to the log-l"
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "coef.lmList",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>lmList</code>, representing\n   a list of <code>lm</code> objects with a common model."
			}, {
				"name": "augFrame",
				"description": "an optional logical value. If <code>TRUE</code>, the returned\n   data frame is augmented with variables defined in the data frame used\n   to produce <code>object</code>; else, if <code>FALSE</code>, only the coefficients\n   are returned. Defaults to"
			}, {
				"name": "data",
				"description": "an optional data frame with the variables to be used for\n   augmenting the returned data frame when <code>augFrame =\n     TRUE</code>. Defaults to the data frame used to fit <code>object</code>."
			}, {
				"name": "which",
				"description": "an optional positive integer or character vector\n   specifying which columns of the data frame used to produce <code>object</code>\n   should be used in the augmentation of the returned data\n   frame. Defaults to all variables in the data."
			}, {
				"name": "FUN",
				"description": "an optional summary function or a list of summary functions\n   to be applied to group-varying variables, when collapsing the data\n   by groups.  Group-invariant variables are always summarized by the\n   unique value that they assume within that group. If"
			}, {
				"name": "omitGroupingFactor",
				"description": "an optional logical value.  When <code>TRUE</code>\n   the grouping factor itself will be omitted from the group-wise\n   summary of <code>data</code> but the levels of the grouping factor will\n   continue to be used as the row names for the returned data f"
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "fitted.glsStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>glsStruct</code>,\n   representing a list of linear model components, such as\n   <code>corStruct</code> and <code>varFunc</code> objects."
			}, {
				"name": "glsFit",
				"description": "an optional list with components <code>logLik</code>\n   (log-likelihood), <code>beta</code> (coefficients), <code>sigma</code> (standard\n   deviation for error term), <code>varBeta</code> (coefficients&apos; covariance\n   matrix), <code>fitted</code> (fitted v"
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "as.matrix.corStruct",
			"args": [{
				"name": "x",
				"description": "an object inheriting from class <code>corStruct</code>,\n   representing a correlation structure."
			}]
		}, {}, {}, {
			"name": "pdCompSymm",
			"args": [{
				"name": "value",
				"description": "an optional initialization value, which can be any of the\n   following: a <code>pdMat</code> object, a positive-definite\n   matrix, a one-sided linear formula (with variables separated by\n   <code>+</code>), a vector of character strings, or a numeric"
			}, {
				"name": "form",
				"description": "an optional one-sided linear formula specifying the\n   row/column names for the matrix represented by <code>object</code>. Because\n   factors may be present in <code>form</code>, the formula needs to be\n   evaluated on a data.frame to resolve the names it"
			}, {
				"name": "nam",
				"description": "an optional vector of character strings specifying the\n   row/column names for the matrix represented by object. It must have \n   length equal to the dimension of the underlying positive-definite\n   matrix and unreplicated elements. This argument is ignor"
			}, {
				"name": "data",
				"description": "an optional data frame in which to evaluate the variables\n   named in <code>value</code> and <code>form</code>. It is used to\n   obtain the levels for <code>factors</code>, which affect the\n   dimensions and the row/column names of the underlying matrix."
			}]
		}, {
			"name": "pdMatrix.reStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>reStruct</code>,\n   representing a random effects structure and consisting of a list of\n   <code>pdMat</code> objects."
			}, {
				"name": "factor",
				"description": "an optional logical value. If <code>TRUE</code>, square-root\n   factors of the positive-definite matrices represented by the elements\n   of <code>object</code> are returned; else, if <code>FALSE</code>, the\n   positive-definite matrices are returned. Defa"
			}]
		}, {
			"name": "plot.nffGroupedData",
			"args": [{
				"name": "x",
				"description": "an object inheriting from class <code>nffGroupedData</code>,\n   representing a <code>groupedData</code> object with a factor primary\n   covariate and a single grouping level."
			}, {
				"name": "outer",
				"description": "an optional logical value or one-sided formula,\n   indicating covariates that are outer to the grouping factor, which\n   are used to determine the panels of the Trellis plot. If\n   equal to <code>TRUE</code>, <code>attr(object, &quot;outer&quot;)</code> is used to"
			}, {
				"name": "inner",
				"description": "an optional logical value or one-sided formula, indicating\n   a covariate that is inner to the grouping factor, which is used to\n   associate points within each panel of the Trellis plot. If\n   equal to <code>TRUE</code>, <code>attr(object, &quot;inner&quot;)</code>"
			}, {
				"name": "innerGroups",
				"description": "an optional one-sided formula specifying a factor\n   to be used for grouping the levels of the <code>inner</code>\n   covariate. Different colors, or symbols, are used for each level\n   of the <code>innerGroups</code> factor. Default is <code>NULL</code>,"
			}, {
				"name": "xlab",
				"description": "an optional character string with the label for the\n   horizontal axis. Default is the <code>y</code> elements of <code>attr(object,\n     &quot;labels&quot;)</code> and <code>attr(object, &quot;units&quot;)</code> pasted together."
			}, {
				"name": "ylab",
				"description": "an optional character string with the label for the\n   vertical axis. Default is the grouping factor name."
			}, {
				"name": "strip",
				"description": "an optional function passed as the <code>strip</code> argument to\n   the <code>dotplot</code> function. Default is <code>strip.default(..., style\n     = 1)</code> (see <code>trellis.args</code>)."
			}, {
				"name": "panel",
				"description": "an optional function used to generate the individual\n   panels in the Trellis display, passed as the <code>panel</code> argument\n   to the <code>dotplot</code> function."
			}, {
				"name": "key",
				"description": "an optional logical function or function. If <code>TRUE</code>\n   and either <code>inner</code> or <code>innerGroups</code> are non-<code>NULL</code>, a\n   legend for the different <code>inner</code> (<code>innerGroups</code>) levels is \n   included at th"
			}, {
				"name": "grid",
				"description": "this argument is included for consistency with the\n\t <code>plot.nfnGroupedData</code> method calling sequence. It is\n\t ignored in this method function."
			}, {
				"name": "...",
				"description": "optional arguments passed to the <code>dotplot</code> function."
			}]
		}, {}, {
			"name": "coef.pdMat",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>pdMat</code>,\n   representing a positive-definite matrix."
			}, {
				"name": "unconstrained",
				"description": "a logical value. If <code>TRUE</code> the coefficients\n   are returned in unconstrained form (the same used in the optimization\n   algorithm). If <code>FALSE</code> the upper triangular elements of the\n   positive-definite matrix represented by <code>obje</code>"
			}, {
				"name": "value",
				"description": "a vector with the replacement values for the coefficients\n   associated with <code>object</code>. It must be a vector with the same length\n   of <code>coef{object}</code> and must be given in unconstrained form."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
			"name": "fitted.gnlsStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>gnlsStruct</code>,\n   representing a list of model components, such as\n   <code>corStruct</code> and <code>varFunc</code> objects, and attributes\n   specifying the underlying nonlinear model and the response variable."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {}, {}, {}, {}, {}, {}, {}, {
			"name": "getResponseFormula",
			"args": [{
				"name": "object",
				"description": "any object from which a formula can be extracted."
			}]
		}, {
			"name": "logDet",
			"args": [{
				"name": "object",
				"description": "any object from which a matrix, or list of matrices, can\n   be extracted"
			}, {
				"name": "...",
				"description": "some methods for this generic function require additional\n   arguments."
			}]
		}, {
			"name": "getGroupsFormula",
			"args": [{
				"name": "object",
				"description": "any object from which a formula can be extracted."
			}, {
				"name": "asList",
				"description": "an optional logical value. If <code>TRUE</code> the returned\n   value with be a list of formulas; else, if <code>FALSE</code> the returned\n   value will be a one-sided formula. Defaults to <code>FALSE</code>."
			}, {
				"name": "sep",
				"description": "character, the separator to use between group levels when\n   multiple levels are collapsed.  The default is <code>&apos;/&apos;</code>."
			}]
		}, {
			"name": "varPower",
			"args": [{
				"name": "value",
				"description": "an optional numeric vector, or list of numeric values,\n    with the variance function coefficients. <code>Value</code> must have\n    length one, unless a grouping factor is specified in <code>form</code>.\n    If <code>value</code> has length greater than"
			}, {
				"name": "form",
				"description": "an optional one-sided formula of the form <code>~ v</code>, or\n    <code>~ v | g</code>, specifying a variance covariate <code>v</code> and,\n    optionally, a grouping factor <code>g</code> for the coefficients. The\n    variance covariate must evaluate to"
			}, {
				"name": "fixed",
				"description": "an optional numeric vector, or list of numeric values,\n    specifying the values at which some or all of the  coefficients in\n    the variance function should be fixed. If a grouping factor is\n    specified in <code>form</code>, <code>fixed</code> must ha"
			}]
		}, {
			"name": "nlme",
			"args": [{
				"name": "model",
				"description": "a nonlinear model formula, with the response on the left\n    of a <code>~</code> operator and an expression involving parameters and\n    covariates on the right, or an <code>nlsList</code> object.  If\n    <code>data</code> is given, all names used in the"
			}, {
				"name": "data",
				"description": "an optional data frame containing the variables named in\n   <code>model</code>, <code>fixed</code>, <code>random</code>, <code>correlation</code>,\n   <code>weights</code>, <code>subset</code>, and <code>naPattern</code>.  By default the\n   variables are t"
			}, {
				"name": "fixed",
				"description": "a two-sided linear formula of the form\n   <code>f1+...+fn~x1+...+xm</code>, or a list of two-sided formulas of the form\n   <code>f1~x1+...+xm</code>, with possibly different models for different\n   parameters. The <code>f1,...,fn</code> are the names of p"
			}, {
				"name": "random",
				"description": "optionally, any of the following: (i) a two-sided formula\n   of the form <code>r1+...+rn~x1+...+xm | g1/.../gQ</code>, with\n   <code>r1,...,rn</code> naming parameters included on the right\n   hand side of <code>model</code>, <code>x1+...+xm</code> specif"
			}, {
				"name": "groups",
				"description": "an optional one-sided formula of the form <code>~g1</code>\n   (single level of nesting) or <code>~g1/.../gQ</code> (multiple levels of\n   nesting), specifying the partitions of the data over which the random\n   effects vary. <code>g1,...,gQ</code> must ev"
			}, {
				"name": "start",
				"description": "an optional numeric vector, or list of initial estimates\n   for the fixed effects and random effects. If declared as a numeric\n   vector, it is converted internally to a list with a single component\n   <code>fixed</code>, given by the vector. The <code>fi</code>"
			}, {
				"name": "correlation",
				"description": "an optional <code>corStruct</code> object describing the\n   within-group correlation structure. See the documentation of\n   <code>corClasses</code> for a description of the available <code>corStruct</code>\n   classes. Defaults to <code>NULL</code>, corres"
			}, {
				"name": "weights",
				"description": "an optional <code>varFunc</code> object or one-sided formula\n   describing the within-group heteroscedasticity structure. If given as\n   a formula, it is used as the argument to <code>varFixed</code>,\n   corresponding to fixed variance weights. See the do"
			}, {
				"name": "subset",
				"description": "an optional expression indicating the subset of the rows of\n   <code>data</code> that should be used in the fit. This can be a logical\n   vector, or a numeric vector indicating which observation numbers are\n   to be included, or a  character  vector of th"
			}, {
				"name": "method",
				"description": "a character string.  If <code>&quot;REML&quot;</code> the model is fit by\n   maximizing the restricted log-likelihood.  If <code>&quot;ML&quot;</code> the\n   log-likelihood is maximized.  Defaults to <code>&quot;ML&quot;</code>."
			}, {
				"name": "na.action",
				"description": "a function that indicates what should happen when the\n   data contain <code>NA</code>s.  The default action (<code>na.fail</code>) causes\n   <code>nlme</code> to print an error message and terminate if there are any\n   incomplete observations."
			}, {
				"name": "naPattern",
				"description": "an expression or formula object, specifying which returned\n   values are to be regarded as missing."
			}, {
				"name": "control",
				"description": "a list of control values for the estimation algorithm to\n   replace the default values returned by the function <code>nlmeControl</code>.\n   Defaults to an empty list."
			}, {
				"name": "verbose",
				"description": "an optional logical value. If <code>TRUE</code> information on\n   the evolution of the iterative algorithm is printed. Default is\n   <code>FALSE</code>."
			}]
		}, {}, {
			"name": "pdFactor",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>pdMat</code>, representing\n   a positive definite matrix, which must have been initialized\n   (i.e. <code>length(coef(object)) &gt; 0</code>)."
			}]
		}, {}, {}, {
			"name": "residuals.gls",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>gls</code>, representing\n   a generalized least squares fitted linear model, or from class\n   <code>gnls</code>, representing a generalized nonlinear least squares\n   fitted linear model."
			}, {
				"name": "type",
				"description": "an optional character string specifying the type of\n    residuals to be used. If <code>&quot;response&quot;</code>, the &quot;raw&quot; residuals\n    (observed - fitted) are used; else, if <code>&quot;pearson&quot;</code>, the\n    standardized residuals (raw residuals divided by the c"
			}, {
				"name": "...",
				"description": "some methods for this generic function require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "ranef.lme",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>lme</code>, representing\n   a fitted linear mixed-effects model."
			}, {
				"name": "augFrame",
				"description": "an optional logical value. If <code>TRUE</code>, the returned\n   data frame is augmented with variables defined in <code>data</code>; else,\n   if <code>FALSE</code>, only the coefficients are returned. Defaults to\n   <code>FALSE</code>."
			}, {
				"name": "level",
				"description": "an optional vector of positive integers giving the levels\n   of grouping to be used in extracting the random effects from an\n   object with multiple nested grouping levels. Defaults to all levels\n   of grouping."
			}, {
				"name": "data",
				"description": "an optional data frame with the variables to be used for\n   augmenting the returned data frame when <code>augFrame =\n     TRUE</code>. Defaults to the data frame used to fit <code>object</code>."
			}, {
				"name": "which",
				"description": "an optional positive integer vector specifying which\n   columns of <code>data</code> should be used in the augmentation of the\n   returned data frame. Defaults to all columns in <code>data</code>."
			}, {
				"name": "FUN",
				"description": "an optional summary function or a list of summary functions\n   to be applied to group-varying variables, when collapsing <code>data</code>\n   by groups.  Group-invariant variables are always summarized by the\n   unique value that they assume within that g"
			}, {
				"name": "standard",
				"description": "an optional logical value indicating whether the\n   estimated random effects should be &quot;standardized&quot; (i.e. divided by\n   the corresponding estimated standard error). Defaults to\n   <code>FALSE</code>."
			}, {
				"name": "omitGroupingFactor",
				"description": "an optional logical value.  When <code>TRUE</code>\n   the grouping factor itself will be omitted from the group-wise\n   summary of <code>data</code> but the levels of the grouping factor will\n   continue to be used as the row names for the returned data f"
			}, {
				"name": "subset",
				"description": "an optional expression indicating for which rows the\n   random effects should be extracted."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "residuals.lmList",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>lmList</code>, representing\n   a list of <code>lm</code> objects with a common model."
			}, {
				"name": "subset",
				"description": "an optional character or integer vector naming the\n   <code>lm</code> components of <code>object</code> from which the residuals \n   are to be extracted. Default is <code>NULL</code>, in which case all\n   components are used."
			}, {
				"name": "type",
				"description": "an optional character string specifying the type of\n   residuals to be extracted. Options include <code>&quot;response&quot;</code> for the\n   &quot;raw&quot; residuals (observed - fitted), <code>&quot;pearson&quot;</code> for the\n   standardized residuals (raw residuals divided by th"
			}, {
				"name": "asList",
				"description": "an optional logical value. If <code>TRUE</code>, the returned\n   object is a list with the residuals split by groups; else the\n   returned value is a vector. Defaults to <code>FALSE</code>."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {
			"name": "residuals.gnlsStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>gnlsStruct</code>,\n   representing a list of model components, such as\n   <code>corStruct</code> and <code>varFunc</code> objects, and attributes\n   specifying the underlying nonlinear model and the response variable."
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {}, {
			"name": "recalc.corStruct",
			"args": [{
				"name": "object",
				"description": "an object inheriting from class <code>corStruct</code>,\n   representing a correlation structure."
			}, {
				"name": "conLin",
				"description": "a condensed linear model object, consisting of a list\n   with components <code>&quot;Xy&quot;</code>, corresponding to a regression matrix\n   (<code>X</code>) combined with a response vector (<code>y</code>), and\n   <code>&quot;logLik&quot;</code>, corresponding to the log-l"
			}, {
				"name": "...",
				"description": "some methods for this generic require additional\n    arguments.  None are used in this method."
			}]
		}, {}, {}, {
			"name": "Alfalfa",
			"args": []
		}, {
			"name": "BodyWeight",
			"args": []
		}, {
			"name": "Gasoline",
			"args": []
		}, {}, {}, {
			"name": "Orthodont",
			"args": []
		}, {
			"name": "Earthquake",
			"args": []
		}, {
			"name": "Oats",
			"args": []
		}, {
			"name": "Cefamandole",
			"args": []
		}, {
			"name": "Soybean",
			"args": []
		}, {
			"name": "Dialyzer",
			"args": []
		}, {
			"name": "Tetracycline1",
			"args": []
		}, {
			"name": "ergoStool",
			"args": []
		}, {
			"name": "Wheat2",
			"args": []
		}, {
			"name": "Assay",
			"args": []
		}, {
			"name": "Glucose2",
			"args": []
		}, {
			"name": "Pixel",
			"args": []
		}, {}, {
			"name": "Meat",
			"args": []
		}, {
			"name": "Rail",
			"args": []
		}, {
			"name": "Nitrendipene",
			"args": []
		}, {
			"name": "Phenobarb",
			"args": []
		}, {
			"name": "Quinidine",
			"args": []
		}, {
			"name": "Wheat",
			"args": []
		}, {
			"name": "Oxide",
			"args": []
		}, {
			"name": "Spruce",
			"args": []
		}, {
			"name": "RatPupWeight",
			"args": []
		}, {
			"name": "Milk",
			"args": []
		}, {
			"name": "MathAchieve",
			"args": []
		}, {
			"name": "Machines",
			"args": []
		}, {
			"name": "PBG",
			"args": []
		}, {
			"name": "Oxboys",
			"args": []
		}, {
			"name": "MathAchSchool",
			"args": []
		}, {
			"name": "Muscle",
			"args": []
		}, {
			"name": "Wafer",
			"args": []
		}, {
			"name": "IGF",
			"args": []
		}, {
			"name": "Ovary",
			"args": []
		}, {
			"name": "Gun",
			"args": []
		}, {
			"name": "Tetracycline2",
			"args": []
		}, {
			"name": "bdf",
			"args": []
		}]
	}
}, {
	"grid": {
		"functions": [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
			"name": "legendGrob",
			"args": [{
				"name": "labels",
				"description": "legend labels (expressions)"
			}, {
				"name": "nrow, ncol",
				"description": "integer; the number of rows or columns, respectively\n    of the legend &#x201C;layout&#x201D;.  <code>nrow</code> is optional and\n    typically computed from the number of labels and <code>ncol</code>."
			}, {
				"name": "byrow",
				"description": "logical indicating whether rows of the legend are filled first."
			}, {
				"name": "do.lines",
				"description": "logical indicating whether legend lines are drawn."
			}, {
				"name": "lines.first",
				"description": "logical indicating whether legend lines are drawn\n    first and hence in a plain &#x201C;below&#x201D; legend symbols."
			}, {
				"name": "hgap",
				"description": "horizontal space between the legend entries"
			}, {
				"name": "vgap",
				"description": "vertical space between the legend entries"
			}, {
				"name": "default.units",
				"description": "default units, see <code><a rd-options=\"\" href=\"/link/unit?package=grid&amp;version=3.3.2\">unit</a></code>."
			}, {
				"name": "pch",
				"description": "legend symbol, numeric or character, passed to\n    <code><a rd-options=\"\" href=\"/link/pointsGrob?package=grid&amp;version=3.3.2\">pointsGrob</a>()</code>; see also <code><a rd-options=\"graphics\" href=\"/link/points?package=grid&amp;version=3.3.2&amp;to=graphics\">points</a></code> for\n    interpretation of the numeric codes."
			}, {
				"name": "gp",
				"description": "an <span style=\"R\">R</span> object of class <code>gpar</code>, typically the output\n    from a call to the function <code>gpar</code>, is basically a list of\n    graphical parameter settings."
			}, {
				"name": "vp",
				"description": "a Grid <code><a rd-options=\"\" href=\"/link/viewport?package=grid&amp;version=3.3.2\">viewport</a></code> object (or <code>NULL</code>)."
			}, {
				"name": "...",
				"description": "for <code>grid.legend()</code>: all the arguments above are\n    passed to <code>legendGrob()</code>."
			}, {
				"name": "draw",
				"description": "logical indicating whether graphics output should be produced."
			}]
		}, {}, {}, {}, {}, {}, {}, {}, {}, {
			"name": "grid.place",
			"args": [{
				"name": "gPath",
				"description": "A gPath object, which specifies a frame on the\n    display list."
			}, {
				"name": "frame",
				"description": "An object of class <code>frame</code>, typically the output\n  from a call to <code>grid.frame</code>."
			}, {
				"name": "grob",
				"description": "An object of class <code>grob</code>.  The object to be\n    placed."
			}, {
				"name": "row",
				"description": "Which row to add the object to.  Must be between 1 and\n    the-number-of-rows-currently-in-the-frame."
			}, {
				"name": "col",
				"description": "Which col to add the object to.  Must be between 1 and\n    the-number-of-cols-currently-in-the-frame."
			}, {
				"name": "redraw",
				"description": "A boolean indicating whether the output should be updated."
			}]
		}, {
			"name": "grid.yaxis",
			"args": [{
				"name": "at",
				"description": "A numeric vector of y-value locations for the tick marks."
			}, {
				"name": "label",
				"description": "A logical value indicating whether to draw the labels\n    on the tick marks, or an expression or character vector which\n    specify the labels to use.  If not logical, must be the same\n    length as the <code>at</code> argument."
			}, {
				"name": "main",
				"description": "A logical value indicating whether to draw the axis\n    at the left (<code>TRUE</code>) or at the right (<code>FALSE</code>) of the\n    viewport."
			}, {
				"name": "edits",
				"description": "A gEdit or gEditList containing edit operations\n    to apply (to the children of the axis)\n    when the axis is first created and during redrawing\n    whenever <code>at</code> is <code>NULL</code>."
			}, {
				"name": "name",
				"description": "A character identifier."
			}, {
				"name": "gp",
				"description": "An object of class <code>gpar</code>, typically the output\n    from a call to the function <code>gpar</code>.  This is basically\n    a list of graphical parameter settings."
			}, {
				"name": "draw",
				"description": "A logical value indicating whether graphics output\n    should be produced."
			}, {
				"name": "vp",
				"description": "A Grid viewport object (or <code>NULL</code>)."
			}]
		}, {
			"name": "grid.pretty",
			"args": [{
				"name": "range",
				"description": "A numeric vector"
			}]
		}, {
			"name": "grobName",
			"args": [{
				"name": "grob",
				"description": "A grob object or <code>NULL</code>."
			}, {
				"name": "prefix",
				"description": "The prefix part of the name."
			}]
		}, {
			"name": "validDetails",
			"args": [{
				"name": "x",
				"description": "A grid grob."
			}]
		}, {
			"name": "valid.just",
			"args": [{
				"name": "just",
				"description": "A justification either as a character value,\n    e.g., <code>&quot;left&quot;</code>, or as a numeric value, e.g., 0."
			}, {
				"name": "hjust",
				"description": "A numeric horizontal justification"
			}, {
				"name": "vjust",
				"description": "A numeric vertical justification"
			}]
		}, {
			"name": "showGrob",
			"args": [{
				"name": "x",
				"description": "If <code>NULL</code>, the current grid scene is labelled.\n    Otherwise, a grob (or gTree) to draw and then label."
			}, {
				"name": "gPath",
				"description": "A path identifying a subset of the current scene or grob\n    to be labelled."
			}, {
				"name": "strict",
				"description": "Logical indicating whether the gPath is strict."
			}, {
				"name": "grep",
				"description": "Logical indicating whether the gPath is a regular expression."
			}, {
				"name": "recurse",
				"description": "Should the children of gTrees also be labelled?"
			}, {
				"name": "depth",
				"description": "Only display grobs at the specified depth (may be a vector\n    of depths)."
			}, {
				"name": "labelfun",
				"description": "Function used to generate a label from each grob."
			}, {
				"name": "...",
				"description": "Arguments passed to <code>labelfun</code> to control fine details\n    of the generated label."
			}]
		}, {
			"name": "showViewport",
			"args": [{
				"name": "vp",
				"description": "If <code>NULL</code>, the current viewport tree is displayed.\n    Otherwise, a viewport (or vpList, or vpStack, or vpTree) or\n    a vpPath that specifies which viewport to display."
			}, {
				"name": "recurse",
				"description": "Should the children of the specified viewport also be displayed?"
			}, {
				"name": "depth",
				"description": "Only display viewports at the specified depth (may be a vector\n    of depths)."
			}, {
				"name": "newpage",
				"description": "Start a new page for the display?  Otherwise, the viewports\n    are displayed on top of the current plot."
			}, {
				"name": "leaves",
				"description": "Produce a matrix of smaller displays, with each leaf viewport\n    in its own display."
			}, {
				"name": "col",
				"description": "The colour used to draw the border of the rectangle for each\n    viewport <em>and</em> to draw the label for each viewport.\n    If a vector, then the first colour is used for the\n    top-level viewport, the second colour is used for its children,\n    the third colour for their children, and so on."
			}, {
				"name": "fill",
				"description": "The colour used to fill each viewport.  May be a vector as per\n    <code>col</code>."
			}, {
				"name": "label",
				"description": "Should the viewports be labelled (with the viewport name)?"
			}, {
				"name": "nrow, ncol",
				"description": "The number of rows and columns when <code>leaves</code> is <code>TRUE</code>.\n    Otherwise ignored."
			}]
		}, {
			"name": "Grid Viewports",
			"args": [{
				"name": "x",
				"description": "A numeric vector or unit object specifying x-location."
			}, {
				"name": "y",
				"description": "A numeric vector or unit object specifying y-location."
			}, {
				"name": "width",
				"description": "A numeric vector or unit object specifying width."
			}, {
				"name": "height",
				"description": "A numeric vector or unit object specifying height."
			}, {
				"name": "default.units",
				"description": "A string indicating the default units to use\n    if <code>x</code>, <code>y</code>, <code>width</code>, or <code>height</code>\n    are only given as numeric vectors."
			}, {
				"name": "just",
				"description": "A string or numeric\n    vector specifying the justification of the viewport\n    relative to its (x, y) location.  If there are two values, the first\n    value specifies horizontal justification and the second value specifies\n    vertical justification.  Possible string values are: <code>&quot;left&quot;</code>,\n    <code>&quot;right&quot;</code>, <code>&quot;centre&quot;</code>, <code>&quot;center&quot;</code>, <code>&quot;bottom&quot;</code>,\n    and <code>&quot;top&quot;</code>.  For numeric values, 0 means left alignment\n    and 1 means right alignment."
			}, {
				"name": "gp",
				"description": "An object of class <code>gpar</code>, typically the output\n    from a call to the function <code>gpar</code>.  This is basically\n    a list of graphical parameter settings."
			}, {
				"name": "clip",
				"description": "One of <code>&quot;on&quot;</code>, <code>&quot;inherit&quot;</code>, or\n    <code>&quot;off&quot;</code>, indicating whether to\n    clip to the extent of this viewport, inherit the clipping region\n    from the parent viewport, or turn clipping off altogether.\n    For back-compatibility, a logical value of <code>TRUE</code> corresponds\n    to <code>&quot;on&quot;</code> and <code>FALSE</code> corresponds to <code>&quot;inherit&quot;</code>."
			}, {
				"name": "xscale",
				"description": "A numeric vector of length two indicating the minimum and\n    maximum on the x-scale.  The limits may not be identical."
			}, {
				"name": "yscale",
				"description": "A numeric vector of length two indicating the minimum\n    and maximum on the y-scale. The limits may not be identical."
			}, {
				"name": "angle",
				"description": "A numeric value indicating the angle of rotation of the\n    viewport.  Positive values indicate the amount of rotation, in\n    degrees, anticlockwise from the positive x-axis."
			}, {
				"name": "layout",
				"description": "A Grid layout object which splits the viewport into\n    subregions."
			}, {
				"name": "layout.pos.row",
				"description": "A numeric vector giving the\n    rows occupied by this viewport in its\n    parent&apos;s layout."
			}, {
				"name": "layout.pos.col",
				"description": "A numeric vector giving the\n    columns occupied by this viewport in its\n    parent&apos;s layout."
			}, {
				"name": "name",
				"description": "A character value to uniquely identify the viewport\n    once it has been pushed onto the viewport tree."
			}, {
				"name": "...",
				"description": "Any number of grid viewport objects."
			}, {
				"name": "parent",
				"description": "A grid viewport object."
			}, {
				"name": "children",
				"description": "A vpList object."
			}]
		}, {
			"name": "stringWidth",
			"args": [{
				"name": "string",
				"description": "A character vector or a language object (as used for\n    &#x2018;<a rd-options=\"\" href=\"/link/plotmath?package=grid&amp;version=3.3.2\">plotmath</a>&#x2019; calls."
			}]
		}, {
			"name": "Working with Viewports",
			"args": [{
				"name": "...",
				"description": "One or more objects of class <code>&quot;viewport&quot;</code>."
			}, {
				"name": "n",
				"description": "An integer value indicating how many viewports to\n    pop or navigate up.  The special value <code>0</code> indicates to\n    pop or navigate viewports right up to the root viewport."
			}, {
				"name": "name",
				"description": "A character value to identify a viewport in the tree."
			}, {
				"name": "strict",
				"description": "A boolean indicating whether the vpPath must be\n    matched exactly."
			}, {
				"name": "recording",
				"description": "A logical value to indicate whether the viewport\n    operation should be recorded on the Grid display list."
			}]
		}, {
			"name": "unit.c",
			"args": [{
				"name": "...",
				"description": "An arbitrary number of unit objects."
			}]
		}, {
			"name": "widthDetails",
			"args": [{
				"name": "x",
				"description": "A grid grob."
			}]
		}, {
			"name": "vpPath",
			"args": [{
				"name": "...",
				"description": "Character values which are viewport names."
			}]
		}]
	}
}, {
	"base": {
		"functions": [{
			"name": "all",
			"args": [{
				"name": "...",
				"description": "zero or more logical vectors.  Other objects of zero\n    length are ignored, and the rest are coerced to logical ignoring\n    any class."
			}, {
				"name": "na.rm",
				"description": "logical.  If true <code>NA</code> values are removed before\n    the result is computed."
			}]
		}, {
			"name": "abbreviate",
			"args": [{
				"name": "names.arg",
				"description": "a character vector of names to be abbreviated, or an\n    object to be coerced to a character vector by <code><a rd-options=\"\" href=\"/link/as.character?package=base&amp;version=3.3.2\">as.character</a></code>."
			}, {
				"name": "minlength",
				"description": "the minimum length of the abbreviations."
			}, {
				"name": "use.classes",
				"description": "logical: should lowercase characters be removed first?"
			}, {
				"name": "dot",
				"description": "logical: should a dot (<code>&quot;.&quot;</code>) be appended?"
			}, {
				"name": "strict",
				"description": "logical: should <code>minlength</code> be observed strictly?\n    Note that setting <code>strict = TRUE</code> may return <em>non</em>-unique\n    strings."
			}, {
				"name": "method",
				"description": "a character string specifying the method used with default\n    <code>&quot;left.kept&quot;</code>, see &#x2018;Details&#x2019; below.  Partial matches\n    allowed."
			}, {
				"name": "named",
				"description": "logical: should <code>names</code> (with original vector) be returned."
			}]
		}, {
			"name": "agrep",
			"args": [{
				"name": "pattern",
				"description": "a non-empty character string or a character string\n    containing a regular expression (for <code>fixed = FALSE</code>) to be\n    matched.\n    Coerced by <code><a rd-options=\"\" href=\"/link/as.character?package=base&amp;version=3.3.2\">as.character</a></code> to a string if possible."
			}, {
				"name": "x",
				"description": "character vector where matches are sought.\n    Coerced by <code><a rd-options=\"\" href=\"/link/as.character?package=base&amp;version=3.3.2\">as.character</a></code> to a character vector if\n    possible."
			}, {
				"name": "max.distance",
				"description": "Maximum distance allowed for a match.  Expressed\n    either as integer, or as a fraction of the <em>pattern</em> length\n    times the maximal transformation cost (will be replaced by the\n    smallest integer not less than the corresponding fraction), or a\n    list with possible components\n    <dl>\n            \n            \n            \n            \n            \n    </dl>\n\n    If <code>cost</code> is not given, <code>all</code> defaults to 10%, and the\n    other transformation number bounds default to <code>all</code>.\n    The component names can be abbreviated."
			}, {
				"name": "costs",
				"description": "a numeric vector or list with names partially matching\n    <span class=\"samp\">insertions</span>, <span class=\"samp\">deletions</span> and <span class=\"samp\">substitutions</span> giving\n    the respective costs for computing the generalized Levenshtein\n    distance, or <code>NULL</code> (default) indicating using unit cost for\n    all three possible transformations.\n    Coerced to integer via <code><a rd-options=\"\" href=\"/link/as.integer?package=base&amp;version=3.3.2\">as.integer</a></code> if possible."
			}, {
				"name": "ignore.case",
				"description": "if <code>FALSE</code>, the pattern matching is <em>case\n      sensitive</em> and if <code>TRUE</code>, case is ignored during matching."
			}, {
				"name": "value",
				"description": "if <code>FALSE</code>, a vector containing the (integer)\n    indices of the matches determined is returned and if <code>TRUE</code>, a\n    vector containing the matching elements themselves is returned."
			}, {
				"name": "fixed",
				"description": "logical.  If <code>TRUE</code> (default), the pattern is\n    matched literally (as is).  Otherwise, it is matched as a regular\n    expression."
			}, {
				"name": "useBytes",
				"description": "logical. in a multibyte locale, should the comparison\n    be character-by-character (the default) or byte-by-byte."
			}]
		}, {
			"name": "any",
			"args": [{
				"name": "...",
				"description": "zero or more logical vectors.  Other objects of zero\n    length are ignored, and the rest are coerced to logical ignoring\n    any class."
			}, {
				"name": "na.rm",
				"description": "logical.  If true <code>NA</code> values are removed before\n    the result is computed."
			}]
		}, {
			"name": "all.names",
			"args": [{
				"name": "expr",
				"description": "an <a rd-options=\"\" href=\"/link/expression?package=base&amp;version=3.3.2\">expression</a> or <a rd-options=\"\" href=\"/link/call?package=base&amp;version=3.3.2\">call</a> from which the names\n    are to be extracted."
			}, {
				"name": "functions",
				"description": "a logical value indicating whether function names\n    should be included in the result."
			}, {
				"name": "max.names",
				"description": "the maximum number of names to be returned.  <code>-1</code>\n    indicates no limit (other than vector size limits)."
			}, {
				"name": "unique",
				"description": "a logical value which indicates whether duplicate names\n    should be removed from the value."
			}]
		}, {
			"name": "append",
			"args": [{
				"name": "x",
				"description": "the vector to be modified."
			}, {
				"name": "values",
				"description": "to be included in the modified vector."
			}, {
				"name": "after",
				"description": "a subscript, after which the values are to be appended."
			}]
		}, {
			"name": "all.equal",
			"args": [{
				"name": "target",
				"description": "<span style=\"R\">R</span> object."
			}, {
				"name": "current",
				"description": "other <span style=\"R\">R</span> object, to be compared with <code>target</code>."
			}, {
				"name": "...",
				"description": "Further arguments for different methods, notably the\n    following two, for numerical comparison:"
			}, {
				"name": "tolerance",
				"description": "numeric $\\ge$ 0.  Differences smaller than\n    <code>tolerance</code> are not reported.  The default value is close to\n    <code>1.5e-8</code>."
			}, {
				"name": "scale",
				"description": "numeric scalar &gt; 0 (or <code>NULL</code>). See &#x2018;Details&#x2019;."
			}, {
				"name": "check.attributes",
				"description": "logical indicating if the\n    <code><a rd-options=\"\" href=\"/link/attributes?package=base&amp;version=3.3.2\">attributes</a></code> of <code>target</code> and <code>current</code>\n    (other than the names) should be compared."
			}, {
				"name": "use.names",
				"description": "logical indicating if <code><a rd-options=\"\" href=\"/link/list?package=base&amp;version=3.3.2\">list</a></code> comparison\n    should report differing components by name (if matching) instead of\n    integer index.  Note that this comes after <code>...</code> and so must\n    be specified by its full name."
			}, {
				"name": "all.names",
				"description": "logical passed to <code><a rd-options=\"\" href=\"/link/ls?package=base&amp;version=3.3.2\">ls</a></code> indicating if\n    &#x201C;hidden&#x201D; objects should also be considered in the environments."
			}, {
				"name": "check.names",
				"description": "logical indicating if the <code><a rd-options=\"\" href=\"/link/names?package=base&amp;version=3.3.2\">names</a>(.)</code>\n    of <code>target</code> and <code>current</code> should be compared."
			}]
		}, {
			"name": "apply",
			"args": [{
				"name": "X",
				"description": "an array, including a matrix."
			}, {
				"name": "MARGIN",
				"description": "a vector giving the subscripts which the function will\n    be applied over.  E.g., for a matrix <code>1</code> indicates rows,\n    <code>2</code> indicates columns, <code>c(1, 2)</code> indicates rows and\n    columns. Where <code>X</code> has named dimnames, it can be a character\n    vector selecting dimension names."
			}, {
				"name": "FUN",
				"description": "the function to be applied: see &#x2018;Details&#x2019;.\n    In the case of functions like <code>+</code>, <code>%*%</code>, etc., the\n    function name must be backquoted or quoted."
			}, {
				"name": "...",
				"description": "optional arguments to <code>FUN</code>."
			}]
		}, {
			"name": "aperm",
			"args": [{
				"name": "a",
				"description": "the array to be transposed."
			}, {
				"name": "perm",
				"description": "the subscript permutation vector, usually a permutation of\n    the integers <code>1:n</code>, where <code>n</code> is the number of dimensions\n    of <code>a</code>.  When <code>a</code> has named dimnames, it can be a\n    character vector of length <code>n</code> giving a permutation of those\n    names. The default (used whenever <code>perm</code> has zero length) is to\n    reverse the order of the dimensions."
			}, {
				"name": "resize",
				"description": "a flag indicating whether the vector should be\n    resized as well as having its elements reordered (default <code>TRUE</code>)."
			}, {
				"name": "keep.class",
				"description": "logical indicating if the result should be of the\n    same class as <code>a</code>."
			}, {
				"name": "...",
				"description": "potential further arguments of methods."
			}]
		}, {
			"name": "args",
			"args": [{
				"name": "name",
				"description": "a function (a closure or a primitive).\n    If <code>name</code> is a character string then the function with that\n    name is found and used."
			}]
		}, {
			"name": "Arithmetic",
			"args": [{
				"name": "x, y",
				"description": "numeric or complex vectors or objects which can be\n    coerced to such, or other objects for which methods have been written."
			}]
		}, {
			"name": "as.data.frame",
			"args": [{
				"name": "x",
				"description": "any <span style=\"R\">R</span> object."
			}, {
				"name": "row.names",
				"description": "<code>NULL</code> or a character vector giving the row\n    names for the data frame.  Missing values are not allowed."
			}, {
				"name": "optional",
				"description": "logical. If <code>TRUE</code>, setting row names and\n    converting column names (to syntactic names: see\n    <code><a rd-options=\"\" href=\"/link/make.names?package=base&amp;version=3.3.2\">make.names</a></code>) is optional.  Note that all of <span style=\"R\">R</span>&apos;s\n    <span class=\"pkg\">base</span> package <code>as.data.frame()</code> methods use\n    <code>optional</code> only for column names treatment, basically with the\n    meaning of <code><a rd-options=\"\" href=\"/link/data.frame?package=base&amp;version=3.3.2\">data.frame</a>(*, check.names = !optional)</code>."
			}, {
				"name": "...",
				"description": "additional arguments to be passed to or from methods."
			}, {
				"name": "stringsAsFactors",
				"description": "logical: should the character vector be converted\n    to a factor?"
			}, {
				"name": "cut.names",
				"description": "logical or integer; indicating if column names with\n    more than 256 (or <code>cut.names</code> if that is numeric) characters\n    should be shortened (and the last 6 characters replaced by <code>&quot; ...&quot;</code>)."
			}, {
				"name": "col.names",
				"description": "(optional) character vector of column names."
			}, {
				"name": "fix.empty.names",
				"description": "logical indicating if empty column names, i.e.,\n    <code>&quot;&quot;</code> should be fixed up (in <code><a rd-options=\"\" href=\"/link/data.frame?package=base&amp;version=3.3.2\">data.frame</a></code>) or not."
			}]
		}, {
			"name": "array",
			"args": [{
				"name": "data",
				"description": "a vector (including a list or <code><a rd-options=\"\" href=\"/link/expression?package=base&amp;version=3.3.2\">expression</a></code>\n    vector) giving data to fill the array.  Non-atomic classed objects\n    are coerced by <code><a rd-options=\"\" href=\"/link/as.vector?package=base&amp;version=3.3.2\">as.vector</a></code>."
			}, {
				"name": "dim",
				"description": "the dim attribute for the array to be created, that is an\n    integer vector of length one or more giving the maximal indices in\n    each dimension."
			}, {
				"name": "dimnames",
				"description": "either <code>NULL</code> or the names for the dimensions.\n    This must a list (or it will be ignored) with one component for each\n    dimension, either <code>NULL</code> or a character vector of the length\n    given by <code>dim</code> for that dimension.  The list can be named, and\n    the list names will be used as names for the dimensions.  If the\n    list is shorter than the number of dimensions, it is extended by\n    <code>NULL</code>s to the length required."
			}, {
				"name": "x",
				"description": "an <span style=\"R\">R</span> object."
			}, {
				"name": "...",
				"description": "additional arguments to be passed to or from methods."
			}]
		}, {
			"name": "as.Date",
			"args": [{
				"name": "x",
				"description": "An object to be converted."
			}, {
				"name": "format",
				"description": "A character string.  If not specified, it will try\n    <code>&quot;%Y-%m-%d&quot;</code> then <code>&quot;%Y/%m/%d&quot;</code> on the first\n    non-<code>NA</code> element, and give an error if neither works.\n    Otherwise, the processing is via <code><a rd-options=\"\" href=\"/link/strptime?package=base&amp;version=3.3.2\">strptime</a></code>"
			}, {
				"name": "origin",
				"description": "a Date object, or something which can be coerced by\n    <code>as.Date(origin, ...)</code> to such an object."
			}, {
				"name": "tz",
				"description": "a time zone name."
			}, {
				"name": "...",
				"description": "Further arguments to be passed from or to other methods,\n    including <code>format</code> for <code>as.character</code> and <code>as.Date</code>\n    methods."
			}]
		}, {
			"name": "assign",
			"args": [{
				"name": "x",
				"description": "a variable name, given as a character string.  No coercion is\n    done, and the first element of a character vector of length greater\n    than one will be used, with a warning."
			}, {
				"name": "value",
				"description": "a value to be assigned to <code>x</code>."
			}, {
				"name": "pos",
				"description": "where to do the assignment.  By default, assigns into the\n    current environment.  See &#x2018;Details&#x2019; for other possibilities."
			}, {
				"name": "envir",
				"description": "the <code><a rd-options=\"\" href=\"/link/environment?package=base&amp;version=3.3.2\">environment</a></code> to use.  See &#x2018;Details&#x2019;."
			}, {
				"name": "inherits",
				"description": "should the enclosing frames of the environment be\n    inspected?"
			}, {
				"name": "immediate",
				"description": "an ignored compatibility feature."
			}]
		}, {
			"name": "AsIs",
			"args": [{
				"name": "x",
				"description": "an object"
			}]
		}, {
			"name": "as.POSIX*",
			"args": [{
				"name": "x",
				"description": "An object to be converted."
			}, {
				"name": "tz",
				"description": "A time zone specification to be used for the conversion,\n    <em>if one is required</em>.  System-specific (see <a rd-options=\"\" href=\"/link/time%20zones?package=base&amp;version=3.3.2\">time zones</a>),\n    but <code>&quot;&quot;</code> is the current time zone, and <code>&quot;GMT&quot;</code> is UTC\n    (Universal Time, Coordinated). Invalid values are most commonly\n    treated as UTC, on some platforms with a warning."
			}, {
				"name": "...",
				"description": "further arguments to be passed to or from other methods."
			}, {
				"name": "format",
				"description": "character string giving a date-time format as used\n    by <code><a rd-options=\"\" href=\"/link/strptime?package=base&amp;version=3.3.2\">strptime</a></code>."
			}, {
				"name": "origin",
				"description": "a date-time object, or something which can be coerced by\n    <code>as.POSIXct(tz = &quot;GMT&quot;)</code> to such an object."
			}]
		}, {
			"name": "assignOps",
			"args": [{
				"name": "x",
				"description": "a variable name (possibly quoted)."
			}, {
				"name": "value",
				"description": "a value to be assigned to <code>x</code>."
			}]
		}, {
			"name": "as.environment",
			"args": [{
				"name": "x",
				"description": "an <span style=\"R\">R</span> object to convert.  If it is already an\n    environment, just return it.  If it is a positive number, return the\n    environment corresponding to that position on the search list. If it\n    is <code>-1</code>, the environment it is called from.  If\n    it is a character string, match the string to the names on the\n    search list.\n\n    If it is a list, the equivalent of <code><a rd-options=\"\" href=\"/link/list2env?package=base&amp;version=3.3.2\">list2env</a>(x,\n      parent = emptyenv())</code> is returned.\n\n    If <code><a rd-options=\"\" href=\"/link/is.object?package=base&amp;version=3.3.2\">is.object</a>(x)</code> is true and it has a <code><a rd-options=\"\" href=\"/link/class?package=base&amp;version=3.3.2\">class</a></code>\n    for which an <code>as.environment</code> method is found, that is used."
			}]
		}, {
			"name": "as.function",
			"args": [{
				"name": "x",
				"description": "object to convert, a list for the default method."
			}, {
				"name": "...",
				"description": "additional arguments, depending on object"
			}, {
				"name": "envir",
				"description": "environment in which the function should be defined"
			}]
		}, {
			"name": "autoload",
			"args": [{
				"name": "name",
				"description": "string giving the name of an object."
			}, {
				"name": "package",
				"description": "string giving the name of a package containing the object."
			}, {
				"name": "reset",
				"description": "logical: for internal use by <code>autoloader</code>."
			}, {
				"name": "...",
				"description": "other arguments to <code><a rd-options=\"\" href=\"/link/library?package=base&amp;version=3.3.2\">library</a></code>."
			}]
		}, {
			"name": "basename",
			"args": [{
				"name": "path",
				"description": "character vector, containing path names."
			}]
		}, {
			"name": "base-defunct",
			"args": []
		}, {
			"name": "base-deprecated",
			"args": []
		}, {
			"name": "attach",
			"args": [{
				"name": "what",
				"description": "&#x2018;database&#x2019;.  This can be a\n    <code>data.frame</code> or a <code>list</code> or a <span style=\"R\">R</span> data file created with\n    <code><a rd-options=\"\" href=\"/link/save?package=base&amp;version=3.3.2\">save</a></code> or <code>NULL</code> or an environment.  See also\n    &#x2018;Details&#x2019;."
			}, {
				"name": "pos",
				"description": "integer specifying position in <code><a rd-options=\"\" href=\"/link/search?package=base&amp;version=3.3.2\">search</a>()</code> where\n    to attach."
			}, {
				"name": "name",
				"description": "name to use for the attached database. Names starting with\n    <code>package:</code> are reserved for <code><a rd-options=\"\" href=\"/link/library?package=base&amp;version=3.3.2\">library</a></code>."
			}, {
				"name": "warn.conflicts",
				"description": "logical.  If <code>TRUE</code>, warnings are\n    printed about <code><a rd-options=\"\" href=\"/link/conflicts?package=base&amp;version=3.3.2\">conflicts</a></code> from attaching the database,\n    unless that database contains an object <code>.conflicts.OK</code>.  A\n    conflict is a function masking a function, or a non-function masking\n    a non-function."
			}]
		}, {
			"name": "attributes",
			"args": [{
				"name": "obj",
				"description": "an object"
			}, {
				"name": "value",
				"description": "an appropriate named list of attributes, or <code>NULL</code>."
			}]
		}, {
			"name": "base-package",
			"args": []
		}, {
			"name": "base-internal",
			"args": [{
				"name": "x",
				"description": "object from which to extract elements."
			}, {
				"name": "file",
				"description": "The full path to the &#x2018;<span class=\"file\">DESCRIPTION</span>&#x2019; file of a package."
			}, {
				"name": "lib.loc",
				"description": "a character vector describing the location of <span style=\"R\">R</span>\n    library trees to search through, or <code>NULL</code>.  The default value\n    of <code>NULL</code> corresponds to all libraries currently known to\n    <code><a rd-options=\"\" href=\"/link/.libPaths?package=base&amp;version=3.3.2\">.libPaths</a>()</code>."
			}, {
				"name": "quiet",
				"description": "logical.  Should this not give warnings or an error\n    if the package(s) are not found?"
			}, {
				"name": "useImports",
				"description": "logical.  Should  the <code>Imports</code> field be processed?"
			}, {
				"name": "quietly",
				"description": "logical: should message(s) be printed."
			}, {
				"name": "pkginfo",
				"description": "A processed &#x2018;<span class=\"file\">DESCRIPTION</span>&#x2019; file of class\n    <code>&quot;packageDescription2&quot;</code>."
			}, {
				"name": "built, run",
				"description": "platform strings of the form <code>&quot;cpu-vendor-os&quot;</code>."
			}, {
				"name": "name",
				"description": "name of image file to save or load."
			}, {
				"name": "x",
				"description": "an object with a <code>&quot;row.names&quot;</code> attribute, typically a\n    data frame."
			}, {
				"name": "type",
				"description": "integer.  Currently <code>type = 0</code> returns the internal\n    <code>&quot;row.names&quot;</code> attribute (possibly <code>NULL</code>), <code>type = 2</code>\n    the number of rows implied by the attribute, and <code>type = 1</code> the\n    latter with a negative sign for &#x2018;automatic&#x2019; row names."
			}, {
				"name": "n",
				"description": "integer.  The number of rows."
			}, {
				"name": "info",
				"description": "character string such as <code>&quot;package:MASS&quot;</code>."
			}, {
				"name": "key",
				"description": "the object name in a lazyload database."
			}, {
				"name": "file",
				"description": "the filepath to a lazyload database."
			}, {
				"name": "compressed",
				"description": "logical: are the values in the database compressed?"
			}, {
				"name": "refhook",
				"description": "a load hook: see <code><a rd-options=\"\" href=\"/link/unserialize?package=base&amp;version=3.3.2\">unserialize</a></code>."
			}, {
				"name": "seed",
				"description": "a length-one integer vector."
			}, {
				"name": "i, j",
				"description": "indices."
			}, {
				"name": "strictly",
				"description": "logical."
			}, {
				"name": "obj",
				"description": "an <span style=\"R\">R</span> object."
			}, {
				"name": "xx",
				"description": "a classless object to be placed into the class."
			}, {
				"name": "tz",
				"description": "an optional time zone."
			}, {
				"name": "units",
				"description": "see <code><a rd-options=\"\" href=\"/link/difftime?package=base&amp;version=3.3.2\">difftime</a></code>."
			}, {
				"name": "...",
				"description": "Arguments passed to non-dot name versions."
			}, {
				"name": "FUN",
				"description": "function to apply, found via <code><a rd-options=\"\" href=\"/link/match.fun?package=base&amp;version=3.3.2\">match.fun</a></code>."
			}, {
				"name": "dots",
				"description": "list of arguments to vectorize over (vectors or lists of\n    strictly positive length, or all of zero length)."
			}, {
				"name": "MoreArgs",
				"description": "a list of other arguments to <code>FUN</code>."
			}, {
				"name": "pos",
				"description": "an integer."
			}, {
				"name": "same",
				"description": "character vector of <em>same</em> objects, masking others."
			}, {
				"name": "pkg",
				"description": "character string naming the package which is masked from or by."
			}, {
				"name": "by",
				"description": "logical indicating if the masking happens <em>by</em>\n  <code>pkg</code>, or (<code>by = FALSE</code>) from <code>pkg</code>."
			}]
		}, {
			"name": "attr",
			"args": [{
				"name": "x",
				"description": "an object whose attributes are to be accessed."
			}, {
				"name": "which",
				"description": "a non-empty character string specifying which attribute\n    is to be accessed."
			}, {
				"name": "exact",
				"description": "logical: should <code>which</code> be matched exactly?"
			}, {
				"name": "value",
				"description": "an object, the new value of the attribute, or <code>NULL</code>\n    to remove the attribute."
			}]
		}, {
			"name": "backsolve",
			"args": [{
				"name": "r, l",
				"description": "an upper (or lower) triangular matrix giving the\n    coefficients for the system to be solved.  Values below (above)\n    the diagonal are ignored."
			}, {
				"name": "x",
				"description": "a matrix whose columns give the right-hand sides for\n    the equations."
			}, {
				"name": "k",
				"description": "The number of columns of <code>r</code> and rows of <code>x</code> to use."
			}, {
				"name": "upper.tri",
				"description": "logical; if <code>TRUE</code> (default), the <em>upper</em>\n    <em>tri</em>angular part of <code>r</code> is used.  Otherwise, the lower one."
			}, {
				"name": "transpose",
				"description": "logical; if <code>TRUE</code>, solve $r&apos; * y = x$ for\n    $y$, i.e., <code>t(r) %*% y == x</code>."
			}]
		}, {
			"name": "body",
			"args": [{
				"name": "fun",
				"description": "a function object, or see &#x2018;Details&#x2019;."
			}, {
				"name": "envir",
				"description": "environment in which the function should be defined."
			}, {
				"name": "value",
				"description": "an object, usually a <a rd-options=\"\" href=\"/link/language%20object?package=base&amp;version=3.3.2\">language object</a>: see section\n    &#x2018;Value&#x2019;."
			}]
		}, {
			"name": "browserText",
			"args": [{
				"name": "n",
				"description": "The number of contexts to skip over, it must be non-negative."
			}]
		}, {
			"name": "bitwise",
			"args": [{
				"name": "a, b",
				"description": "integer vectors; numeric vectors are coerced to integer vectors."
			}, {
				"name": "n",
				"description": "non-negative integer vector of values up to 31."
			}]
		}, {
			"name": "by",
			"args": [{
				"name": "data",
				"description": "an <span style=\"R\">R</span> object, normally a data frame, possibly a matrix."
			}, {
				"name": "INDICES",
				"description": "a factor or a list of factors, each of length\n   <code>nrow(data)</code>."
			}, {
				"name": "FUN",
				"description": "a function to be applied to (usually data-frame) subsets of\n   <code>data</code>."
			}, {
				"name": "...",
				"description": "further arguments to <code>FUN</code>."
			}, {
				"name": "simplify",
				"description": "logical: see <code><a rd-options=\"\" href=\"/link/tapply?package=base&amp;version=3.3.2\">tapply</a></code>."
			}]
		}, {
			"name": "builtins",
			"args": [{
				"name": "internal",
				"description": "a logical indicating whether only &#x2018;internal&#x2019;\n    functions (which can be called via <code><a rd-options=\"\" href=\"/link/.Internal?package=base&amp;version=3.3.2\">.Internal</a></code>) should\n    be returned."
			}]
		}, {
			"name": ".bincode",
			"args": [{
				"name": "x",
				"description": "a numeric vector which is to be converted to integer codes by\n    binning."
			}, {
				"name": "breaks",
				"description": "a numeric vector of two or more cut points, sorted in\n    increasing order."
			}, {
				"name": "right",
				"description": "logical, indicating if the intervals should be closed on\n    the right (and open on the left) or vice versa."
			}, {
				"name": "include.lowest",
				"description": "logical, indicating if an &#x2018;x[i]&#x2019; equal to\n    the lowest (or highest, for <code>right = FALSE</code>) &#x2018;breaks&#x2019;\n    value should be included in the first (or last) bin."
			}]
		}, {
			"name": "Bessel",
			"args": [{
				"name": "x",
				"description": "numeric, $\\ge 0$."
			}, {
				"name": "nu",
				"description": "numeric; The <em>order</em> (maybe fractional!) of the\n    corresponding Bessel function."
			}, {
				"name": "expon.scaled",
				"description": "logical; if <code>TRUE</code>, the results are\n    exponentially scaled in order to avoid overflow\n    ($I(nu)$) or underflow ($K(nu)$),\n    respectively."
			}]
		}, {
			"name": "bindenv",
			"args": [{
				"name": "env",
				"description": "an environment."
			}, {
				"name": "bindings",
				"description": "logical specifying whether bindings should be locked."
			}, {
				"name": "sym",
				"description": "a name object or character string."
			}, {
				"name": "fun",
				"description": "a function taking zero or one arguments."
			}]
		}, {
			"name": "bquote",
			"args": [{
				"name": "expr",
				"description": "A <a rd-options=\"\" href=\"/link/language%20object?package=base&amp;version=3.3.2\">language object</a>."
			}, {
				"name": "where",
				"description": "An environment."
			}]
		}, {
			"name": "browser",
			"args": [{
				"name": "text",
				"description": "a text string that can be retrieved once the browser is invoked."
			}, {
				"name": "condition",
				"description": "a condition that can be retrieved once the browser is\n    invoked."
			}, {
				"name": "expr",
				"description": "An expression, which if it evaluates to <code>TRUE</code> the\n    debugger will invoked, otherwise control is returned directly."
			}, {
				"name": "skipCalls",
				"description": "how many previous calls to skip when reporting the\n    calling context."
			}]
		}, {
			"name": "c",
			"args": [{
				"name": "...",
				"description": "objects to be concatenated."
			}, {
				"name": "recursive",
				"description": "logical.  If <code>recursive = TRUE</code>, the function\n    recursively descends through lists (and pairlists) combining all\n    their elements into a vector."
			}, {
				"name": "use.names",
				"description": "logical indicating if <code><a rd-options=\"\" href=\"/link/names?package=base&amp;version=3.3.2\">names</a></code> should be\n    preserved."
			}]
		}, {
			"name": "call",
			"args": [{
				"name": "name",
				"description": "a non-empty character string naming the function to be called."
			}, {
				"name": "...",
				"description": "arguments to be part of the call."
			}, {
				"name": "x",
				"description": "an arbitrary <span style=\"R\">R</span> object."
			}]
		}, {
			"name": "capabilities",
			"args": [{
				"name": "what",
				"description": "character vector or <code>NULL</code>, specifying\n    required components.  <code>NULL</code> implies that all are required."
			}]
		}, {
			"name": "callCC",
			"args": [{
				"name": "fun",
				"description": "function of one argument, the exit procedure."
			}]
		}, {
			"name": "cat",
			"args": [{
				"name": "...",
				"description": "<span style=\"R\">R</span> objects (see &#x2018;Details&#x2019; for the types of objects\n    allowed)."
			}, {
				"name": "file",
				"description": "A <a rd-options=\"\" href=\"/link/connection?package=base&amp;version=3.3.2\">connection</a>, or a character string naming the file\n    to print to.  If <code>&quot;&quot;</code> (the default), <code>cat</code> prints to the\n    standard output connection, the console unless redirected by\n    <code><a rd-options=\"\" href=\"/link/sink?package=base&amp;version=3.3.2\">sink</a></code>.\n unix\n    If it is <code>&quot;|cmd&quot;</code>, the output is piped to the command given\n    by &#x2018;<span class=\"file\">cmd</span>&#x2019;, by opening a pipe connection."
			}, {
				"name": "sep",
				"description": "a character vector of strings to append after each element."
			}, {
				"name": "fill",
				"description": "a logical or (positive) numeric controlling how the output is\n    broken into successive lines.  If <code>FALSE</code> (default), only newlines\n    created explicitly by <span class=\"samp\">&quot;\\n&quot;</span> are printed.  Otherwise, the\n    output is broken into lines with print width equal to the option\n    <code>width</code> if <code>fill</code> is <code>TRUE</code>, or the value of\n    <code>fill</code> if this is numeric.  Non-positive <code>fill</code> values are\n    ignored, with a warning."
			}, {
				"name": "labels",
				"description": "character vector of labels for the lines printed.\n    Ignored if <code>fill</code> is <code>FALSE</code>."
			}, {
				"name": "append",
				"description": "logical. Only used if the argument <code>file</code> is the\n    name of file (and not a connection or <code>&quot;|cmd&quot;</code>).\n    If <code>TRUE</code> output will be appended to\n    <code>file</code>; otherwise, it will overwrite the contents of\n    <code>file</code>."
			}]
		}, {
			"name": "charmatch",
			"args": [{
				"name": "x",
				"description": "the values to be matched: converted to a character vector by\n    <code><a rd-options=\"\" href=\"/link/as.character?package=base&amp;version=3.3.2\">as.character</a></code>.  <a rd-options=\"\" href=\"/link/Long%20vectors?package=base&amp;version=3.3.2\">Long vectors</a> are supported."
			}, {
				"name": "table",
				"description": "the values to be matched against: converted to a character\n    vector.  <a rd-options=\"\" href=\"/link/Long%20vectors?package=base&amp;version=3.3.2\">Long vectors</a> are not supported."
			}, {
				"name": "nomatch",
				"description": "the (integer) value to be returned at non-matching\n    positions."
			}]
		}, {
			"name": "character",
			"args": [{
				"name": "length",
				"description": "A non-negative integer specifying the desired length.\n    Double values will be coerced to integer:\n    supplying an argument of length other than one is an error."
			}, {
				"name": "x",
				"description": "object to be coerced or tested."
			}, {
				"name": "...",
				"description": "further arguments passed to or from other methods."
			}]
		}, {
			"name": "cbind",
			"args": [{
				"name": "...",
				"description": "(generalized) vectors or matrices.  These can be given as named\n    arguments.  Other <span style=\"R\">R</span> objects may be coerced as appropriate, or S4\n    methods may be used: see sections &#x2018;Details&#x2019; and\n    &#x2018;Value&#x2019;.  (For the <code>&quot;data.frame&quot;</code> method of <code>cbind</code>\n    these can be further arguments to <code><a rd-options=\"\" href=\"/link/data.frame?package=base&amp;version=3.3.2\">data.frame</a></code> such as\n    <code>stringsAsFactors</code>.)"
			}, {
				"name": "deparse.level",
				"description": "integer controlling the construction of labels in\n    the case of non-matrix-like arguments (for the default method):\n    <code>deparse.level = 0</code> constructs no labels; the default,\n    <code>deparse.level = 1 or 2</code> constructs labels from the argument\n    names, see the &#x2018;Value&#x2019; section below."
			}, {
				"name": "make.row.names",
				"description": "(only for data frame method:) logical\n    indicating if unique and valid <code><a rd-options=\"\" href=\"/link/row.names?package=base&amp;version=3.3.2\">row.names</a></code> should be\n    constructed from the arguments."
			}, {
				"name": "stringsAsFactors",
				"description": "logical, passed to <code><a rd-options=\"\" href=\"/link/as.data.frame?package=base&amp;version=3.3.2\">as.data.frame</a></code>;\n    only has an effect when the <code>...</code> arguments contain a\n    (non-<code>data.frame</code>) <code><a rd-options=\"\" href=\"/link/character?package=base&amp;version=3.3.2\">character</a></code>."
			}]
		}, {
			"name": "CallExternal",
			"args": [{
				"name": ".NAME",
				"description": "a character string giving the name of a C function,\n    or an object of class <code>&quot;<a rd-options=\"\" href=\"/link/NativeSymbolInfo?package=base&amp;version=3.3.2\">NativeSymbolInfo</a>&quot;</code>,\n    <code>&quot;<a rd-options=\"\" href=\"/link/RegisteredNativeSymbol?package=base&amp;version=3.3.2\">RegisteredNativeSymbol</a>&quot;</code> or\n    <code>&quot;<a rd-options=\"\" href=\"/link/NativeSymbol?package=base&amp;version=3.3.2\">NativeSymbol</a>&quot;</code> referring to such a name."
			}, {
				"name": "...",
				"description": "arguments to be passed to the compiled code. Up to 65 for\n    <code>.Call</code>."
			}, {
				"name": "PACKAGE",
				"description": "if supplied, confine the search for a character string\n    <code>.NAME</code> to the DLL given by this argument (plus the\n    conventional extension, &#x2018;<span class=\"file\">.so</span>&#x2019;, &#x2018;<span class=\"file\">.dll</span>&#x2019;, ...).\n\n    This argument follows <code>...</code> and so its name cannot be abbreviated.\n\n    This is intended to add safety for packages, which can ensure by\n    using this argument that no other package can override their\n    external symbols, and also speeds up the search (see &#x2018;Note&#x2019;)."
			}]
		}, {
			"name": "char.expand",
			"args": [{
				"name": "input",
				"description": "a character string to be expanded."
			}, {
				"name": "target",
				"description": "a character vector with the values to be matched\n    against."
			}, {
				"name": "nomatch",
				"description": "an <span style=\"R\">R</span> expression to be evaluated in case expansion was\n    not possible."
			}]
		}, {
			"name": "class",
			"args": [{
				"name": "x",
				"description": "a <span style=\"R\">R</span> object"
			}, {
				"name": "what, value",
				"description": "a character vector naming classes.  <code>value</code>\n    can also be <code>NULL</code>."
			}, {
				"name": "which",
				"description": "logical affecting return value: see &#x2018;Details&#x2019;."
			}]
		}, {
			"name": "col",
			"args": [{
				"name": "x",
				"description": "a matrix-like object, that is one with a two-dimensional\n    <code>dim</code>."
			}, {
				"name": "as.factor",
				"description": "a logical value indicating whether the value should\n    be returned as a factor of column labels (created if necessary)\n    rather than as numbers."
			}]
		}, {
			"name": "chartr",
			"args": [{
				"name": "x",
				"description": "a character vector, or an object that can be coerced to\n    character by <code><a rd-options=\"\" href=\"/link/as.character?package=base&amp;version=3.3.2\">as.character</a></code>."
			}, {
				"name": "old",
				"description": "a character string specifying the characters to be\n    translated.  If a character vector of length 2 or more is supplied,\n    the first element is used with a warning."
			}, {
				"name": "new",
				"description": "a character string specifying the translations. If a\n    character vector of length 2 or more is supplied, the first element\n    is used with a warning."
			}, {
				"name": "upper",
				"description": "logical: translate to upper or lower case?."
			}]
		}, {
			"name": "chol2inv",
			"args": [{
				"name": "x",
				"description": "a matrix.  The first <code>size</code> columns of the upper triangle\n    contain the Choleski decomposition of the matrix to be inverted."
			}, {
				"name": "size",
				"description": "the number of columns of <code>x</code> containing the\n    Choleski decomposition."
			}, {
				"name": "LINPACK",
				"description": "logical.  Defunct and ignored (with a warning for true value)."
			}]
		}, {
			"name": "chol",
			"args": [{
				"name": "x",
				"description": "an object for which a method exists.  The default method\n    applies to numeric (or logical) symmetric, positive-definite matrices."
			}, {
				"name": "...",
				"description": "arguments to be based to or from methods."
			}, {
				"name": "pivot",
				"description": "Should pivoting be used?"
			}, {
				"name": "LINPACK",
				"description": "logical.  Should LINPACK be used (now ignored)?"
			}, {
				"name": "tol",
				"description": "A numeric tolerance for use with <code>pivot = TRUE</code>."
			}]
		}, {
			"name": "chkDots",
			"args": [{
				"name": "...",
				"description": "&#x201C;the dots&#x201D;, as passed from the caller."
			}, {
				"name": "which.call",
				"description": "passed to <code><a rd-options=\"\" href=\"/link/sys.call?package=base&amp;version=3.3.2\">sys.call</a>()</code>.  A caller may\n    use -2 if the message should mention <em>its</em> caller."
			}, {
				"name": "allowed",
				"description": "not yet implemented: character vector of <em>named</em>\n    elements in <code>...</code> which are &#x201C;allowed&#x201D; and hence not\n    warned about."
			}]
		}, {
			"name": "colSums",
			"args": [{
				"name": "x",
				"description": "an array of two or more dimensions, containing numeric,\n    complex, integer or logical values, or a numeric data frame.  For\n    <code>.colSums()</code> etc, a numeric, integer or logical matrix (or\n    vector of length <code>m * n</code>)."
			}, {
				"name": "na.rm",
				"description": "logical.  Should missing values (including <code>NaN</code>)\n    be omitted from the calculations?"
			}, {
				"name": "dims",
				"description": "integer: Which dimensions are regarded as &#x2018;rows&#x2019; or\n    &#x2018;columns&#x2019; to sum over.  For <code>row*</code>, the sum or mean is\n    over dimensions <code>dims+1, ...</code>; for <code>col*</code> it is over\n    dimensions <code>1:dims</code>."
			}, {
				"name": "m, n",
				"description": "the dimensions of the matrix <code>x</code> for\n    <code>.colSums()</code> etc."
			}]
		}, {
			"name": "Colon",
			"args": [{
				"name": "from",
				"description": "starting value of sequence."
			}, {
				"name": "to",
				"description": "(maximal) end value of the sequence."
			}, {
				"name": "a, b",
				"description": "<code><a rd-options=\"\" href=\"/link/factor?package=base&amp;version=3.3.2\">factor</a></code>s of the same length."
			}]
		}, {
			"name": "row+colnames",
			"args": [{
				"name": "x",
				"description": "a matrix-like <span style=\"R\">R</span> object, with at least two dimensions for\n    <code>colnames</code>."
			}, {
				"name": "do.NULL",
				"description": "logical. If <code>FALSE</code> and names are <code>NULL</code>, names are created."
			}, {
				"name": "prefix",
				"description": "for created names."
			}, {
				"name": "value",
				"description": "a valid value for that component of\n    <code><a rd-options=\"\" href=\"/link/dimnames?package=base&amp;version=3.3.2\">dimnames</a>(x)</code>.  For a matrix or array this is either\n    <code>NULL</code> or a character vector of non-zero length equal to the\n    appropriate dimension."
			}]
		}, {
			"name": "commandArgs",
			"args": [{
				"name": "trailingOnly",
				"description": "logical.  Should only arguments after\n    <span class=\"option\">--args</span> be returned?"
			}]
		}, {
			"name": "Constants",
			"args": []
		}, {
			"name": "contributors",
			"args": []
		}, {
			"name": "conditions",
			"args": [{
				"name": "c",
				"description": "a condition object."
			}, {
				"name": "call",
				"description": "call expression."
			}, {
				"name": "cond",
				"description": "a condition object."
			}, {
				"name": "expr",
				"description": "expression to be evaluated."
			}, {
				"name": "finally",
				"description": "expression to be evaluated before returning or exiting."
			}, {
				"name": "h",
				"description": "function."
			}, {
				"name": "message",
				"description": "character string."
			}, {
				"name": "msg",
				"description": "character string."
			}, {
				"name": "name",
				"description": "character string naming a restart."
			}, {
				"name": "r",
				"description": "restart object."
			}, {
				"name": "x",
				"description": "object."
			}, {
				"name": "...",
				"description": "additional arguments; see details below."
			}]
		}, {
			"name": "complex",
			"args": [{
				"name": "length.out",
				"description": "numeric.  Desired length of the output vector,\n    inputs being recycled as needed."
			}, {
				"name": "real",
				"description": "numeric vector."
			}, {
				"name": "imaginary",
				"description": "numeric vector."
			}, {
				"name": "modulus",
				"description": "numeric vector."
			}, {
				"name": "argument",
				"description": "numeric vector."
			}, {
				"name": "x",
				"description": "an object, probably of mode <code>complex</code>."
			}, {
				"name": "z",
				"description": "an object of mode <code>complex</code>, or one of a class for which\n    a methods has been defined."
			}, {
				"name": "...",
				"description": "further arguments passed to or from other methods."
			}]
		}, {
			"name": "deparse",
			"args": [{
				"name": "expr",
				"description": "any <span style=\"R\">R</span> expression."
			}, {
				"name": "width.cutoff",
				"description": "integer in $[20, 500]$ determining the cutoff\n    (in bytes) at which line-breaking is tried."
			}, {
				"name": "backtick",
				"description": "logical indicating whether symbolic names should be\n    enclosed in backticks if they do not follow the standard syntax."
			}, {
				"name": "control",
				"description": "character vector of deparsing options.  See\n    <code><a rd-options=\"\" href=\"/link/.deparseOpts?package=base&amp;version=3.3.2\">.deparseOpts</a></code>."
			}, {
				"name": "nlines",
				"description": "integer: the maximum number of lines to produce.\n    Negative values indicate no limit."
			}]
		}, {
			"name": "delayedAssign",
			"args": [{
				"name": "x",
				"description": "a variable name (given as a quoted string in the function call)"
			}, {
				"name": "value",
				"description": "an expression to be assigned to <code>x</code>"
			}, {
				"name": "eval.env",
				"description": "an environment in which to evaluate <code>value</code>"
			}, {
				"name": "assign.env",
				"description": "an environment in which to assign <code>x</code>"
			}]
		}, {
			"name": "dim",
			"args": [{
				"name": "x",
				"description": "an <span style=\"R\">R</span> object, for example a matrix, array or data frame."
			}, {
				"name": "value",
				"description": "For the default method, either <code>NULL</code> or\n    a numeric vector, which is coerced to integer (by truncation)."
			}]
		}, {
			"name": "data.class",
			"args": [{
				"name": "x",
				"description": "an <span style=\"R\">R</span> object."
			}]
		}, {
			"name": "dimnames",
			"args": [{
				"name": "x",
				"description": "an <span style=\"R\">R</span> object, for example a matrix, array or data frame."
			}, {
				"name": "value",
				"description": "a possible value for <code>dimnames(x)</code>: see the\n    &#x2018;Value&#x2019; section."
			}, {
				"name": "sep",
				"description": "a character string, used to separate <code>base</code>\n    symbols and digits in the constructed dimnames."
			}, {
				"name": "base",
				"description": "a non-empty <code><a rd-options=\"\" href=\"/link/list?package=base&amp;version=3.3.2\">list</a></code> of character vectors.  The\n    list components are used in turn (and recycled when needed) to\n    construct replacements for empty dimnames components.  See also the\n    examples."
			}, {
				"name": "unique",
				"description": "logical indicating that the dimnames constructed are\n    unique within each dimension in the sense of <code><a rd-options=\"\" href=\"/link/make.unique?package=base&amp;version=3.3.2\">make.unique</a></code>."
			}]
		}, {
			"name": "data.frame",
			"args": [{
				"name": "...",
				"description": "these arguments are of either the form <code>value</code> or\n    <code>tag = value</code>.  Component names are created based on the tag (if\n    present) or the deparsed argument itself."
			}, {
				"name": "row.names",
				"description": "<code>NULL</code> or a single integer or character string\n    specifying a column to be used as row names, or a character or\n    integer vector giving the row names for the data frame."
			}, {
				"name": "check.rows",
				"description": "if <code>TRUE</code> then the rows are checked for\n    consistency of length and names."
			}, {
				"name": "check.names",
				"description": "logical.  If <code>TRUE</code> then the names of the\n    variables in the data frame are checked to ensure that they are\n    syntactically valid variable names and are not duplicated.\n    If necessary they are adjusted (by <code><a rd-options=\"\" href=\"/link/make.names?package=base&amp;version=3.3.2\">make.names</a></code>)\n    so that they are."
			}, {
				"name": "fix.empty.names",
				"description": "logical indicating if arguments which are\n    &#x201C;unnamed&#x201D; (in the sense of not being formally called as\n    <code>someName = arg</code>) get an automatically constructed name or\n    rather name <code>&quot;&quot;</code>.  Needs to be set to <code>FALSE</code> even when\n    <code>check.names</code> is false if <code>&quot;&quot;</code> names should be kept."
			}, {
				"name": "stringsAsFactors",
				"description": "logical: should character vectors be converted\n    to factors?  The &#x2018;factory-fresh&#x2019; default is <code>TRUE</code>, but\n    this can be changed by setting <code><a rd-options=\"\" href=\"/link/options?package=base&amp;version=3.3.2\">options</a>(stringsAsFactors\n      = FALSE)</code>."
			}]
		}, {
			"name": "det",
			"args": [{
				"name": "x",
				"description": "numeric matrix: logical matrices are coerced to numeric."
			}, {
				"name": "logarithm",
				"description": "logical; if <code>TRUE</code> (default) return the\n    logarithm of the modulus of the determinant."
			}, {
				"name": "...",
				"description": "Optional arguments.  At present none are used.  Previous\n    versions of <code>det</code> allowed an optional <code>method</code> argument.\n    This argument will be ignored but will not produce an error."
			}]
		}, {
			"name": "detach",
			"args": [{
				"name": "name",
				"description": "The object to detach.  Defaults to <code>search()[pos]</code>.\n    This can be an unquoted name or a character string but <em>not</em> a\n    character vector.  If a number is supplied this is taken as <code>pos</code>."
			}, {
				"name": "pos",
				"description": "Index position in <code><a rd-options=\"\" href=\"/link/search?package=base&amp;version=3.3.2\">search</a>()</code> of the database to\n    detach.  When <code>name</code> is a number, <code>pos = name</code>\n    is used."
			}, {
				"name": "unload",
				"description": "A logical value indicating whether or not to attempt to\n    unload the namespace when a package is being detached.  If the\n    package has a namespace and <code>unload</code> is <code>TRUE</code>, then\n    <code>detach</code> will attempt to unload the namespace <em>via</em>\n    <code><a rd-options=\"\" href=\"/link/unloadNamespace?package=base&amp;version=3.3.2\">unloadNamespace</a></code>: if the namespace is imported by\n    another namespace or <code>unload</code> is <code>FALSE</code>, no unloading\n    will occur."
			}, {
				"name": "character.only",
				"description": "a logical indicating whether <code>name</code>\n    can be assumed to be a character string."
			}, {
				"name": "force",
				"description": "logical: should a package be detached even though other\n    attached packages depend on it?"
			}]
		}, {
			"name": "comment",
			"args": [{
				"name": "x",
				"description": "any <span style=\"R\">R</span> object"
			}, {
				"name": "value",
				"description": "a <code>character</code> vector, or <code>NULL</code>."
			}]
		}, {
			"name": "Comparison",
			"args": [{
				"name": "x, y",
				"description": "atomic vectors, symbols, calls, or other objects for which\n    methods have been written."
			}]
		}, {
			"name": "dataframeHelpers",
			"args": [{
				"name": "x",
				"description": "object of class <code>data.frame</code>."
			}, {
				"name": "old.rows, new.rows",
				"description": "row names for old and new rows."
			}]
		}, {
			"name": "data.matrix",
			"args": [{
				"name": "frame",
				"description": "a data frame whose components are logical vectors,\n    factors or numeric vectors."
			}, {
				"name": "rownames.force",
				"description": "logical indicating if the resulting matrix\n    should have character (rather than <code>NULL</code>)\n    <code><a rd-options=\"\" href=\"/link/rownames?package=base&amp;version=3.3.2\">rownames</a></code>.  The default, <code>NA</code>, uses <code>NULL</code>\n    rownames if the data frame has &#x2018;automatic&#x2019; row.names or for a\n    zero-row data frame."
			}]
		}, {
			"name": "debug",
			"args": [{
				"name": "fun",
				"description": "any interpreted <span style=\"R\">R</span> function."
			}, {
				"name": "text",
				"description": "a text string that can be retrieved when the browser is entered."
			}, {
				"name": "condition",
				"description": "a condition that can be retrieved when the browser is entered."
			}, {
				"name": "on",
				"description": "logical; a call to the support function\n    <code>debuggingState</code> returns <code>TRUE</code> if debugging is globally\n    turned on, <code>FALSE</code> otherwise.  An argument of one or the other\n    of those values sets the state.  If the debugging state is\n    <code>FALSE</code>, none of the debugging actions will occur (but explicit\n    <code><a rd-options=\"\" href=\"/link/browser?package=base&amp;version=3.3.2\">browser</a></code> calls in functions will continue to work)."
			}]
		}, {
			"name": "Defunct",
			"args": [{
				"name": "new",
				"description": "character string: A suggestion for a replacement function."
			}, {
				"name": "package",
				"description": "character string: The package to be used when suggesting where the\n    defunct function might be listed."
			}, {
				"name": "msg",
				"description": "character string: A message to be printed, if missing a default\n    message is used."
			}]
		}, {
			"name": "do.call",
			"args": [{
				"name": "what",
				"description": "either a function or a non-empty character string naming the\n    function to be called."
			}, {
				"name": "args",
				"description": "a <em>list</em> of arguments to the function call.  The\n    <code>names</code> attribute of <code>args</code> gives the argument names."
			}, {
				"name": "quote",
				"description": "a logical value indicating whether to quote the\n    arguments."
			}, {
				"name": "envir",
				"description": "an environment within which to evaluate the call.  This\n    will be most useful if <code>what</code> is a character string and\n    the arguments are symbols or quoted expressions."
			}]
		}, {
			"name": "dontCheck",
			"args": [{
				"name": "x",
				"description": "an <span style=\"R\">R</span> object."
			}]
		}, {
			"name": "conflicts",
			"args": [{
				"name": "where",
				"description": "A subset of the search path, by default the whole search path."
			}, {
				"name": "detail",
				"description": "If <code>TRUE</code>, give the masked or masking functions for\n   all members of the search path."
			}]
		}, {
			"name": "connections",
			"args": [{
				"name": "description",
				"description": "character string.  A description of the connection:\n    see &#x2018;Details&#x2019;."
			}, {
				"name": "open",
				"description": "character string.  A description of how to open the connection\n    (if it should be opened initially).  See section &#x2018;Modes&#x2019; for\n    possible values."
			}, {
				"name": "blocking",
				"description": "logical.  See the &#x2018;Blocking&#x2019; section."
			}, {
				"name": "encoding",
				"description": "The name of the encoding to be assumed.  See the\n    &#x2018;Encoding&#x2019; section."
			}, {
				"name": "raw",
				"description": "logical.  If true, a &#x2018;raw&#x2019; interface is used which\n    will be more suitable for arguments which are not regular files,\n    e.g.\\ifelse{latex}{\\out{~}}{ } character devices.  This suppresses the check for a compressed\n    file when opening for text-mode reading, and asserts that the\n    &#x2018;file&#x2019; may not be seekable."
			}, {
				"name": "method",
				"description": "character string, partially matched to\n    <code>c(&quot;default&quot;, &quot;internal&quot;, &quot;wininet&quot;, &quot;libcurl&quot;)</code>:\n\n    see &#x2018;Details&#x2019;."
			}, {
				"name": "compression",
				"description": "integer in 0--9.  The amount of compression to be\n    applied when writing, from none to maximal available.  For\n    <code>xzfile</code> can also be negative: see the &#x2018;Compression&#x2019;\n    section."
			}, {
				"name": "timeout",
				"description": "numeric: the timeout (in seconds) to be used for this\n    connection.  Beware that some OSes may treat very large values as\n    zero: however the POSIX standard requires values up to 31 days to be\n    supported."
			}, {
				"name": "filename",
				"description": "a filename within a zip file."
			}, {
				"name": "host",
				"description": "character string.  Host name for the port."
			}, {
				"name": "port",
				"description": "integer.  The TCP port number."
			}, {
				"name": "server",
				"description": "logical.  Should the socket be a client or a server?"
			}, {
				"name": "con",
				"description": "a connection."
			}, {
				"name": "type",
				"description": "character string.  Currently ignored."
			}, {
				"name": "rw",
				"description": "character string.  Empty or <code>&quot;read&quot;</code> or <code>&quot;write&quot;</code>,\n    partial matches allowed."
			}, {
				"name": "...",
				"description": "arguments passed to or from other methods."
			}]
		}, {
			"name": "cut",
			"args": [{
				"name": "x",
				"description": "a numeric vector which is to be converted to a factor by cutting."
			}, {
				"name": "breaks",
				"description": "either a numeric vector of two or more unique cut points or a\n    single number (greater than or equal to 2) giving the number of\n    intervals into which <code>x</code> is to be cut."
			}, {
				"name": "labels",
				"description": "labels for the levels of the resulting category.  By default,\n    labels are constructed using <code>&quot;(a,b]&quot;</code> interval notation.  If\n    <code>labels = FALSE</code>, simple integer codes are returned instead of\n    a factor."
			}, {
				"name": "include.lowest",
				"description": "logical, indicating if an &#x2018;x[i]&#x2019; equal to\n    the lowest (or highest, for <code>right = FALSE</code>) &#x2018;breaks&#x2019;\n    value should be included."
			}, {
				"name": "right",
				"description": "logical, indicating if the intervals should be closed on\n    the right (and open on the left) or vice versa."
			}, {
				"name": "dig.lab",
				"description": "integer which is used when labels are not given.  It\n    determines the number of digits used in formatting the break numbers."
			}, {
				"name": "ordered_result",
				"description": "logical: should the result be an ordered factor?"
			}, {
				"name": "...",
				"description": "further arguments passed to or from other methods."
			}]
		}, {
			"name": "cut.POSIXt",
			"args": [{
				"name": "x",
				"description": "an object inheriting from class <code>&quot;POSIXt&quot;</code> or <code>&quot;Date&quot;</code>."
			}, {
				"name": "breaks",
				"description": "a vector of cut points <em>or</em> number giving the number of\n    intervals which <code>x</code> is to be cut into <em>or</em> an\n    interval specification, one of <code>&quot;sec&quot;</code>, <code>&quot;min&quot;</code>,\n    <code>&quot;hour&quot;</code>, <code>&quot;day&quot;</code>, <code>&quot;DSTday&quot;</code>, <code>&quot;week&quot;</code>,\n    <code>&quot;month&quot;</code>, <code>&quot;quarter&quot;</code> or <code>&quot;year&quot;</code>, optionally\n    preceded by an integer and a space, or followed by <code>&quot;s&quot;</code>.\n    (For <code>&quot;Date&quot;</code> objects only interval specifications using\n    <code>&quot;day&quot;</code>, <code>&quot;week&quot;</code>, <code>&quot;month&quot;</code>, <code>&quot;quarter&quot;</code> and\n    <code>&quot;year&quot;</code> are allowed.)"
			}, {
				"name": "labels",
				"description": "labels for the levels of the resulting category.  By default,\n    labels are constructed from the left-hand end of the intervals\n    (which are included for the default value of <code>right</code>).  If\n    <code>labels = FALSE</code>, simple integer codes are returned instead\n    of a factor."
			}, {
				"name": "start.on.monday",
				"description": "logical.  If <code>breaks = &quot;weeks&quot;</code>, should the\n    week start on Mondays or Sundays?"
			}, {
				"name": "right, ...",
				"description": "arguments to be passed to or from other methods."
			}]
		}, {
			"name": "date",
			"args": []
		}, {
			"name": "Dates",
			"args": [{
				"name": "object",
				"description": "An object summarized."
			}, {
				"name": "digits",
				"description": "Number of significant digits for the computations."
			}, {
				"name": "...",
				"description": "Further arguments to be passed from or to other methods."
			}]
		}, {
			"name": "diff",
			"args": [{
				"name": "x",
				"description": "a numeric vector or matrix containing the values to be\n    differenced."
			}, {
				"name": "lag",
				"description": "an integer indicating which lag to use."
			}, {
				"name": "differences",
				"description": "an integer indicating the order of the difference."
			}, {
				"name": "...",
				"description": "further arguments to be passed to or from methods."
			}]
		}, {
			"name": "cumsum",
			"args": [{
				"name": "x",
				"description": "a numeric or complex (not <code>cummin</code> or <code>cummax</code>)\n    object, or an object that can be coerced to one of these."
			}]
		}, {
			"name": "difftime",
			"args": [{
				"name": "time1, time2",
				"description": "<a rd-options=\"\" href=\"/link/date-time?package=base&amp;version=3.3.2\">date-time</a> or <a rd-options=\"=Dates\" href=\"/link/date?package=base&amp;version=3.3.2&amp;to=%3DDates\">date</a> objects."
			}, {
				"name": "tz",
				"description": "an optional <a rd-options=\"\" href=\"/link/time%20zone?package=base&amp;version=3.3.2\">time zone</a> specification to be used for the\n    conversion, mainly for <code>&quot;POSIXlt&quot;</code> objects."
			}, {
				"name": "units",
				"description": "character string.  Units in which the results are\n    desired.  Can be abbreviated."
			}, {
				"name": "value",
				"description": "character string.  Like <code>units</code>, except that\n    abbreviations are not allowed."
			}, {
				"name": "tim",
				"description": "character string or numeric value specifying a time interval."
			}, {
				"name": "format",
				"description": "character specifying the format of <code>tim</code>: see\n    <code><a rd-options=\"\" href=\"/link/strptime?package=base&amp;version=3.3.2\">strptime</a></code>.  The default is a locale-specific time format."
			}, {
				"name": "x",
				"description": "an object inheriting from class <code>&quot;difftime&quot;</code>."
			}, {
				"name": "...",
				"description": "arguments to be passed to or from other methods."
			}]
		}, {
			"name": "curlGetHeaders",
			"args": [{
				"name": "url",
				"description": "character string specifying the URL."
			}, {
				"name": "redirect",
				"description": "logical: should redirections be followed?"
			}, {
				"name": "verify",
				"description": "logical: should certificates be verified as valid\n    and applying to that host?"
			}]
		}, {
			"name": "DateTimeClasses",
			"args": [{
				"name": "x, object",
				"description": "An object to be printed or summarized from one of the\n    date-time classes."
			}, {
				"name": "digits",
				"description": "Number of significant digits for the computations:\n    should be high enough to represent the least important time unit\n    exactly."
			}, {
				"name": "...",
				"description": "Further arguments to be passed from or to other methods."
			}, {
				"name": "time",
				"description": "date-time objects"
			}, {
				"name": "time1, time2",
				"description": "date-time objects or character vectors.  (Character\n    vectors are converted by <code><a rd-options=\"\" href=\"/link/as.POSIXct?package=base&amp;version=3.3.2\">as.POSIXct</a></code>.)"
			}, {
				"name": "z",
				"description": "a numeric vector (in seconds)"
			}, {
				"name": "lop",
				"description": "One of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code><=< code=\"\">, <code>&gt;</code>\n    or <code>&gt;=</code>.</=<></code>"
			}]
		}, {
			"name": "dcf",
			"args": [{
				"name": "file",
				"description": "either a character string naming a file or a <a rd-options=\"\" href=\"/link/connection?package=base&amp;version=3.3.2\">connection</a>.\n    <code>&quot;&quot;</code> indicates output to the console.  For <code>read.dcf</code> this\n    can name a compressed file (see <code><a rd-options=\"\" href=\"/link/gzfile?package=base&amp;version=3.3.2\">gzfile</a></code>)."
			}, {
				"name": "fields",
				"description": "Fields to read from the DCF file.  Default is to read all\n    fields."
			}, {
				"name": "all",
				"description": "a logical indicating whether in case of multiple\n    occurrences of a field in a record, all these should be gathered.\n    If <code>all</code> is false (default), only the last such occurrence is\n    used."
			}, {
				"name": "keep.white",
				"description": "a character string with the names of the fields for\n    which whitespace should be kept as is, or <code>NULL</code> (default)\n    indicating that there are no such fields.  Coerced to character if\n    possible.  For fields where whitespace is not to be kept as is,\n    <code>read.dcf</code> removes leading and trailing whitespace, and\n    <code>write.dcf</code> folds using <code><a rd-options=\"\" href=\"/link/strwrap?package=base&amp;version=3.3.2\">strwrap</a></code>."
			}, {
				"name": "x",
				"description": "the object to be written, typically a data frame.  If not, it\n    is attempted to coerce <code>x</code> to a data frame."
			}, {
				"name": "append",
				"description": "logical.  If <code>TRUE</code>, the output is appended to the\n    file.  If <code>FALSE</code>, any existing file of the name is destroyed."
			}, {
				"name": "indent",
				"description": "a positive integer specifying the indentation for\n    continuation lines in output entries."
			}, {
				"name": "width",
				"description": "a positive integer giving the target column for wrapping\n    lines in the output."
			}]
		}, {
			"name": ".Device",
			"args": []
		}, {
			"name": "eapply",
			"args": [{
				"name": "env",
				"description": "environment to be used."
			}, {
				"name": "FUN",
				"description": "the function to be applied, found <em>via</em>\n    <code><a rd-options=\"\" href=\"/link/match.fun?package=base&amp;version=3.3.2\">match.fun</a></code>.\n    In the case of functions like <code>+</code>, <code>%*%</code>, etc., the\n    function name must be backquoted or quoted."
			}, {
				"name": "...",
				"description": "optional arguments to <code>FUN</code>."
			}, {
				"name": "all.names",
				"description": "a logical indicating whether to apply the function to\n    all values."
			}, {
				"name": "USE.NAMES",
				"description": "logical indicating whether the resulting list should\n    have <code><a rd-options=\"\" href=\"/link/names?package=base&amp;version=3.3.2\">names</a></code>."
			}]
		}, {
			"name": "dyn.load",
			"args": [{
				"name": "x",
				"description": "a character string giving the pathname to a DLL, also known\n    as a dynamic shared object.  (See &#x2018;Details&#x2019; for what these\n    terms mean.)"
			}, {
				"name": "local",
				"description": "a logical value controlling whether the symbols in the\n    DLL are stored in their own local table and not shared\n    across DLLs, or added to the global symbol table.  Whether this has\n    any effect is system-dependent.\n windows\n    It is ignored on Windows."
			}, {
				"name": "now",
				"description": "a logical controlling whether all symbols are resolved (and\n    relocated) immediately the library is loaded or deferred until they\n    are used.  This control is useful for developers testing whether a\n    library is complete and has all the necessary symbols, and for users\n    to ignore missing symbols.  Whether this has any effect is system-dependent.\n windows\n    It is ignored on Windows."
			}, {
				"name": "...",
				"description": "other arguments for future expansion.\n windows\n    See section &#x2018;Windows&#x2019; below."
			}, {
				"name": "symbol",
				"description": "a character string giving a symbol name."
			}, {
				"name": "PACKAGE",
				"description": "if supplied, confine the search for the <code>name</code> to\n    the DLL given by this argument (plus the conventional extension,\n    &#x2018;<span class=\"file\">.so</span>&#x2019;, &#x2018;<span class=\"file\">.sl</span>&#x2019;, &#x2018;<span class=\"file\">.dll</span>&#x2019;, ...).  This is intended to\n    add safety for packages, which can ensure by using this argument\n    that no other package can override their external symbols.  This is\n    used in the same way as in <code><a rd-options=\"\" href=\"/link/.C?package=base&amp;version=3.3.2\">.C</a></code>, <code><a rd-options=\"\" href=\"/link/.Call?package=base&amp;version=3.3.2\">.Call</a></code>,\n    <code><a rd-options=\"\" href=\"/link/.Fortran?package=base&amp;version=3.3.2\">.Fortran</a></code> and <code><a rd-options=\"\" href=\"/link/.External?package=base&amp;version=3.3.2\">.External</a></code> functions."
			}, {
				"name": "type",
				"description": "The type of symbol to look for: can be any (<code>&quot;&quot;</code>, the\n    default), <code>&quot;Fortran&quot;</code>, <code>&quot;Call&quot;</code> or <code>&quot;External&quot;</code>."
			}]
		}, {
			"name": "diag",
			"args": [{
				"name": "x",
				"description": "a matrix, vector or 1D array, or missing."
			}, {
				"name": "nrow, ncol",
				"description": "Optional dimensions for the result when <code>x</code> is\n    not a matrix."
			}, {
				"name": "value",
				"description": "either a single value or a vector of length equal to that\n    of the current diagonal.  Should be of a mode which can be coerced\n    to that of <code>x</code>."
			}]
		}, {
			"name": "format.pval",
			"args": [{
				"name": "pv",
				"description": "a numeric vector."
			}, {
				"name": "digits",
				"description": "how many significant digits are to be used."
			}, {
				"name": "eps",
				"description": "a numerical tolerance: see &#x2018;Details&#x2019;."
			}, {
				"name": "na.form",
				"description": "character representation of <code>NA</code>s."
			}, {
				"name": "...",
				"description": "further arguments to be passed to <code><a rd-options=\"\" href=\"/link/format?package=base&amp;version=3.3.2\">format</a></code>\n    such as <code>nsmall</code>."
			}]
		}, {
			"name": "format",
			"args": [{
				"name": "x",
				"description": "any <span style=\"R\">R</span> object (conceptually); typically numeric."
			}, {
				"name": "trim",
				"description": "logical; if <code>FALSE</code>, logical, numeric and complex\n    values are right-justified to a common width: if <code>TRUE</code> the\n    leading blanks for justification are suppressed."
			}, {
				"name": "digits",
				"description": "how many significant digits are to be used for\n    numeric and complex <code>x</code>.  The default, <code>NULL</code>, uses\n    <code><a rd-options=\"\" href=\"/link/getOption?package=base&amp;version=3.3.2\">getOption</a>(&quot;digits&quot;)</code>.  This is a suggestion: enough decimal\n    places will be used so that the smallest (in magnitude) number has\n    this many significant digits, and also to satisfy <code>nsmall</code>.\n    (For the interpretation for complex numbers see <code><a rd-options=\"\" href=\"/link/signif?package=base&amp;version=3.3.2\">signif</a></code>.)"
			}, {
				"name": "nsmall",
				"description": "the minimum number of digits to the right of the decimal\n    point in formatting real/complex numbers in non-scientific formats.\n    Allowed values are <code>0 <= nsmall=\"\" <=\"20&lt;/code\">.</=></code>"
			}, {
				"name": "justify",
				"description": "should a <em>character</em> vector be left-justified (the\n    default), right-justified, centred or left alone.  Can be abbreviated."
			}, {
				"name": "width",
				"description": "<code>default</code> method: the <em>minimum</em> field width or\n    <code>NULL</code> or <code>0</code> for no restriction.\n\n    <code>AsIs</code> method: the <em>maximum</em> field width for non-character\n    objects.  <code>NULL</code> corresponds to the default <code>12</code>."
			}, {
				"name": "na.encode",
				"description": "logical: should <code>NA</code> strings be encoded?  Note\n    this only applies to elements of character vectors, not to numerical,\n    complex nor logical <code>NA</code>s, which are always encoded as <code>&quot;NA&quot;</code>."
			}, {
				"name": "scientific",
				"description": "Either a logical specifying whether\n    elements of a real or complex vector should be encoded in scientific\n    format, or an integer penalty (see <code><a rd-options=\"\" href=\"/link/options?package=base&amp;version=3.3.2\">options</a>(&quot;scipen&quot;)</code>).\n    Missing values correspond to the current default penalty."
			}, {
				"name": "...",
				"description": "further arguments passed to or from other methods."
			}, {
				"name": "big.mark, big.interval, small.mark,\n    small.interval, decimal.mark, zero.print, drop0trailing",
				"description": "used for prettying (longish) numerical and complex sequences.\n    Passed to <code><a rd-options=\"\" href=\"/link/prettyNum?package=base&amp;version=3.3.2\">prettyNum</a></code>: that help page explains the details."
			}]
		}, {
			"name": "eigen",
			"args": [{
				"name": "x",
				"description": "a numeric or complex matrix whose spectral decomposition is to\n    be computed.  Logical matrices are coerced to numeric."
			}, {
				"name": "symmetric",
				"description": "if <code>TRUE</code>, the matrix is assumed to be symmetric\n    (or Hermitian if complex) and only its lower triangle (diagonal\n    included) is used.  If <code>symmetric</code> is not specified, the matrix\n    is inspected for symmetry."
			}, {
				"name": "only.values",
				"description": "if <code>TRUE</code>, only the eigenvalues are computed\n    and returned, otherwise both eigenvalues and eigenvectors are\n    returned."
			}, {
				"name": "EISPACK",
				"description": "logical. Defunct and ignored."
			}]
		}, {
			"name": "encodeString",
			"args": [{
				"name": "x",
				"description": "A character vector, or an object that can be coerced to one\n    by <code><a rd-options=\"\" href=\"/link/as.character?package=base&amp;version=3.3.2\">as.character</a></code>."
			}, {
				"name": "width",
				"description": "integer: the minimum field width.  If <code>NULL</code> or\n    <code>NA</code>, this is taken to be the largest field width needed for\n    any element of <code>x</code>."
			}, {
				"name": "quote",
				"description": "character: quoting character, if any."
			}, {
				"name": "na.encode",
				"description": "logical: should <code>NA</code> strings be encoded?"
			}, {
				"name": "justify",
				"description": "character: partial matches are allowed.  If padding to\n    the minimum field width is needed, how should spaces be inserted?\n    <code>justify == &quot;none&quot;</code> is equivalent to <code>width = 0</code>, for\n    consistency with <code>format.default</code>."
			}]
		}, {
			"name": "Encoding",
			"args": [{
				"name": "x",
				"description": "A character vector."
			}, {
				"name": "value",
				"description": "A character vector of positive length."
			}]
		}, {
			"name": "file.choose",
			"args": [{
				"name": "new",
				"description": "Logical: choose the style of dialog box\n     presented to the user: at present only new = FALSE is used."
			}]
		}, {
			"name": "environment",
			"args": [{
				"name": "fun",
				"description": "a <code><a rd-options=\"\" href=\"/link/function?package=base&amp;version=3.3.2\">function</a></code>, a <code><a rd-options=\"\" href=\"/link/formula?package=base&amp;version=3.3.2\">formula</a></code>, or\n    <code>NULL</code>, which is the default."
			}, {
				"name": "value",
				"description": "an environment to associate with the function"
			}, {
				"name": "x",
				"description": "an arbitrary <span style=\"R\">R</span> object."
			}, {
				"name": "hash",
				"description": "a logical, if <code>TRUE</code> the environment will use a hash table."
			}, {
				"name": "parent",
				"description": "an environment to be used as the enclosure of the\n    environment created."
			}, {
				"name": "env",
				"description": "an environment"
			}, {
				"name": "size",
				"description": "an integer specifying the initial size for a hashed\n    environment.  An internal default value will be used if\n    <code>size</code> is <code>NA</code> or zero.  This argument is ignored if\n    <code>hash</code> is <code>FALSE</code>."
			}]
		}, {
			"name": "Control",
			"args": [{
				"name": "cond",
				"description": "A length-one logical vector that is not <code>NA</code>.\n    Conditions of length greater than one are accepted with a warning, but\n    only the first element is used.  Other types are coerced to logical\n    if possible, ignoring any class."
			}, {
				"name": "var",
				"description": "A syntactical name for a variable."
			}, {
				"name": "seq",
				"description": "An expression evaluating to a vector (including a list and\n    an <a rd-options=\"\" href=\"/link/expression?package=base&amp;version=3.3.2\">expression</a>) or to a <a rd-options=\"\" href=\"/link/pairlist?package=base&amp;version=3.3.2\">pairlist</a> or <code>NULL</code>.  A\n    factor value will be coerced to a character vector."
			}, {
				"name": "expr, cons.expr, alt.expr",
				"description": "An <em>expression</em> in a formal sense.  This is either a\n    simple expression or a so called <em>compound expression</em>, usually\n    of the form <code>{ expr1 ; expr2 }</code>."
			}]
		}, {
			"name": "file.info",
			"args": [{
				"name": "...",
				"description": "character vectors containing file paths.  Tilde-expansion\n    is done: see <code><a rd-options=\"\" href=\"/link/path.expand?package=base&amp;version=3.3.2\">path.expand</a></code>."
			}, {
				"name": "extra_cols",
				"description": "Logical: return all cols rather than just the\n    first six."
			}]
		}, {
			"name": "copyright",
			"args": []
		}, {
			"name": "Cstack_info",
			"args": []
		}, {
			"name": "crossprod",
			"args": [{
				"name": "x, y",
				"description": "numeric or complex matrices (or vectors): <code>y = NULL</code>\n    is taken to be the same matrix as <code>x</code>.  Vectors are promoted to\n    single-column or single-row matrices, depending on the context."
			}]
		}, {
			"name": "deparseOpts",
			"args": [{
				"name": "control",
				"description": "character vector of deparsing options."
			}]
		}, {
			"name": "Deprecated",
			"args": [{
				"name": "new",
				"description": "character string: A suggestion for a replacement function."
			}, {
				"name": "package",
				"description": "character string: The package to be used when suggesting where the\n    deprecated function might be listed."
			}, {
				"name": "msg",
				"description": "character string: A message to be printed, if missing a default\n    message is used."
			}, {
				"name": "old",
				"description": "character string specifying the function (default) or usage\n    which is being deprecated."
			}]
		}, {
			"name": "dump",
			"args": [{
				"name": "list",
				"description": "character vector.  The names of one or more <span style=\"R\">R</span> objects to be dumped."
			}, {
				"name": "file",
				"description": "either a character string naming a file or a\n    <a rd-options=\"\" href=\"/link/connection?package=base&amp;version=3.3.2\">connection</a>.  <code>&quot;&quot;</code> indicates output to the console."
			}, {
				"name": "append",
				"description": "if <code>TRUE</code> and <code>file</code> is a character string,\n    output will be appended to <code>file</code>; otherwise, it will overwrite\n    the contents of <code>file</code>."
			}, {
				"name": "control",
				"description": "character vector indicating deparsing options.\n    See <code><a rd-options=\"\" href=\"/link/.deparseOpts?package=base&amp;version=3.3.2\">.deparseOpts</a></code> for their description."
			}, {
				"name": "envir",
				"description": "the environment to search for objects."
			}, {
				"name": "evaluate",
				"description": "logical.  Should promises be evaluated?"
			}]
		}, {
			"name": "duplicated",
			"args": [{
				"name": "x",
				"description": "a vector or a data frame or an array or <code>NULL</code>."
			}, {
				"name": "incomparables",
				"description": "a vector of values that cannot be compared.\n    <code>FALSE</code> is a special value, meaning that all values can be\n    compared, and may be the only value accepted for methods other than\n    the default.  It will be coerced internally to the same type as\n       <code>x</code>."
			}, {
				"name": "fromLast",
				"description": "logical indicating if duplication should be considered\n    from the reverse side, i.e., the last (or rightmost) of identical\n    elements would correspond to <code>duplicated = FALSE</code>."
			}, {
				"name": "nmax",
				"description": "the maximum number of unique items expected (greater than one)."
			}, {
				"name": "...",
				"description": "arguments for particular methods."
			}, {
				"name": "MARGIN",
				"description": "the array margin to be held fixed: see\n    <code><a rd-options=\"\" href=\"/link/apply?package=base&amp;version=3.3.2\">apply</a></code>, and note that <code>MARGIN = 0</code> maybe useful."
			}]
		}, {
			"name": "exists",
			"args": [{
				"name": "x",
				"description": "a variable name (given as a character string)."
			}, {
				"name": "where",
				"description": "where to look for the object (see the details section); if\n    omitted, the function will search as if the name of the object\n    appeared unquoted in an expression."
			}, {
				"name": "envir",
				"description": "an alternative way to specify an environment to look in,\n    but it is usually simpler to just use the <code>where</code> argument."
			}, {
				"name": "frame",
				"description": "a frame in the calling list.  Equivalent to giving\n    <code>where</code> as <code>sys.frame(frame)</code>."
			}, {
				"name": "mode",
				"description": "the mode or type of object sought: see the\n    &#x2018;Details&#x2019; section."
			}, {
				"name": "inherits",
				"description": "should the enclosing frames of the environment be\n    searched?"
			}, {
				"name": "ifnotfound",
				"description": "the return value of <code>get0(x, *)</code> when\n    <code>x</code> does not exist."
			}]
		}, {
			"name": "getwd",
			"args": [{
				"name": "dir",
				"description": "A character string: <a rd-options=\"\" href=\"/link/tilde%20expansion?package=base&amp;version=3.3.2\">tilde expansion</a> will be done."
			}]
		}, {
			"name": "gettext",
			"args": [{
				"name": "...",
				"description": "One or more character vectors."
			}, {
				"name": "domain",
				"description": "The &#x2018;domain&#x2019; for the translation."
			}, {
				"name": "n",
				"description": "a non-negative integer."
			}, {
				"name": "msg1",
				"description": "the message to be used in English for <code>n = 1</code>."
			}, {
				"name": "msg2",
				"description": "the message to be used in English for <code>n = 0, 2, 3, ...</code>."
			}, {
				"name": "dirname",
				"description": "The directory in which to find translated message\n    catalogs for the domain."
			}]
		}, {
			"name": "expand.grid",
			"args": [{
				"name": "...",
				"description": "vectors, factors or a list containing these."
			}, {
				"name": "KEEP.OUT.ATTRS",
				"description": "a logical indicating the <code>&quot;out.attrs&quot;</code>\n    attribute (see below) should be computed and returned."
			}, {
				"name": "stringsAsFactors",
				"description": "logical specifying if character vectors are\n    converted to factors."
			}]
		}, {
			"name": "iconv",
			"args": [{
				"name": "x",
				"description": "A character vector, or an object to be converted to a character\n    vector by <code><a rd-options=\"\" href=\"/link/as.character?package=base&amp;version=3.3.2\">as.character</a></code>, or a list with <code>NULL</code> and\n    <code>raw</code> elements as returned by <code>iconv(toRaw = TRUE)</code>."
			}, {
				"name": "from",
				"description": "A character string describing the current encoding."
			}, {
				"name": "to",
				"description": "A character string describing the target encoding."
			}, {
				"name": "sub",
				"description": "character string.  If not <code>NA</code> it is used to replace\n    any non-convertible bytes in the input.  (This would normally be a\n    single character, but can be more.)  If <code>&quot;byte&quot;</code>, the indication is\n    <code>&quot;<xx>&quot;</xx></code> with the hex code of the byte."
			}, {
				"name": "mark",
				"description": "logical, for expert use.  Should encodings be marked?"
			}, {
				"name": "toRaw",
				"description": "logical.  Should a list of raw vectors be returned rather\n    than a character vector?"
			}]
		}, {
			"name": "Internal",
			"args": [{
				"name": "call",
				"description": "a call expression"
			}]
		}, {
			"name": "icuSetCollate",
			"args": [{
				"name": "...",
				"description": "Named arguments, see &#x2018;Details&#x2019;."
			}, {
				"name": "type",
				"description": "character string: can be abbreviated.  Either the actual locale\n    in use for collation or the most specific locale which would be valid."
			}]
		}, {
			"name": "InternalMethods",
			"args": []
		}, {
			"name": "ISOdatetime",
			"args": [{
				"name": "year, month, day",
				"description": "numerical values to specify a day."
			}, {
				"name": "hour, min, sec",
				"description": "numerical values for a time within a day.\n    Fractional seconds are allowed."
			}, {
				"name": "tz",
				"description": "A <a rd-options=\"\" href=\"/link/time%20zone?package=base&amp;version=3.3.2\">time zone</a> specification to be used for the conversion.\n    <code>&quot;&quot;</code> is the current time zone and <code>&quot;GMT&quot;</code> is UTC.  Invalid\n    values are most commonly treated as UTC, on some platforms with a warning."
			}]
		}, {
			"name": "libcurlVersion",
			"args": []
		}, {
			"name": "libPaths",
			"args": [{
				"name": "new",
				"description": "a character vector with the locations of <span style=\"R\">R</span> library\n    trees.  Tilde expansion (<code><a rd-options=\"\" href=\"/link/path.expand?package=base&amp;version=3.3.2\">path.expand</a></code>) is done, and if\n    any element contains one of <code>*?[</code>, globbing is done where\n    supported by the platform: see <code><a rd-options=\"\" href=\"/link/Sys.glob?package=base&amp;version=3.3.2\">Sys.glob</a></code>."
			}]
		}, {
			"name": "is.R",
			"args": []
		}, {
			"name": "Extract.data.frame",
			"args": [{
				"name": "x",
				"description": "data frame."
			}, {
				"name": "i, j, ...",
				"description": "elements to extract or replace.  For <code>[</code> and\n    <code>[[</code>, these are <code>numeric</code> or <code>character</code> or, for\n    <code>[</code> only, empty.  Numeric values are coerced to integer as if\n    by <code><a rd-options=\"\" href=\"/link/as.integer?package=base&amp;version=3.3.2\">as.integer</a></code>.  For replacement by <code>[</code>, a logical\n    matrix is allowed."
			}, {
				"name": "name",
				"description": "A literal character string or a <a rd-options=\"\" href=\"/link/name?package=base&amp;version=3.3.2\">name</a> (possibly <a rd-options=\"\" href=\"/link/backtick?package=base&amp;version=3.3.2\">backtick</a>\n    quoted)."
			}, {
				"name": "drop",
				"description": "logical.  If <code>TRUE</code> the result is coerced to the\n    lowest possible dimension.  The default is to drop if only one\n    column is left, but <b>not</b> to drop if only one row is left."
			}, {
				"name": "value",
				"description": "A suitable replacement value: it will be repeated a whole\n    number of times if necessary and it may be coerced: see the\n    Coercion section.  If <code>NULL</code>, deletes the column if a single\n    column is selected."
			}, {
				"name": "exact",
				"description": "logical: see <code><a rd-options=\"\" href=\"/link/%5B?package=base&amp;version=3.3.2\">[</a></code>, and applies to column names."
			}]
		}, {
			"name": "expression",
			"args": [{
				"name": "...",
				"description": "<code>expression</code>: <span style=\"R\">R</span> objects, typically calls, symbols\n    or constants.\n    <code>as.expression</code>: arguments to be passed to methods."
			}, {
				"name": "x",
				"description": "an arbitrary <span style=\"R\">R</span> object."
			}]
		}, {
			"name": "force",
			"args": [{
				"name": "x",
				"description": "a formal argument of the enclosing function."
			}]
		}, {
			"name": "files2",
			"args": [{
				"name": "path",
				"description": "a character vector containing a single path name.  Tilde\n    expansion (see <code><a rd-options=\"\" href=\"/link/path.expand?package=base&amp;version=3.3.2\">path.expand</a></code>) is done."
			}, {
				"name": "paths",
				"description": "character vectors containing file or directory paths.  Tilde\n    expansion (see <code><a rd-options=\"\" href=\"/link/path.expand?package=base&amp;version=3.3.2\">path.expand</a></code>) is done."
			}, {
				"name": "showWarnings",
				"description": "logical; should the warnings on failure be shown?"
			}, {
				"name": "recursive",
				"description": "logical. Should elements of the path other than the\n    last be created?  If true, like the Unix command <code>mkdir -p</code>."
			}, {
				"name": "mode",
				"description": "the mode to be used on Unix-alikes: it will be\n    coerced by <code><a rd-options=\"\" href=\"/link/as.octmode?package=base&amp;version=3.3.2\">as.octmode</a></code>.  For <code>Sys.chmod</code> it is\n    recycled along <code>paths</code>."
			}, {
				"name": "use_umask",
				"description": "logical: should the mode be restricted by the\n    <code>umask</code> setting?"
			}]
		}, {
			"name": "files",
			"args": [{
				"name": "..., file1, file2",
				"description": "character vectors, containing file names or paths."
			}, {
				"name": "from, to",
				"description": "character vectors, containing file names or paths.\n    For <code>file.copy</code> and <code>file.symlink</code>\n windows\n    and <code>Sys.junction</code>\n    <code>to</code> can alternatively be the path to a single existing directory."
			}, {
				"name": "overwrite",
				"description": "logical; should existing destination files be overwritten?"
			}, {
				"name": "showWarnings",
				"description": "logical; should the warnings on failure be shown?"
			}, {
				"name": "recursive",
				"description": "logical.  If <code>to</code> is a directory, should\n    directories in <code>from</code> be copied (and their contents)?  (Like\n    <code>cp -R</code> on POSIX OSes.)"
			}, {
				"name": "copy.mode",
				"description": "logical:  should file permission bits be copied where\n    possible?"
			}, {
				"name": "copy.date",
				"description": "logical:  should file dates be preserved where\n    possible? See <code><a rd-options=\"\" href=\"/link/Sys.setFileTime?package=base&amp;version=3.3.2\">Sys.setFileTime</a></code>."
			}]
		}, {
			"name": "forceAndCall",
			"args": [{
				"name": "n",
				"description": "number of leading arguments to force."
			}, {
				"name": "FUN",
				"description": "function to call."
			}, {
				"name": "...",
				"description": "arguments to <code>FUN</code>."
			}]
		}, {
			"name": "formatC",
			"args": [{
				"name": "x",
				"description": "an atomic numerical or character object, possibly\n    <code><a rd-options=\"\" href=\"/link/complex?package=base&amp;version=3.3.2\">complex</a></code> only for <code>prettyNum()</code>, typically a\n    vector of real numbers.  Any class is discarded, with a warning."
			}, {
				"name": "digits",
				"description": "the desired number of digits after the decimal\n    point (<code>format = &quot;f&quot;</code>) or <em>significant</em> digits\n    (<code>format = &quot;g&quot;</code>, <code>= &quot;e&quot;</code> or <code>= &quot;fg&quot;</code>).\n\n    Default: 2 for integer, 4 for real numbers.  If less than 0,\n    the C default of 6 digits is used.  If specified as more than 50, 50\n    will be used with a warning unless <code>format = &quot;f&quot;</code> where it is\n    limited to typically 324. (Not more than 15--21 digits need be\n    accurate, depending on the OS and compiler used.  This limit is\n    just a precaution against segfaults in the underlying C runtime.)"
			}, {
				"name": "width",
				"description": "the total field width; if both <code>digits</code> and\n    <code>width</code> are unspecified, <code>width</code> defaults to 1,\n    otherwise to <code>digits + 1</code>.  <code>width = 0</code> will use\n    <code>width = digits</code>, <code>width &lt; 0</code> means left\n    justify the number in this field (equivalent to <code>flag = &quot;-&quot;</code>).\n    If necessary, the result will have more characters than\n    <code>width</code>.  For character data this is interpreted in characters\n    (not bytes nor display width)."
			}, {
				"name": "format",
				"description": "equal to <code>&quot;d&quot;</code>  (for integers), <code>&quot;f&quot;</code>,\n    <code>&quot;e&quot;</code>, <code>&quot;E&quot;</code>, <code>&quot;g&quot;</code>, <code>&quot;G&quot;</code>, <code>&quot;fg&quot;</code> (for\n    reals), or <code>&quot;s&quot;</code> (for strings).  Default is <code>&quot;d&quot;</code> for\n    integers, <code>&quot;g&quot;</code> for reals.\n\n    <code>&quot;f&quot;</code> gives numbers in the usual\n    <code>xxx.xxx</code> format;  <code>&quot;e&quot;</code> and <code>&quot;E&quot;</code> give <code>n.ddde+nn</code> or\n    <code>n.dddE+nn</code> (scientific format); <code>&quot;g&quot;</code> and <code>&quot;G&quot;</code> put\n    <code>x[i]</code> into scientific format only if it saves space to do so.\n\n    <code>&quot;fg&quot;</code> uses fixed format as <code>&quot;f&quot;</code>, but <code>digits</code> as\n    the minimum number of <em>significant</em> digits.  This can lead\n    to quite long result strings, see examples below.  Note that unlike\n    <code><a rd-options=\"\" href=\"/link/signif?package=base&amp;version=3.3.2\">signif</a></code> this prints large numbers with\n    more significant digits than <code>digits</code>.  Trailing zeros are\n    <em>dropped</em> in this format, unless <code>flag</code> contains\n    <code>&quot;#&quot;</code>."
			}, {
				"name": "flag",
				"description": "For <code>formatC</code>, a character string giving a\n    format modifier as in Kernighan and Ritchie (1988, page 243).\n    <code>&quot;0&quot;</code>  pads leading zeros; <code>&quot;-&quot;</code> does left adjustment,\n    others are <code>&quot;+&quot;</code>, <code>&quot; &quot;</code>, and <code>&quot;#&quot;</code>.  There can be\n    more than one of these, in any order."
			}, {
				"name": "mode",
				"description": "<code>&quot;double&quot;</code> (or <code>&quot;real&quot;</code>), <code>&quot;integer&quot;</code> or\n    <code>&quot;character&quot;</code>.\n    Default: Determined from the storage mode of <code>x</code>."
			}, {
				"name": "big.mark",
				"description": "character; if not empty used as mark between every\n    <code>big.interval</code> decimals <em>before</em> (hence <code>big</code>) the\n    decimal point."
			}, {
				"name": "big.interval",
				"description": "see <code>big.mark</code> above; defaults to 3."
			}, {
				"name": "small.mark",
				"description": "character; if not empty used as mark between every\n    <code>small.interval</code> decimals <em>after</em> (hence <code>small</code>) the\n    decimal point."
			}, {
				"name": "small.interval",
				"description": "see <code>small.mark</code> above; defaults to 5."
			}, {
				"name": "decimal.mark",
				"description": "the character to be used to indicate the numeric\n    decimal point."
			}, {
				"name": "input.d.mark",
				"description": "if <code>x</code> is <code><a rd-options=\"\" href=\"/link/character?package=base&amp;version=3.3.2\">character</a></code>, the\n    character known to have been used as the numeric decimal point in\n    <code>x</code>."
			}, {
				"name": "preserve.width",
				"description": "string specifying if the string widths should\n    be preserved where possible in those cases where marks\n    (<code>big.mark</code> or <code>small.mark</code>) are added.  <code>&quot;common&quot;</code>,\n    the default, corresponds to <code><a rd-options=\"\" href=\"/link/format?package=base&amp;version=3.3.2\">format</a></code>-like behavior\n    whereas <code>&quot;individual&quot;</code> is the default in\n    <code>formatC()</code>. Value can be abbreviated."
			}, {
				"name": "zero.print",
				"description": "logical, character string or <code>NULL</code> specifying\n    if and how <em>zeros</em> should be formatted specially.  Useful for\n    pretty printing &#x2018;sparse&#x2019; objects."
			}, {
				"name": "drop0trailing",
				"description": "logical, indicating if trailing zeros,\n    i.e., <code>&quot;0&quot;</code> <em>after</em> the decimal mark, should be removed;\n    also drops <code>&quot;e+00&quot;</code> in exponential formats."
			}, {
				"name": "is.cmplx",
				"description": "optional logical, to be used when <code>x</code> is\n    <code>&quot;<a rd-options=\"\" href=\"/link/character?package=base&amp;version=3.3.2\">character</a>&quot;</code> to indicate if it stems from\n    <code><a rd-options=\"\" href=\"/link/complex?package=base&amp;version=3.3.2\">complex</a></code> vector or not.  By default (<code>NA</code>),\n    <code>x</code> is checked to &#x2018;look like&#x2019; complex."
			}, {
				"name": "...",
				"description": "arguments passed to <code>format</code>."
			}, {
				"name": "nx",
				"description": "numeric vector of the same length as <code>x</code>, typically the\n    numbers of which the character vector <code>x</code> is the pre-format."
			}]
		}, {
			"name": "grepRaw",
			"args": [{
				"name": "pattern",
				"description": "raw vector containing a <a rd-options=\"\" href=\"/link/regular%20expression?package=base&amp;version=3.3.2\">regular expression</a>\n    (or fixed pattern for <code>fixed = TRUE</code>) to be matched in the\n    given raw vector.  Coerced by <code><a rd-options=\"\" href=\"/link/charToRaw?package=base&amp;version=3.3.2\">charToRaw</a></code> to a character\n    string if possible."
			}, {
				"name": "x",
				"description": "a raw vector where matches are sought, or an object which can\n    be coerced by <code>charToRaw</code> to a raw vector.  <a rd-options=\"\" href=\"/link/Long%20vectors?package=base&amp;version=3.3.2\">Long vectors</a>\n    are not supported."
			}, {
				"name": "ignore.case",
				"description": "if <code>FALSE</code>, the pattern matching is <em>case\n      sensitive</em> and if <code>TRUE</code>, case is ignored during matching."
			}, {
				"name": "offset",
				"description": "An integer specifying the offset from\n    which the search should start.  Must be positive.  The beginning of\n    line is defined to be at that offset so <code>&quot;^&quot;</code> will match there."
			}, {
				"name": "value",
				"description": "logical.  Determines the return value: see &#x2018;Value&#x2019;."
			}, {
				"name": "fixed",
				"description": "logical.  If <code>TRUE</code>, <code>pattern</code> is a pattern to be\n    matched as is."
			}, {
				"name": "all",
				"description": "logical.  If <code>TRUE</code> all matches are returned,\n    otherwise just the first one."
			}, {
				"name": "invert",
				"description": "logical.  If <code>TRUE</code> return indices or values for\n    elements that do <em>not</em> match.  Ignored (with a warning) unless\n    <code>value = TRUE</code>."
			}]
		}, {}, {
			"name": "formatDL",
			"args": [{
				"name": "x",
				"description": "a vector giving the items to be described, or a list of\n    length 2 or a matrix with 2 columns giving both items and\n    descriptions."
			}, {
				"name": "y",
				"description": "a vector of the same length as <code>x</code> with the\n    corresponding descriptions.  Only used if <code>x</code> does not already\n    give the descriptions."
			}, {
				"name": "style",
				"description": "a character string specifying the rendering style of the\n    description information.  Can be abbreviated.\n    If <code>&quot;table&quot;</code>, a two-column table with\n    items and descriptions as columns is produced (similar to Texinfo&apos;s\n    <code>@table</code> environment).  If <code>&quot;list&quot;</code>, a LaTeX-style tagged\n    description list is obtained."
			}, {
				"name": "width",
				"description": "a positive integer giving the target column for wrapping\n    lines in the output."
			}, {
				"name": "indent",
				"description": "a positive integer specifying the indentation of the\n    second column in table style, and the indentation of continuation\n    lines in list style.  Must not be greater than <code>width/2</code>, and\n    defaults to <code>width/3</code> for table style and <code>width/9</code> for\n    list style."
			}]
		}, {
			"name": "identity",
			"args": [{
				"name": "x",
				"description": "an <span style=\"R\">R</span> object."
			}]
		}, {
			"name": "identical",
			"args": [{
				"name": "x, y",
				"description": "any <span style=\"R\">R</span> objects."
			}, {
				"name": "num.eq",
				"description": "logical indicating if (<code><a rd-options=\"\" href=\"/link/double?package=base&amp;version=3.3.2\">double</a></code> and\n    <code><a rd-options=\"\" href=\"/link/complex?package=base&amp;version=3.3.2\">complex</a></code> non-<code><a rd-options=\"\" href=\"/link/NA?package=base&amp;version=3.3.2\">NA</a></code>) numbers should be\n    compared using <code><a rd-options=\"\" href=\"/link/%3D%3D?package=base&amp;version=3.3.2\">==</a></code> (&#x2018;equal&#x2019;), or by bitwise\n    comparison.  The latter (non-default) differentiates between\n    <code>-0</code> and <code>+0</code>."
			}, {
				"name": "single.NA",
				"description": "logical indicating if there is conceptually just one numeric\n    <code><a rd-options=\"\" href=\"/link/NA?package=base&amp;version=3.3.2\">NA</a></code> and one <code><a rd-options=\"\" href=\"/link/NaN?package=base&amp;version=3.3.2\">NaN</a></code>;  <code>single.NA = FALSE</code>\n    differentiates bit patterns."
			}, {
				"name": "attrib.as.set",
				"description": "logical indicating if <code><a rd-options=\"\" href=\"/link/attributes?package=base&amp;version=3.3.2\">attributes</a></code> of\n    <code>x</code> and <code>y</code> should be treated as <em>unordered</em> tagged\n    pairlists (&#x201C;sets&#x201D;); this currently also applies to\n    <code><a rd-options=\"\" href=\"/link/slot?package=base&amp;version=3.3.2\">slot</a></code>s of S4 objects.  It may well be too strict to set\n    <code>attrib.as.set = FALSE</code>."
			}, {
				"name": "ignore.bytecode",
				"description": "logical indicating if byte code should be\n    ignored when comparing <a rd-options=\"\" href=\"/link/closure?package=base&amp;version=3.3.2\">closure</a>s."
			}, {
				"name": "ignore.environment",
				"description": "logical indicating if their environments\n    should be ignored when comparing <a rd-options=\"\" href=\"/link/closure?package=base&amp;version=3.3.2\">closure</a>s."
			}]
		}, {
			"name": "is.finite",
			"args": [{
				"name": "x",
				"description": "<span style=\"R\">R</span> object to be tested: the default methods handle atomic\n    vectors."
			}]
		}, {
			"name": "invisible",
			"args": [{
				"name": "x",
				"description": "an arbitrary <span style=\"R\">R</span> object."
			}]
		}, {
			"name": "log",
			"args": [{
				"name": "x",
				"description": "a numeric or complex vector."
			}, {
				"name": "base",
				"description": "a positive or complex number: the base with respect to which\n    logarithms are computed.  Defaults to $e$=<code>exp(1)</code>."
			}]
		}, {
			"name": "Logic",
			"args": [{
				"name": "x, y",
				"description": "raw or logical or &#x2018;number-like&#x2019; vectors (i.e., of types\n    <code><a rd-options=\"\" href=\"/link/double?package=base&amp;version=3.3.2\">double</a></code> (class <code><a rd-options=\"\" href=\"/link/numeric?package=base&amp;version=3.3.2\">numeric</a></code>), <code><a rd-options=\"\" href=\"/link/integer?package=base&amp;version=3.3.2\">integer</a></code>\n    and <code><a rd-options=\"\" href=\"/link/complex?package=base&amp;version=3.3.2\">complex</a></code>)), or objects for\n    which methods have been written."
			}]
		}, {
			"name": "missing",
			"args": [{
				"name": "x",
				"description": "a formal argument."
			}]
		}, {
			"name": "gctorture",
			"args": [{
				"name": "on",
				"description": "logical; turning it on/off."
			}, {
				"name": "step",
				"description": "integer; run GC every <code>step</code> allocations; <code>step\n      = 0</code> turns the GC torture off."
			}, {
				"name": "wait",
				"description": "integer; number of allocations to wait before starting\n    GC torture."
			}, {
				"name": "inhibit_release",
				"description": "logical; do not release free objects for\n    re-use: use with caution."
			}]
		}, {
			"name": "noquote",
			"args": [{
				"name": "obj",
				"description": "any <span style=\"R\">R</span> object, typically a vector of\n    <code><a rd-options=\"\" href=\"/link/character?package=base&amp;version=3.3.2\">character</a></code> strings."
			}, {
				"name": "x",
				"description": "an object of class <code>&quot;noquote&quot;</code>."
			}, {
				"name": "...",
				"description": "further options passed to next methods, such as <code><a rd-options=\"\" href=\"/link/print?package=base&amp;version=3.3.2\">print</a></code>."
			}, {
				"name": "recursive",
				"description": "for compatibility with the generic <code><a rd-options=\"\" href=\"/link/c?package=base&amp;version=3.3.2\">c</a></code> function."
			}]
		}, {
			"name": "norm",
			"args": [{
				"name": "x",
				"description": "numeric matrix; note that packages such as \\href{https://CRAN.R-project.org/package=#1}{\\pkg{#1}}Matrix<a href=\"https://CRAN.R-project.org/package=Matrix\"><span class=\"pkg\">Matrix</span></a>\n    define more <code>norm()</code> methods."
			}, {
				"name": "type",
				"description": "character string, specifying the <em>type</em> of matrix\n    norm to be computed.\n    A character indicating the type of norm desired.\n    <dl>\n            \n            \n            \n            \n            \n    </dl>\n\n    The default is <code>&quot;O&quot;</code>.  Only the first character of\n    <code>type[1]</code> is used."
			}]
		}, {}, {}, {}, {}, {}, {}, {}, {
			"name": "Last.value",
			"args": []
		}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
			"name": "typeof",
			"args": [{
				"name": "x",
				"description": "any <span style=\"R\">R</span> object."
			}]
		}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
			"name": "normalizePath",
			"args": [{
				"name": "path",
				"description": "character vector of file paths."
			}, {
				"name": "winslash",
				"description": "the separator to be used on Windows -- ignored\n    elsewhere.  Must be one of <code>c(&quot;/&quot;, &quot;\\\\&quot;)</code>."
			}, {
				"name": "mustWork",
				"description": "logical: if <code>TRUE</code> then an error is given if the result\n    cannot be determined; if <code>NA</code> then a warning."
			}]
		}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
			"name": "Startup",
			"args": []
		}, {
			"name": "switch",
			"args": [{
				"name": "EXPR",
				"description": "an expression evaluating to a number or a character\n    string."
			}, {
				"name": "...",
				"description": "the list of alternatives.  If it is intended that\n    <code>EXPR</code> has a character-string value these will be\n    named, perhaps except for one alternative to be used as a\n    &#x2018;default&#x2019; value."
			}]
		}, {
			"name": "sweep",
			"args": [{
				"name": "x",
				"description": "an array."
			}, {
				"name": "MARGIN",
				"description": "a vector of indices giving the extent(s) of <code>x</code>\n    which correspond to <code>STATS</code>."
			}, {
				"name": "STATS",
				"description": "the summary statistic which is to be swept out."
			}, {
				"name": "FUN",
				"description": "the function to be used to carry out the sweep."
			}, {
				"name": "check.margin",
				"description": "logical.  If <code>TRUE</code> (the default), warn if the\n    length or dimensions of <code>STATS</code> do not match the specified\n    dimensions of <code>x</code>.  Set to <code>FALSE</code> for a small speed gain\n    when you <em>know</em> that dimensions match."
			}, {
				"name": "...",
				"description": "optional arguments to <code>FUN</code>."
			}]
		}, {
			"name": "subset",
			"args": [{
				"name": "x",
				"description": "object to be subsetted."
			}, {
				"name": "subset",
				"description": "logical expression indicating elements or rows to keep:\n    missing values are taken as false."
			}, {
				"name": "select",
				"description": "expression, indicating columns to select from a\n    data frame."
			}, {
				"name": "drop",
				"description": "passed on to <code>[</code> indexing operator."
			}, {
				"name": "...",
				"description": "further arguments to be passed to or from other methods."
			}]
		}, {
			"name": "Memory",
			"args": []
		}, {
			"name": "Sys.time",
			"args": []
		}, {
			"name": "name",
			"args": [{
				"name": "x",
				"description": "object to be coerced or tested."
			}]
		}, {
			"name": "Sys.which",
			"args": [{
				"name": "names",
				"description": "Character vector of names or paths of possible executables."
			}]
		}, {
			"name": "which.min",
			"args": [{
				"name": "x",
				"description": "numeric (logical, integer or double) vector or an <span style=\"R\">R</span> object\n    for which the internal coercion to <code><a rd-options=\"\" href=\"/link/double?package=base&amp;version=3.3.2\">double</a></code> works whose\n    <code><a rd-options=\"\" href=\"/link/min?package=base&amp;version=3.3.2\">min</a></code> or <code><a rd-options=\"\" href=\"/link/max?package=base&amp;version=3.3.2\">max</a></code> is searched for."
			}]
		}, {
			"name": "with",
			"args": [{
				"name": "data",
				"description": "data to use for constructing an environment. For the\n    default <code>with</code> method this may be an environment, a list, a\n    data frame, or an integer as in <code>sys.call</code>. For <code>within</code>,\n    it can be a list or a data frame."
			}, {
				"name": "expr",
				"description": "expression to evaluate."
			}, {
				"name": "...",
				"description": "arguments to be passed to future methods."
			}]
		}, {
			"name": ".Machine",
			"args": []
		}, {
			"name": "outer",
			"args": [{
				"name": "X, Y",
				"description": "First and second arguments for function <code>FUN</code>.\n    Typically a vector or array."
			}, {
				"name": "FUN",
				"description": "a function to use on the outer products, found <em>via</em>\n    <code><a rd-options=\"\" href=\"/link/match.fun?package=base&amp;version=3.3.2\">match.fun</a></code> (except for the special case <code>&quot;*&quot;</code>)."
			}, {
				"name": "...",
				"description": "optional arguments to be passed to <code>FUN</code>."
			}]
		}, {
			"name": "zapsmall",
			"args": [{
				"name": "x",
				"description": "a numeric or complex vector."
			}, {
				"name": "digits",
				"description": "integer indicating the precision to be used."
			}]
		}, {
			"name": "textConnection",
			"args": [{
				"name": "object",
				"description": "character.  A description of the <a rd-options=\"\" href=\"/link/connection?package=base&amp;version=3.3.2\">connection</a>.\n    For an input this is an <span style=\"R\">R</span> character vector object, and for an output\n    connection the name for the <span style=\"R\">R</span> character vector to receive the\n    output, or <code>NULL</code> (for none)."
			}, {
				"name": "open",
				"description": "character string.  Either <code>&quot;r&quot;</code> (or equivalently <code>&quot;&quot;</code>)\n    for an input connection or <code>&quot;w&quot;</code> or <code>&quot;a&quot;</code> for an output\n    connection."
			}, {
				"name": "local",
				"description": "logical.  Used only for output connections.  If <code>TRUE</code>,\n    output is assigned to a variable in the calling environment.  Otherwise\n    the global environment is used."
			}, {
				"name": "encoding",
				"description": "character string, partially matched.  Used only for input connections.  How\n    marked strings in <code>object</code> should be handled: converted to the\n    current locale, used byte-by-byte or translated to UTF-8."
			}, {
				"name": "con",
				"description": "An output text connection."
			}]
		}, {
			"name": "tapply",
			"args": [{
				"name": "X",
				"description": "an atomic object, typically a vector."
			}, {
				"name": "INDEX",
				"description": "a <code><a rd-options=\"\" href=\"/link/list?package=base&amp;version=3.3.2\">list</a></code> of one or more <code><a rd-options=\"\" href=\"/link/factor?package=base&amp;version=3.3.2\">factor</a></code>s,\n    each of same length as <code>X</code>.  The elements are coerced to\n    factors by <code><a rd-options=\"\" href=\"/link/as.factor?package=base&amp;version=3.3.2\">as.factor</a></code>."
			}, {
				"name": "FUN",
				"description": "the function to be applied, or <code>NULL</code>.  In the case of\n    functions like <code>+</code>, <code>%*%</code>, etc., the function name must\n    be backquoted or quoted.  If <code>FUN</code> is <code>NULL</code>, tapply\n    returns a vector which can be used to subscript the multi-way array\n    <code>tapply</code> normally produces."
			}, {
				"name": "...",
				"description": "optional arguments to <code>FUN</code>: the Note section."
			}, {
				"name": "simplify",
				"description": "logical; if <code>FALSE</code>, <code>tapply</code> always returns\n    an array of mode <code>&quot;list&quot;</code>; in other words, a <code><a rd-options=\"\" href=\"/link/list?package=base&amp;version=3.3.2\">list</a></code>\n    with a <code><a rd-options=\"\" href=\"/link/dim?package=base&amp;version=3.3.2\">dim</a></code> attribute.  If <code>TRUE</code> (the default), then if\n    <code>FUN</code> always returns a scalar, <code>tapply</code> returns an array\n    with the mode of the scalar."
			}]
		}, {
			"name": "taskCallback",
			"args": [{
				"name": "f",
				"description": "the function that is to be invoked each time a top-level task\n    is successfully completed.  This is called with 5 or 4 arguments\n    depending on whether <code>data</code> is specified or not, respectively.\n    The return value should be a logical value indicating whether to\n    keep the callback in the list of active callbacks or discard it."
			}, {
				"name": "data",
				"description": "if specified, this is the 5-th argument in the call to the\n    callback function <code>f</code>."
			}, {
				"name": "id",
				"description": "a string or an integer identifying the element in the\n    internal callback list to be removed.\n    Integer indices are 1-based, i.e the first element is 1.\n    The names of currently registered handlers is available\n    using <code><a rd-options=\"\" href=\"/link/getTaskCallbackNames?package=base&amp;version=3.3.2\">getTaskCallbackNames</a></code>\n    and is also returned in a call to <code><a rd-options=\"\" href=\"/link/addTaskCallback?package=base&amp;version=3.3.2\">addTaskCallback</a></code>."
			}, {
				"name": "name",
				"description": "character: names to be used."
			}]
		}, {
			"name": "traceback",
			"args": [{
				"name": "x",
				"description": "<code>NULL</code> (default, meaning <code>.Traceback</code>), or an\n    integer count of calls to skip in the current stack, or a list or\n    pairlist of deparsed calls.  See the details."
			}, {
				"name": "max.lines",
				"description": "The maximum number of lines to be printed\n    <em>per call</em>.  The default is unlimited."
			}]
		}, {
			"name": "tracemem",
			"args": [{
				"name": "x",
				"description": "An R object, not a function or environment or <code>NULL</code>."
			}, {
				"name": "previous",
				"description": "A value as returned by <code>tracemem</code> or <code>retracemem</code>."
			}]
		}, {
			"name": "userhooks",
			"args": [{
				"name": "hookName",
				"description": "character string: the hook name"
			}, {
				"name": "pkgname",
				"description": "character string: the package/namespace name"
			}, {
				"name": "event",
				"description": "character string: an event for the package.  Can be abbreviated."
			}, {
				"name": "value",
				"description": "A function or a list of functions, or for <code>action = &quot;replace&quot;</code>, <code>NULL</code>"
			}, {
				"name": "action",
				"description": "The action to be taken.  Can be abbreviated."
			}]
		}, {
			"name": "utf8Conversion",
			"args": [{
				"name": "x",
				"description": "object to be converted."
			}, {
				"name": "multiple",
				"description": "logical: should the conversion be to a single\n    character string or multiple individual characters?"
			}]
		}, {
			"name": "withVisible",
			"args": [{
				"name": "x",
				"description": "An expression to be evaluated."
			}]
		}, {
			"name": "taskCallbackManager",
			"args": [{
				"name": "handlers",
				"description": "this can be a list of callbacks in which each element\n    is a list with  an element  named <code>&quot;f&quot;</code>\n    which is a callback function, and an optional\n    element named <code>&quot;data&quot;</code> which is the 5-th argument to be\n    supplied  to the callback when it is invoked.\n    Typically this argument is not specified, and one uses <code>add</code> to\n    register callbacks after the manager is created."
			}, {
				"name": "registered",
				"description": "a logical value indicating whether\n    the <code>evaluate</code> function has already been registered\n    with the internal task callback mechanism.\n    This is usually <code>FALSE</code> and\n    the first time a callback is added\n    via the <code>add</code> function, the\n    <code>evaluate</code> function is automatically registered.\n    One can control when the function is registered\n    by specifying <code>TRUE</code> for this argument\n    and calling <code><a rd-options=\"\" href=\"/link/addTaskCallback?package=base&amp;version=3.3.2\">addTaskCallback</a></code> manually."
			}, {
				"name": "verbose",
				"description": "a logical value, which if <code>TRUE</code>,\n    causes information to be printed to the console\n    about certain activities this dispatch manager performs.\n    This is useful for debugging callbacks and the handler\n    itself."
			}]
		}, {
			"name": "write",
			"args": [{
				"name": "x",
				"description": "the data to be written out, usually an atomic vector."
			}, {
				"name": "file",
				"description": "A connection, or a character string naming the file to write to.\n    If <code>&quot;&quot;</code>, print to the standard output connection.\n unix\n    If it is <code>&quot;|cmd&quot;</code>, the output is piped to the command given\n    by &#x2018;<span class=\"file\">cmd</span>&#x2019;."
			}, {
				"name": "ncolumns",
				"description": "the number of columns to write the data in."
			}, {
				"name": "append",
				"description": "if <code>TRUE</code> the data <code>x</code> are appended to the\n    connection."
			}, {
				"name": "sep",
				"description": "a string used to separate columns.  Using <code>sep = &quot;\\t&quot;</code>\n    gives tab delimited output; default is <code>&quot; &quot;</code>."
			}]
		}]
	}
}, {
	"compiler": {
		"functions": [{
			"name": "compile",
			"args": [{
				"name": "f",
				"description": "a closure."
			}, {
				"name": "options",
				"description": "list of named compiler options"
			}, {
				"name": "env",
				"description": "the top level environment for the compiling."
			}, {
				"name": "file,infile,outfile",
				"description": "pathnames; outfile defaults to infile with a .Rc\n                             extension in place of any existing extension."
			}, {
				"name": "ascii",
				"description": "logical; should the compiled file be saved in ascii format?"
			}, {
				"name": "verbose",
				"description": "logical; should the compiler show what is being compiled"
			}, {
				"name": "envir",
				"description": "environment to evaluate loaded expressions in."
			}, {
				"name": "chdir",
				"description": "logical; change directory before evaluation?"
			}, {
				"name": "code",
				"description": "byte code expression or compiled closure"
			}, {
				"name": "e",
				"description": "expression to compile"
			}, {
				"name": "level",
				"description": "integer; the JIT level to use"
			}, {
				"name": "enable",
				"description": "logical; enable compiling packages if <code>TRUE</code>"
			}, {
				"name": "name",
				"description": "character string; name of option to return"
			}, {
				"name": "...",
				"description": "named compiler options to set"
			}]
		}]
	}
}, {
	"datasets": {
		"functions": [{
			"name": "AirPassengers",
			"args": []
		}, {
			"name": "attitude",
			"args": []
		}, {
			"name": "airmiles",
			"args": []
		}, {
			"name": "BJsales",
			"args": []
		}, {
			"name": "austres",
			"args": []
		}, {
			"name": "ability.cov",
			"args": []
		}, {
			"name": "attenu",
			"args": []
		}, {
			"name": "anscombe",
			"args": []
		}, {
			"name": "beavers",
			"args": []
		}, {
			"name": "airquality",
			"args": []
		}, {
			"name": "DNase",
			"args": []
		}, {
			"name": "esoph",
			"args": []
		}, {
			"name": "datasets-package",
			"args": []
		}, {
			"name": "ChickWeight",
			"args": []
		}, {
			"name": "chickwts",
			"args": []
		}, {
			"name": "crimtab",
			"args": []
		}, {
			"name": "cars",
			"args": []
		}, {
			"name": "co2",
			"args": []
		}, {
			"name": "BOD",
			"args": []
		}, {
			"name": "discoveries",
			"args": []
		}, {
			"name": "HairEyeColor",
			"args": []
		}, {
			"name": "Harman74.cor",
			"args": []
		}, {
			"name": "Indometh",
			"args": []
		}, {
			"name": "Formaldehyde",
			"args": []
		}, {
			"name": "faithful",
			"args": []
		}, {
			"name": "EuStockMarkets",
			"args": []
		}, {
			"name": "Harman23.cor",
			"args": []
		}, {
			"name": "eurodist",
			"args": []
		}, {
			"name": "euro",
			"args": []
		}, {
			"name": "freeny",
			"args": []
		}, {
			"name": "lh",
			"args": []
		}, {
			"name": "Loblolly",
			"args": []
		}, {
			"name": "LifeCycleSavings",
			"args": []
		}, {
			"name": "LakeHuron",
			"args": []
		}, {
			"name": "JohnsonJohnson",
			"args": []
		}, {
			"name": "longley",
			"args": []
		}, {
			"name": "presidents",
			"args": []
		}, {
			"name": "OrchardSprays",
			"args": []
		}, {
			"name": "Orange",
			"args": []
		}, {
			"name": "pressure",
			"args": []
		}, {
			"name": "stackloss",
			"args": []
		}, {
			"name": "state",
			"args": []
		}, {
			"name": "npk",
			"args": []
		}, {
			"name": "InsectSprays",
			"args": []
		}, {
			"name": "infert",
			"args": []
		}, {
			"name": "Theoph",
			"args": []
		}, {
			"name": "rivers",
			"args": []
		}, {
			"name": "randu",
			"args": []
		}, {
			"name": "occupationalStatus",
			"args": []
		}, {
			"name": "Titanic",
			"args": []
		}, {
			"name": "iris",
			"args": []
		}, {
			"name": "islands",
			"args": []
		}, {
			"name": "morley",
			"args": []
		}, {
			"name": "PlantGrowth",
			"args": []
		}, {
			"name": "lynx",
			"args": []
		}, {
			"name": "USPersonalExpenditure",
			"args": []
		}, {
			"name": "precip",
			"args": []
		}, {
			"name": "uspop",
			"args": []
		}, {
			"name": "UCBAdmissions",
			"args": []
		}, {
			"name": "trees",
			"args": []
		}, {
			"name": "nhtemp",
			"args": []
		}, {
			"name": "mtcars",
			"args": []
		}, {
			"name": "VADeaths",
			"args": []
		}, {
			"name": "Puromycin",
			"args": []
		}, {
			"name": "volcano",
			"args": []
		}, {
			"name": "quakes",
			"args": []
		}, {
			"name": "sunspots",
			"args": []
		}, {
			"name": "women",
			"args": []
		}, {
			"name": "swiss",
			"args": []
		}, {}, {
			"name": "Nile",
			"args": []
		}, {
			"name": "sleep",
			"args": []
		}, {
			"name": "rock",
			"args": []
		}, {
			"name": "nottem",
			"args": []
		}, {
			"name": "sunspot.month",
			"args": []
		}, {
			"name": "sunspot.year",
			"args": []
		}, {
			"name": "USAccDeaths",
			"args": []
		}, {
			"name": "UKLungDeaths",
			"args": []
		}, {
			"name": "WorldPhones",
			"args": []
		}, {
			"name": "WWWusage",
			"args": []
		}, {
			"name": "UKgas",
			"args": []
		}, {
			"name": "UKDriverDeaths",
			"args": []
		}, {
			"name": "treering",
			"args": []
		}, {
			"name": "ToothGrowth",
			"args": []
		}, {
			"name": "USArrests",
			"args": []
		}, {
			"name": "USJudgeRatings",
			"args": []
		}]
	}
}, {
	"graphics": {
		"functions": [{
			"name": "assocplot",
			"args": [{
				"name": "x",
				"description": "a two-dimensional contingency table in matrix form."
			}, {
				"name": "col",
				"description": "a character vector of length two giving the colors used for\n    drawing positive and negative Pearson residuals, respectively."
			}, {
				"name": "space",
				"description": "the amount of space (as a fraction of the average\n    rectangle width and height) left between each rectangle."
			}, {
				"name": "main",
				"description": "overall title for the plot."
			}, {
				"name": "xlab",
				"description": "a label for the x axis.  Defaults to the name (if any) of\n    the row dimension in <code>x</code>."
			}, {
				"name": "ylab",
				"description": "a label for the y axis.  Defaults to the name (if any) of\n    the column dimension in <code>x</code>."
			}]
		}, {
			"name": "boxplot.matrix",
			"args": [{
				"name": "x",
				"description": "a numeric matrix."
			}, {
				"name": "use.cols",
				"description": "logical indicating if columns (by default) or rows\n    (<code>use.cols = FALSE</code>) should be plotted."
			}, {
				"name": "...",
				"description": "Further arguments to <code><a rd-options=\"\" href=\"/link/boxplot?package=graphics&amp;version=3.3.2\">boxplot</a></code>."
			}]
		}, {
			"name": "boxplot",
			"args": [{
				"name": "formula",
				"description": "a formula, such as <code>y ~ grp</code>, where <code>y</code> is a\n    numeric vector of data values to be split into groups according to\n    the grouping variable <code>grp</code> (usually a factor)."
			}, {
				"name": "data",
				"description": "a data.frame (or list) from which the variables in\n    <code>formula</code> should be taken."
			}, {
				"name": "subset",
				"description": "an optional vector specifying a subset of observations\n    to be used for plotting."
			}, {
				"name": "na.action",
				"description": "a function which indicates what should happen\n    when the data contain <code>NA</code>s.  The default is to ignore missing\n    values in either the response or the group."
			}, {
				"name": "x",
				"description": "for specifying data from which the boxplots are to be\n    produced. Either a numeric vector, or a single list containing such\n    vectors. Additional unnamed arguments specify further data\n    as separate vectors (each corresponding to a component boxplot).\n    <code><a rd-options=\"\" href=\"/link/NA?package=graphics&amp;version=3.3.2\">NA</a></code>s are allowed in the data."
			}, {
				"name": "...",
				"description": "For the <code>formula</code> method, named arguments to be passed to\n    the default method.\n\n    For the default method, unnamed arguments are additional data\n    vectors (unless <code>x</code> is a list when they are ignored), and named\n    arguments are arguments and <a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> to be passed\n    to <code><a rd-options=\"\" href=\"/link/bxp?package=graphics&amp;version=3.3.2\">bxp</a></code> in addition to the ones given by argument\n    <code>pars</code> (and override those in <code>pars</code>). Note that\n    <code>bxp</code> may or may not make use of graphical parameters it is\n    passed: see its documentation."
			}, {
				"name": "range",
				"description": "this determines how far the plot whiskers extend out\n    from the box.  If <code>range</code> is positive, the whiskers extend\n    to the most extreme data point which is no more than\n    <code>range</code> times the interquartile range from the box. A value\n    of zero causes the whiskers to extend to the data extremes."
			}, {
				"name": "width",
				"description": "a vector giving the relative widths of the boxes making\n    up the plot."
			}, {
				"name": "varwidth",
				"description": "if <code>varwidth</code> is <code>TRUE</code>, the boxes are\n    drawn with widths proportional to the square-roots of the number\n    of observations in the groups."
			}, {
				"name": "notch",
				"description": "if <code>notch</code> is <code>TRUE</code>, a notch is drawn in\n    each side of the boxes.  If the notches of two plots do not\n    overlap this is &#x2018;strong evidence&#x2019; that the two medians differ\n    (Chambers <em>et al</em>, 1983, p.\\ifelse{latex}{\\out{~}}{ } 62).  See <code><a rd-options=\"\" href=\"/link/boxplot.stats?package=graphics&amp;version=3.3.2\">boxplot.stats</a></code>\n    for the calculations used."
			}, {
				"name": "outline",
				"description": "if <code>outline</code> is not true, the outliers are\n    not drawn (as points whereas S+ uses lines)."
			}, {
				"name": "names",
				"description": "group labels which will be printed under each boxplot.\n    Can be a character vector or an <a rd-options=\"\" href=\"/link/expression?package=graphics&amp;version=3.3.2\">expression</a> (see\n    <a rd-options=\"\" href=\"/link/plotmath?package=graphics&amp;version=3.3.2\">plotmath</a>)."
			}, {
				"name": "boxwex",
				"description": "a scale factor to be applied to all boxes.  When there\n    are only a few groups, the appearance of the plot can be improved\n    by making the boxes narrower."
			}, {
				"name": "staplewex",
				"description": "staple line width expansion, proportional to box\n    width."
			}, {
				"name": "outwex",
				"description": "outlier line width expansion, proportional to box\n    width."
			}, {
				"name": "plot",
				"description": "if <code>TRUE</code> (the default) then a boxplot is\n    produced.  If not, the summaries which the boxplots are based on\n    are returned."
			}, {
				"name": "border",
				"description": "an optional vector of colors for the outlines of the\n    boxplots.  The values in <code>border</code> are recycled if the\n    length of <code>border</code> is less than the number of plots."
			}, {
				"name": "col",
				"description": "if <code>col</code> is non-null it is assumed to contain colors\n    to be used to colour the bodies of the box plots. By default they\n    are in the background colour."
			}, {
				"name": "log",
				"description": "character indicating if x or y or both coordinates should\n    be plotted in log scale."
			}, {
				"name": "pars",
				"description": "a list of (potentially many) more graphical parameters,\n    e.g., <code>boxwex</code> or <code>outpch</code>; these are passed to\n    <code><a rd-options=\"\" href=\"/link/bxp?package=graphics&amp;version=3.3.2\">bxp</a></code> (if <code>plot</code> is true); for details, see there."
			}, {
				"name": "horizontal",
				"description": "logical indicating if the boxplots should be\n    horizontal; default <code>FALSE</code> means vertical boxes."
			}, {
				"name": "add",
				"description": "logical, if true <em>add</em> boxplot to current plot."
			}, {
				"name": "at",
				"description": "numeric vector giving the locations where the boxplots should\n    be drawn, particularly when <code>add = TRUE</code>;\n    defaults to <code>1:n</code> where <code>n</code> is the number of boxes."
			}]
		}, {
			"name": "axis",
			"args": [{
				"name": "x",
				"description": "an object which indicates the range over which an axis should\n    be drawn"
			}, {
				"name": "at",
				"description": "the points at which tick-marks are to be drawn."
			}, {
				"name": "side",
				"description": "an integer specifying which side of the plot the axis is\n    to be drawn on.  The axis is placed as follows: 1=below,\n    2=left, 3=above and 4=right."
			}, {
				"name": "labels",
				"description": "this can either be a logical value specifying whether\n    (numerical) annotations are to be made at the tickmarks, or a\n    character or expression vector of labels to be placed at the\n    tickpoints. If this is specified as a character or expression\n    vector, <code>at</code> should be supplied and they should be the same\n    length."
			}, {
				"name": "...",
				"description": "Arguments to be passed to methods and perhaps then to\n    <code><a rd-options=\"\" href=\"/link/axis?package=graphics&amp;version=3.3.2\">axis</a></code>."
			}]
		}, {
			"name": "arrows",
			"args": [{
				"name": "x0, y0",
				"description": "coordinates of points <b>from</b> which to draw."
			}, {
				"name": "x1, y1",
				"description": "coordinates of points <b>to</b> which to draw.  At least\n    one must the supplied"
			}, {
				"name": "length",
				"description": "length of the edges of the arrow head (in inches)."
			}, {
				"name": "angle",
				"description": "angle from the shaft of the arrow to the edge of the\n    arrow head."
			}, {
				"name": "code",
				"description": "integer code, determining <em>kind</em> of arrows to be\n    drawn."
			}, {
				"name": "col, lty, lwd",
				"description": "<a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a>, possible vectors.\n    <code>NA</code> values in <code>col</code> cause the arrow to be omitted."
			}, {
				"name": "...",
				"description": "<a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> such as <code>xpd</code> and the line\n    characteristics <code>lend</code>, <code>ljoin</code> and <code>lmitre</code>:\n    see <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code>."
			}]
		}, {
			"name": "abline",
			"args": [{
				"name": "a, b",
				"description": "the intercept and slope, single values."
			}, {
				"name": "untf",
				"description": "logical asking whether to <em>untransform</em>.  See\n    &#x2018;Details&#x2019;."
			}, {
				"name": "h",
				"description": "the y-value(s) for horizontal line(s)."
			}, {
				"name": "v",
				"description": "the x-value(s) for vertical line(s)."
			}, {
				"name": "coef",
				"description": "a vector of length two giving the intercept and slope."
			}, {
				"name": "reg",
				"description": "an object with a <code><a rd-options=\"\" href=\"/link/coef?package=graphics&amp;version=3.3.2\">coef</a></code> method.  See &#x2018;Details&#x2019;."
			}, {
				"name": "...",
				"description": "<a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> such as\n    <code>col</code>, <code>lty</code> and  <code>lwd</code> (possibly as vectors: see\n    &#x2018;Details&#x2019;) and <code>xpd</code> and the line characteristics\n    <code>lend</code>, <code>ljoin</code> and <code>lmitre</code>."
			}]
		}, {
			"name": "axTicks",
			"args": [{
				"name": "side",
				"description": "integer in 1:4, as for <code><a rd-options=\"\" href=\"/link/axis?package=graphics&amp;version=3.3.2\">axis</a></code>."
			}, {
				"name": "axp",
				"description": "numeric vector of length three, defaulting to\n    <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a>(&quot;xaxp&quot;)</code> or <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a>(&quot;yaxp&quot;)</code>\n    depending on the <code>side</code> argument (<code>par(&quot;xaxp&quot;)</code>\n    if <code>side</code> is 1 or 3, <code>par(&quot;yaxp&quot;)</code> if side is 2 or 4)."
			}, {
				"name": "usr",
				"description": "numeric vector of length two giving user coordinate\n    limits, defaulting to the relevant portion of\n    <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a>(&quot;usr&quot;)</code> (<code>par(&quot;usr&quot;)[1:2]</code> or\n    <code>par(&quot;usr&quot;)[3:4]</code> for <code>side</code> in (1,3) or (2,4)\n    respectively)."
			}, {
				"name": "log",
				"description": "logical indicating if log coordinates are active; defaults\n    to <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a>(&quot;xlog&quot;)</code> or <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a>(&quot;ylog&quot;)</code>\n    depending on <code>side</code>."
			}, {
				"name": "nintLog",
				"description": "(only used when <code>log</code> is true): approximate (lower\n    bound for the) number of tick intervals; defaults to\n    <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a>(&quot;lab&quot;)[j]</code> where <code>j</code> is 1 or 2 depending on\n    <code>side</code>.  Set this to <code>Inf</code> if you want the same behavior\n    as in earlier <span style=\"R\">R</span> versions (than 2.14.x)."
			}]
		}, {
			"name": "axis.POSIXct",
			"args": [{
				"name": "x, at",
				"description": "A date-time or date object."
			}, {
				"name": "side",
				"description": "See <code><a rd-options=\"\" href=\"/link/axis?package=graphics&amp;version=3.3.2\">axis</a></code>."
			}, {
				"name": "format",
				"description": "See <code><a rd-options=\"\" href=\"/link/strptime?package=graphics&amp;version=3.3.2\">strptime</a></code>."
			}, {
				"name": "labels",
				"description": "Either a logical value specifying whether\n    annotations are to be made at the tickmarks, or a vector of character\n    strings to be placed at the tickpoints."
			}, {
				"name": "...",
				"description": "Further arguments to be passed from or to other methods,\n    typically <a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a>."
			}]
		}, {
			"name": "barplot",
			"args": [{
				"name": "height",
				"description": "either a vector or matrix of values describing the\n    bars which make up the plot.  If <code>height</code> is a vector, the\n    plot consists of a sequence of rectangular bars with heights\n    given by the values in the vector.  If <code>height</code> is a matrix\n    and <code>beside</code> is <code>FALSE</code> then each bar of the plot\n    corresponds to a column of <code>height</code>, with the values in the\n    column giving the heights of stacked sub-bars making up the\n    bar.  If <code>height</code> is a matrix and <code>beside</code> is\n    <code>TRUE</code>, then the values in each column are juxtaposed\n    rather than stacked."
			}, {
				"name": "width",
				"description": "optional vector of bar widths. Re-cycled to length the\n    number of bars drawn.  Specifying a single value will have no\n    visible effect unless <code>xlim</code> is specified."
			}, {
				"name": "space",
				"description": "the amount of space (as a fraction of the average bar\n    width) left before each bar.  May be given as a single number or\n    one number per bar.  If <code>height</code> is a matrix and\n    <code>beside</code> is <code>TRUE</code>, <code>space</code> may be specified by\n    two numbers, where the first is the space between bars in the\n    same group, and the second the space between the groups.  If not\n    given explicitly, it defaults to <code>c(0,1)</code> if <code>height</code>\n    is a matrix and <code>beside</code> is <code>TRUE</code>, and to 0.2\n    otherwise."
			}, {
				"name": "names.arg",
				"description": "a vector of names to be plotted below each bar or\n    group of bars.  If this argument is omitted, then the names are\n    taken from the <code>names</code> attribute of <code>height</code> if this\n    is a vector, or the column names if it is a matrix."
			}, {
				"name": "legend.text",
				"description": "a vector of text used to construct a legend for\n    the plot, or a logical indicating whether a legend should be\n    included.  This is only useful when <code>height</code> is a matrix.\n    In that case given legend labels should correspond to the rows of\n    <code>height</code>; if <code>legend.text</code> is true, the row names of\n    <code>height</code> will be used as labels if they are non-null."
			}, {
				"name": "beside",
				"description": "a logical value.  If <code>FALSE</code>, the columns of\n    <code>height</code> are portrayed as stacked bars, and if <code>TRUE</code>\n    the columns are portrayed as juxtaposed bars."
			}, {
				"name": "horiz",
				"description": "a logical value.  If <code>FALSE</code>, the bars are drawn\n    vertically with the first bar to the left.  If <code>TRUE</code>, the\n    bars are drawn horizontally with the first at the bottom."
			}, {
				"name": "density",
				"description": "a vector giving the density of shading lines, in\n    lines per inch, for the bars or bar components.\n    The default value of <code>NULL</code> means that no shading lines\n    are drawn. Non-positive values of <code>density</code> also inhibit the\n    drawing of shading lines."
			}, {
				"name": "angle",
				"description": "the slope of shading lines, given as an angle in\n    degrees (counter-clockwise), for the bars or bar components."
			}, {
				"name": "col",
				"description": "a vector of colors for the bars or bar components.\n    By default, grey is used if <code>height</code> is a vector, and a\n    gamma-corrected grey palette if <code>height</code> is a matrix."
			}, {
				"name": "border",
				"description": "the color to be used for the border of the bars.\n    Use <code>border = NA</code> to omit borders.  If there are shading\n    lines, <code>border = TRUE</code> means use the same colour for\n    the border as for the shading lines."
			}, {
				"name": "main,sub",
				"description": "overall and sub title for the plot."
			}, {
				"name": "xlab",
				"description": "a label for the x axis."
			}, {
				"name": "ylab",
				"description": "a label for the y axis."
			}, {
				"name": "xlim",
				"description": "limits for the x axis."
			}, {
				"name": "ylim",
				"description": "limits for the y axis."
			}, {
				"name": "xpd",
				"description": "logical. Should bars be allowed to go outside region?"
			}, {
				"name": "log",
				"description": "string specifying if axis scales should be logarithmic; see\n    <code><a rd-options=\"\" href=\"/link/plot.default?package=graphics&amp;version=3.3.2\">plot.default</a></code>."
			}, {
				"name": "axes",
				"description": "logical.  If <code>TRUE</code>, a vertical (or horizontal, if\n    <code>horiz</code> is true) axis is drawn."
			}, {
				"name": "axisnames",
				"description": "logical.  If <code>TRUE</code>, and if there are\n    <code>names.arg</code> (see above), the\n    other axis is drawn (with <code>lty = 0</code>) and labeled."
			}, {
				"name": "cex.axis",
				"description": "expansion factor for numeric axis labels."
			}, {
				"name": "cex.names",
				"description": "expansion factor for axis names (bar labels)."
			}, {
				"name": "inside",
				"description": "logical.  If <code>TRUE</code>, the lines which divide\n    adjacent (non-stacked!) bars will be drawn.  Only applies when\n    <code>space = 0</code> (which it partly is when <code>beside = TRUE</code>)."
			}, {
				"name": "plot",
				"description": "logical.  If <code>FALSE</code>, nothing is plotted."
			}, {
				"name": "axis.lty",
				"description": "the graphics parameter <code>lty</code> applied to the axis\n    and tick marks of the categorical (default horizontal) axis.  Note\n    that by default the axis is suppressed."
			}, {
				"name": "offset",
				"description": "a vector indicating how much the bars should be shifted\n    relative to the x axis."
			}, {
				"name": "add",
				"description": "logical specifying if bars should be added to an already\n    existing plot; defaults to <code>FALSE</code>."
			}, {
				"name": "args.legend",
				"description": "list of additional arguments to pass to\n    <code><a rd-options=\"\" href=\"/link/legend?package=graphics&amp;version=3.3.2\">legend</a>()</code>; names of the list are used as argument\n    names.  Only used if <code>legend.text</code> is supplied."
			}, {
				"name": "...",
				"description": "arguments to be passed to/from other methods.  For the\n    default method these can include further arguments (such as\n    <code>axes</code>, <code>asp</code> and <code>main</code>) and\n    <a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> (see <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code>) which are passed to\n    <code><a rd-options=\"\" href=\"/link/plot.window?package=graphics&amp;version=3.3.2\">plot.window</a>()</code>, <code><a rd-options=\"\" href=\"/link/title?package=graphics&amp;version=3.3.2\">title</a>()</code> and\n    <code><a rd-options=\"\" href=\"/link/axis?package=graphics&amp;version=3.3.2\">axis</a></code>."
			}]
		}, {
			"name": "box",
			"args": [{
				"name": "which",
				"description": "character, one of <code>&quot;plot&quot;</code>, <code>&quot;figure&quot;</code>,\n  <code>&quot;inner&quot;</code> and <code>&quot;outer&quot;</code>."
			}, {
				"name": "lty",
				"description": "line type of the box."
			}, {
				"name": "...",
				"description": "further <a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a>, such as <code>bty</code>,\n  <code>col</code>, or <code>lwd</code>, see <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code>.  Note that\n  <code>xpd</code> is not accepted as clipping is always to the device\n  region."
			}]
		}, {
			"name": "filled.contour",
			"args": [{
				"name": "x, y",
				"description": "locations of grid lines at which the values in <code>z</code> are\n   measured.  These must be in ascending order.  (The rest of this\n   description does not apply to <code>.filled.contour</code>.)\n   By default, equally spaced values from 0 to 1 are used.  If <code>x</code>\n   is a <code>list</code>, its components <code>x$x</code> and <code>x$y</code> are used\n   for <code>x</code> and <code>y</code>, respectively.  If the list has component\n   <code>z</code> this is used for <code>z</code>."
			}, {
				"name": "z",
				"description": "a numeric matrix containing the values to be plotted..  Note that\n   <code>x</code> can be used instead of <code>z</code> for convenience."
			}, {
				"name": "xlim",
				"description": "x limits for the plot."
			}, {
				"name": "ylim",
				"description": "y limits for the plot."
			}, {
				"name": "zlim",
				"description": "z limits for the plot."
			}, {
				"name": "levels",
				"description": "a set of levels which are used to partition the range\n    of <code>z</code>.  Must be <b>strictly</b> increasing (and finite).  Areas\n    with <code>z</code> values between consecutive levels are painted with the\n    same color."
			}, {
				"name": "nlevels",
				"description": "if <code>levels</code> is not specified, the range of <code>z</code>,\n    values is divided into approximately this many levels."
			}, {
				"name": "color.palette",
				"description": "a color palette function to be used to assign\n    colors in the plot."
			}, {
				"name": "col",
				"description": "an explicit set of colors to be used in the plot.\n    This argument overrides any palette function specification.  There\n    should be one less color than levels"
			}, {
				"name": "plot.title",
				"description": "statements which add titles to the main plot."
			}, {
				"name": "plot.axes",
				"description": "statements which draw axes (and a <code><a rd-options=\"\" href=\"/link/box?package=graphics&amp;version=3.3.2\">box</a></code>)\n   on the main plot.  This overrides the default axes."
			}, {
				"name": "key.title",
				"description": "statements which add titles for the plot key."
			}, {
				"name": "key.axes",
				"description": "statements which draw axes on the plot key.\n    This overrides the default axis."
			}, {
				"name": "asp",
				"description": "the $y/x$ aspect ratio, see <code><a rd-options=\"\" href=\"/link/plot.window?package=graphics&amp;version=3.3.2\">plot.window</a></code>."
			}, {
				"name": "xaxs",
				"description": "the x axis style.  The default is to use internal\n    labeling."
			}, {
				"name": "yaxs",
				"description": "the y axis style.  The default is to use internal\n    labeling."
			}, {
				"name": "las",
				"description": "the style of labeling to be used.  The default is to\n    use horizontal labeling."
			}, {
				"name": "axes, frame.plot",
				"description": "logicals indicating if axes and a box should be\n   drawn, as in <code><a rd-options=\"\" href=\"/link/plot.default?package=graphics&amp;version=3.3.2\">plot.default</a></code>."
			}, {
				"name": "...",
				"description": "additional <a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a>, currently only passed to\n   <code><a rd-options=\"\" href=\"/link/title?package=graphics&amp;version=3.3.2\">title</a>()</code>."
			}]
		}, {
			"name": "curve",
			"args": [{
				"name": "expr",
				"description": "The name of a function, or a <a rd-options=\"\" href=\"/link/call?package=graphics&amp;version=3.3.2\">call</a> or an\n    <a rd-options=\"\" href=\"/link/expression?package=graphics&amp;version=3.3.2\">expression</a> written as a function of <code>x</code> which will\n    evaluate to an object of the same length as <code>x</code>."
			}, {
				"name": "x",
				"description": "a &#x2018;vectorizing&#x2019; numeric <span style=\"R\">R</span> function."
			}, {
				"name": "y",
				"description": "alias for <code>from</code> for compatibility with <code>plot</code>"
			}, {
				"name": "from, to",
				"description": "the range over which the function will be plotted."
			}, {
				"name": "n",
				"description": "integer; the number of x values at which to evaluate."
			}, {
				"name": "add",
				"description": "logical; if <code>TRUE</code> add to an already existing plot; if\n    <code>NA</code> start a new plot taking the defaults for the limits and\n    log-scaling of the x-axis from the previous plot.  Taken as\n    <code>FALSE</code> (with a warning if a different value is supplied) if no\n    graphics device is open."
			}, {
				"name": "xlim",
				"description": "<code>NULL</code> or a numeric vector of length 2;\n    if non-<code>NULL</code> it provides the defaults for <code>c(from, to)</code>\n    and, unless <code>add = TRUE</code>, selects the x-limits of the plot -- see\n    <code><a rd-options=\"\" href=\"/link/plot.window?package=graphics&amp;version=3.3.2\">plot.window</a></code>."
			}, {
				"name": "type",
				"description": "plot type: see <code><a rd-options=\"\" href=\"/link/plot.default?package=graphics&amp;version=3.3.2\">plot.default</a></code>."
			}, {
				"name": "xname",
				"description": "character string giving the name to be used for the x axis."
			}, {
				"name": "xlab, ylab, log, ...",
				"description": "labels and <a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a>\n    can also be specified as arguments.  See &#x2018;Details&#x2019; for the\n    interpretation of the default for <code>log</code>.\n\n    For the <code>&quot;function&quot;</code> method of <code>plot</code>, <code>...</code> can\n    include any of the other arguments of <code>curve</code>, except\n    <code>expr</code>."
			}]
		}, {
			"name": "dotchart",
			"args": [{
				"name": "x",
				"description": "either a vector or matrix of numeric values (<code>NA</code>s are\n    allowed).  If <code>x</code> is a matrix the overall plot consists of\n    juxtaposed dotplots for each row.  Inputs which satisfy\n    <code><a rd-options=\"\" href=\"/link/is.numeric?package=graphics&amp;version=3.3.2\">is.numeric</a>(x)</code> but not\n    <code>is.vector(x) || is.matrix(x)</code> are coerced by\n    <code><a rd-options=\"\" href=\"/link/as.numeric?package=graphics&amp;version=3.3.2\">as.numeric</a></code>, with a warning."
			}, {
				"name": "labels",
				"description": "a vector of labels for each point.\n    For vectors the default is to use <code>names(x)</code> and for matrices\n    the row labels <code>dimnames(x)[[1]]</code>."
			}, {
				"name": "groups",
				"description": "an optional factor indicating how the elements of\n    <code>x</code> are grouped.\n    If <code>x</code> is a matrix, <code>groups</code> will default to the columns\n    of <code>x</code>."
			}, {
				"name": "gdata",
				"description": "data values for the groups.\n    This is typically a summary such as the median or mean\n    of each group."
			}, {
				"name": "cex",
				"description": "the character size to be used.  Setting <code>cex</code>\n    to a value smaller than one can be a useful way of avoiding label\n    overlap.  Unlike many other graphics functions, this sets the actual\n    size, not a multiple of <code>par(&quot;cex&quot;)</code>."
			}, {
				"name": "pt.cex",
				"description": "the <code>cex</code> to be applied to plotting symbols.\n    This behaves like <code>cex</code> in <code>plot()</code>."
			}, {
				"name": "pch",
				"description": "the plotting character or symbol to be used."
			}, {
				"name": "gpch",
				"description": "the plotting character or symbol to be used for group\n    values."
			}, {
				"name": "bg",
				"description": "the background color of plotting characters or symbols to be\n    used; use <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a>(bg= *)</code> to set the background color of\n    the whole plot."
			}, {
				"name": "color",
				"description": "the color(s) to be used for points and labels."
			}, {
				"name": "gcolor",
				"description": "the single color to be used for group labels and\n    values."
			}, {
				"name": "lcolor",
				"description": "the color(s) to be used for the horizontal lines."
			}, {
				"name": "xlim",
				"description": "horizontal range for the plot, see\n    <code><a rd-options=\"\" href=\"/link/plot.window?package=graphics&amp;version=3.3.2\">plot.window</a></code>, for example."
			}, {
				"name": "main",
				"description": "overall title for the plot, see <code><a rd-options=\"\" href=\"/link/title?package=graphics&amp;version=3.3.2\">title</a></code>."
			}, {
				"name": "xlab, ylab",
				"description": "axis annotations as in <code>title</code>."
			}, {
				"name": "...",
				"description": "<a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> can also be specified as arguments."
			}]
		}, {
			"name": "coplot",
			"args": [{
				"name": "formula",
				"description": "a formula describing the form of conditioning plot.  A\n    formula of the form <code>y ~ x | a</code> indicates that plots of\n    <code>y</code> versus <code>x</code> should be produced conditional on the\n    variable <code>a</code>.  A formula of the form <code>y ~ x| a * b</code>\n    indicates that plots of <code>y</code> versus <code>x</code> should be produced\n    conditional on the two variables <code>a</code> and <code>b</code>.\n\n    All three or four variables may be either numeric or factors.\n    When <code>x</code> or <code>y</code> are factors, the result is almost as if\n    <code>as.numeric()</code> was applied, whereas for factor\n    <code>a</code> or <code>b</code>, the conditioning (and its graphics if\n    <code>show.given</code> is true) are adapted."
			}, {
				"name": "data",
				"description": "a data frame containing values for any variables in the\n    formula.  By default the environment where <code>coplot</code> was called\n    from is used."
			}, {
				"name": "given.values",
				"description": "a value or list of two values which determine how\n    the conditioning on <code>a</code> and <code>b</code> is to take place.\n\n    When there is no <code>b</code> (i.e., conditioning only on <code>a</code>),\n    usually this is a matrix with two columns each row of which gives an\n    interval, to be conditioned on, but is can also be a single vector\n    of numbers or a set of factor levels (if the variable being\n    conditioned on is a factor). In this case (no <code>b</code>),\n    the result of <code>co.intervals</code> can be used directly as\n    <code>given.values</code> argument."
			}, {
				"name": "panel",
				"description": "a <code><a rd-options=\"\" href=\"/link/function?package=graphics&amp;version=3.3.2\">function</a>(x, y, col, pch, ...)</code>\n      which gives the action to be carried out in\n      each panel of the display.  The default is <code>points</code>."
			}, {
				"name": "rows",
				"description": "the panels of the plot are laid out in a <code>rows</code> by\n    <code>columns</code> array.  <code>rows</code> gives the number of rows in the\n    array."
			}, {
				"name": "columns",
				"description": "the number of columns in the panel layout array."
			}, {
				"name": "show.given",
				"description": "logical (possibly of length 2 for 2 conditioning\n      variables): should conditioning plots be shown for the\n    corresponding conditioning variables (default <code>TRUE</code>)."
			}, {
				"name": "col",
				"description": "a vector of colors to be used to plot the points.  If too\n    short, the values are recycled."
			}, {
				"name": "pch",
				"description": "a vector of plotting symbols or characters.  If too short,\n    the values are recycled."
			}, {
				"name": "bar.bg",
				"description": "a named vector with components <code>&quot;num&quot;</code> and\n    <code>&quot;fac&quot;</code> giving the background colors for the (shingle) bars,\n    for <b>num</b>eric and <b>fac</b>tor conditioning variables respectively."
			}, {
				"name": "xlab",
				"description": "character; labels to use for the x axis and the\n    first conditioning variable.  If only one label is given, it is used\n    for the x axis and the default label is used for the conditioning\n    variable."
			}, {
				"name": "ylab",
				"description": "character; labels to use for the y axis and any\n    second conditioning variable."
			}, {
				"name": "subscripts",
				"description": "logical: if true the panel function is given an\n    additional (third) argument <code>subscripts</code> giving the subscripts\n    of the data passed to that panel."
			}, {
				"name": "axlabels",
				"description": "function for creating axis (tick) labels when x or y\n      are factors."
			}, {
				"name": "number",
				"description": "integer; the number of conditioning intervals,\n    for a and b, possibly of length 2.  It is only used if the\n    corresponding conditioning variable is not a <code><a rd-options=\"\" href=\"/link/factor?package=graphics&amp;version=3.3.2\">factor</a></code>."
			}, {
				"name": "overlap",
				"description": "numeric &lt; 1; the fraction of overlap of the\n    conditioning variables, possibly of length 2 for x and y\n    direction.  When overlap &lt; 0, there will be <em>gaps</em> between\n    the data slices."
			}, {
				"name": "xlim",
				"description": "the range for the x axis."
			}, {
				"name": "ylim",
				"description": "the range for the y axis."
			}, {
				"name": "...",
				"description": "additional arguments to the panel function."
			}, {
				"name": "x",
				"description": "a numeric vector."
			}]
		}, {
			"name": "convertXY",
			"args": [{
				"name": "x, y",
				"description": "numeric vector of coordinates."
			}, {
				"name": "from, to",
				"description": "character strings giving the coordinate systems to\n    convert between."
			}]
		}, {
			"name": "cdplot",
			"args": [{
				"name": "x",
				"description": "an object, the default method expects a single numerical\n    variable (or an object coercible to this)."
			}, {
				"name": "y",
				"description": "a <code>&quot;factor&quot;</code> interpreted to be the dependent variable"
			}, {
				"name": "formula",
				"description": "a <code>&quot;formula&quot;</code> of type <code>y ~ x</code> with a single dependent\n    <code>&quot;factor&quot;</code> and a single numerical explanatory variable."
			}, {
				"name": "data",
				"description": "an optional data frame."
			}, {
				"name": "plot",
				"description": "logical. Should the computed conditional densities be plotted?"
			}, {
				"name": "tol.ylab",
				"description": "convenience tolerance parameter for y-axis annotation.\n    If the distance between two labels drops under this threshold, they are\n    plotted equidistantly."
			}, {
				"name": "ylevels",
				"description": "a character or numeric vector specifying in which order\n    the levels of the dependent variable should be plotted."
			}, {
				"name": "bw, n, from, to, ...",
				"description": "arguments passed to <code><a rd-options=\"\" href=\"/link/density?package=graphics&amp;version=3.3.2\">density</a></code>"
			}, {
				"name": "col",
				"description": "a vector of fill colors of the same length as <code>levels(y)</code>.\n    The default is to call <code><a rd-options=\"\" href=\"/link/gray.colors?package=graphics&amp;version=3.3.2\">gray.colors</a></code>."
			}, {
				"name": "border",
				"description": "border color of shaded polygons."
			}, {
				"name": "main, xlab, ylab",
				"description": "character strings for annotation"
			}, {
				"name": "yaxlabels",
				"description": "character vector for annotation of y axis, defaults to\n    <code>levels(y)</code>."
			}, {
				"name": "xlim, ylim",
				"description": "the range of x and y values with sensible defaults."
			}, {
				"name": "subset",
				"description": "an optional vector specifying a subset of observations\n    to be used for plotting."
			}]
		}, {
			"name": "bxp",
			"args": [{
				"name": "z",
				"description": "a list containing data summaries to be used in constructing\n    the plots.  These are usually the result of a call to\n    <code><a rd-options=\"\" href=\"/link/boxplot?package=graphics&amp;version=3.3.2\">boxplot</a></code>, but can be generated in any fashion."
			}, {
				"name": "notch",
				"description": "if <code>notch</code> is <code>TRUE</code>, a notch is drawn in each\n    side of the boxes.  If the notches of two plots do not overlap then\n    the medians are significantly different at the 5 percent level."
			}, {
				"name": "width",
				"description": "a vector giving the relative widths of the boxes making\n    up the plot."
			}, {
				"name": "varwidth",
				"description": "if <code>varwidth</code> is <code>TRUE</code>, the boxes are drawn\n    with widths proportional to the square-roots of the number of\n    observations in the groups."
			}, {
				"name": "outline",
				"description": "if <code>outline</code> is not true, the outliers are not\n    drawn."
			}, {
				"name": "notch.frac",
				"description": "numeric in (0,1). When <code>notch = TRUE</code>, the\n    fraction of the box width that the notches should use."
			}, {
				"name": "border",
				"description": "character or numeric (vector), the color of the box\n    borders.  Is recycled for multiple boxes.  Is used as default for\n    the <code>boxcol</code>, <code>medcol</code>, <code>whiskcol</code>, <code>staplecol</code>,\n    and <code>outcol</code> options (see below)."
			}, {
				"name": "log",
				"description": "character, indicating if any axis should be drawn in\n    logarithmic scale, as in <code><a rd-options=\"\" href=\"/link/plot.default?package=graphics&amp;version=3.3.2\">plot.default</a></code>."
			}, {
				"name": "frame.plot",
				"description": "logical, indicating if a &#x2018;frame&#x2019;\n    (<code><a rd-options=\"\" href=\"/link/box?package=graphics&amp;version=3.3.2\">box</a></code>) should be drawn; defaults to <code>TRUE</code>, unless\n    <code>axes = FALSE</code> is specified."
			}, {
				"name": "horizontal",
				"description": "logical indicating if the  boxplots should be\n    horizontal; default <code>FALSE</code> means vertical boxes."
			}, {
				"name": "add",
				"description": "logical, if true <em>add</em> boxplot to current plot."
			}, {
				"name": "at",
				"description": "numeric vector giving the locations where the boxplots\n    should be drawn, particularly when <code>add = TRUE</code>; defaults to\n    <code>1:n</code> where <code>n</code> is the number of boxes."
			}, {
				"name": "show.names",
				"description": "Set to <code>TRUE</code> or <code>FALSE</code> to override the\n    defaults on whether an x-axis label is printed for each group."
			}, {
				"name": "pars,...",
				"description": "<a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> (etc) can be passed as\n    arguments to this function, either as a list (<code>pars</code>) or\n    normally(<code>...</code>), see the following.  (Those in <code>...</code>\n    take precedence over those in <code>pars</code>.)\n\n    Currently, <code>yaxs</code> and <code>ylim</code> are used &#x2018;along the\n      boxplot&#x2019;, i.e., vertically, when <code>horizontal</code> is\n    false, and <code>xlim</code> horizontally.\n    <code>xaxt</code>, <code>yaxt</code>, <code>las</code>, <code>cex.axis</code>, and\n    <code>col.axis</code> are passed to <code><a rd-options=\"\" href=\"/link/axis?package=graphics&amp;version=3.3.2\">axis</a></code>, and <code>main</code>,\n    <code>cex.main</code>, <code>col.main</code>, <code>sub</code>, <code>cex.sub</code>,\n    <code>col.sub</code>, <code>xlab</code>, <code>ylab</code>, <code>cex.lab</code>, and\n    <code>col.lab</code> are passed to <code><a rd-options=\"\" href=\"/link/title?package=graphics&amp;version=3.3.2\">title</a></code>.\n\n    In addition, <code>axes</code> is accepted (see\n    <code><a rd-options=\"\" href=\"/link/plot.window?package=graphics&amp;version=3.3.2\">plot.window</a></code>), with default <code>TRUE</code>.\n\n    The following arguments (or <code>pars</code> components) allow further\n    customization of the boxplot graphics.  Their defaults are typically\n    determined from the non-prefixed version (e.g., <code>boxlty</code> from\n    <code>lty</code>), either from the specified argument or <code>pars</code>\n    component or the corresponding <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code> one.\n    <dl>\n            \n            \n            \n            \n            \n            \n            \n    </dl>"
			}]
		}, {
			"name": "fourfoldplot",
			"args": [{
				"name": "x",
				"description": "a 2 by 2 by $k$ contingency table in array form, or as a\n    2 by 2 matrix if $k$ is 1."
			}, {
				"name": "color",
				"description": "a vector of length 2 specifying the colors to use for the\n    smaller and larger diagonals of each 2 by 2 table."
			}, {
				"name": "conf.level",
				"description": "confidence level used for the confidence rings on\n    the odds ratios.  Must be a single nonnegative number less than 1;\n    if set to 0, confidence rings are suppressed."
			}, {
				"name": "std",
				"description": "a character string specifying how to standardize the table.\n    Must match one of <code>&quot;margins&quot;</code>, <code>&quot;ind.max&quot;</code>, or\n    <code>&quot;all.max&quot;</code>, and can be abbreviated to the initial letter.\n    If set to <code>&quot;margins&quot;</code>, each 2 by 2 table is standardized to\n    equate the margins specified by <code>margin</code> while preserving the\n    odds ratio.  If <code>&quot;ind.max&quot;</code> or <code>&quot;all.max&quot;</code>, the tables are\n    either individually or simultaneously standardized to a maximal cell\n    frequency of 1."
			}, {
				"name": "margin",
				"description": "a numeric vector with the margins to equate.  Must be\n    one of <code>1</code>, <code>2</code>, or <code>c(1, 2)</code> (the default), which\n    corresponds to standardizing the row, column, or both margins in\n    each 2 by 2 table.\n    Only used if <code>std</code> equals <code>&quot;margins&quot;</code>."
			}, {
				"name": "space",
				"description": "the amount of space (as a fraction of the maximal radius\n    of the quarter circles) used for the row and column labels."
			}, {
				"name": "main",
				"description": "character string for the fourfold title."
			}, {
				"name": "mfrow",
				"description": "a numeric vector of the form <code>c(nr, nc)</code>, indicating\n    that the displays for the 2 by 2 tables should be arranged in an\n    <code>nr</code> by <code>nc</code> layout, filled by rows."
			}, {
				"name": "mfcol",
				"description": "a numeric vector of the form <code>c(nr, nc)</code>, indicating\n    that the displays for the 2 by 2 tables should be arranged in an\n    <code>nr</code> by <code>nc</code> layout, filled by columns."
			}]
		}, {
			"name": "contour",
			"args": [{
				"name": "x, y",
				"description": "locations of grid lines at which the values in <code>z</code> are\n    measured.  These must be in ascending order.  By default, equally\n    spaced values from 0 to 1 are used.  If <code>x</code> is a <code>list</code>,\n    its components <code>x$x</code> and <code>x$y</code> are used for <code>x</code>\n    and <code>y</code>, respectively. If the list has component <code>z</code> this\n    is used for <code>z</code>."
			}, {
				"name": "z",
				"description": "a matrix containing the values to be plotted (<code>NA</code>s are\n    allowed).  Note that <code>x</code> can be used instead of <code>z</code> for\n    convenience."
			}, {
				"name": "nlevels",
				"description": "number of contour levels desired <b>iff</b>\n    <code>levels</code> is not supplied."
			}, {
				"name": "levels",
				"description": "numeric vector of levels at which to draw contour\n    lines."
			}, {
				"name": "labels",
				"description": "a vector giving the labels for the contour lines.  If\n    <code>NULL</code> then the levels are used as labels, otherwise this is\n    coerced by <code><a rd-options=\"\" href=\"/link/as.character?package=graphics&amp;version=3.3.2\">as.character</a></code>."
			}, {
				"name": "labcex",
				"description": "<code>cex</code> for contour labelling.  This is an absolute\n    size, not a multiple of <code>par(&quot;cex&quot;)</code>."
			}, {
				"name": "drawlabels",
				"description": "logical.  Contours are labelled if <code>TRUE</code>."
			}, {
				"name": "method",
				"description": "character string specifying where the labels will be\n    located. Possible values are <code>&quot;simple&quot;</code>, <code>&quot;edge&quot;</code> and\n    <code>&quot;flattest&quot;</code> (the default).  See the &#x2018;Details&#x2019; section."
			}, {
				"name": "vfont",
				"description": "if <code>NULL</code>, the current font family and face are used\n    for the contour labels.  If a character vector of length 2 then\n    Hershey vector fonts are used for the contour labels. The first\n    element of the vector selects a typeface and the second element\n    selects a fontindex (see <code><a rd-options=\"\" href=\"/link/text?package=graphics&amp;version=3.3.2\">text</a></code> for more information).\n    The default is <code>NULL</code> on graphics devices with high-quality\n    rotation of text and <code>c(&quot;sans serif&quot;, &quot;plain&quot;)</code> otherwise."
			}, {
				"name": "xlim, ylim, zlim",
				"description": "x-, y- and z-limits for the plot."
			}, {
				"name": "axes, frame.plot",
				"description": "logical indicating whether axes or a box\n    should be drawn, see <code><a rd-options=\"\" href=\"/link/plot.default?package=graphics&amp;version=3.3.2\">plot.default</a></code>."
			}, {
				"name": "col",
				"description": "color for the lines drawn."
			}, {
				"name": "lty",
				"description": "line type for the lines drawn."
			}, {
				"name": "lwd",
				"description": "line width for the lines drawn."
			}, {
				"name": "add",
				"description": "logical. If <code>TRUE</code>, add to a current plot."
			}, {
				"name": "...",
				"description": "additional arguments to <code><a rd-options=\"\" href=\"/link/plot.window?package=graphics&amp;version=3.3.2\">plot.window</a></code>,\n    <code><a rd-options=\"\" href=\"/link/title?package=graphics&amp;version=3.3.2\">title</a></code>, <code><a rd-options=\"\" href=\"/link/Axis?package=graphics&amp;version=3.3.2\">Axis</a></code> and <code><a rd-options=\"\" href=\"/link/box?package=graphics&amp;version=3.3.2\">box</a></code>,\n    typically <a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> such as <code>cex.axis</code>."
			}]
		}, {
			"name": "clip",
			"args": [{
				"name": "x1, x2, y1, y2",
				"description": "user coordinates of clipping rectangle"
			}]
		}, {
			"name": "legend",
			"args": [{
				"name": "x, y",
				"description": "the x and y co-ordinates to be used to position the legend.\n    They can be specified by keyword or in any way which is accepted by\n    <code><a rd-options=\"\" href=\"/link/xy.coords?package=graphics&amp;version=3.3.2\">xy.coords</a></code>: See &#x2018;Details&#x2019;."
			}, {
				"name": "legend",
				"description": "a character or <a rd-options=\"\" href=\"/link/expression?package=graphics&amp;version=3.3.2\">expression</a> vector\n    of length $\\ge 1$ to appear in the legend.  Other\n    objects will be coerced by <code><a rd-options=\"\" href=\"/link/as.graphicsAnnot?package=graphics&amp;version=3.3.2\">as.graphicsAnnot</a></code>."
			}, {
				"name": "fill",
				"description": "if specified, this argument will cause boxes filled\n    with the specified colors (or shaded in the specified colors)\n    to appear beside the legend text."
			}, {
				"name": "col",
				"description": "the color of points or lines appearing in the legend."
			}, {
				"name": "border",
				"description": "the border color for the boxes (used only if\n    <code>fill</code> is specified)."
			}, {
				"name": "lty, lwd",
				"description": "the line types and widths for lines appearing in the\n    legend.  One of these two <em>must</em> be specified for line drawing."
			}, {
				"name": "pch",
				"description": "the plotting symbols appearing in the legend, as\n    numeric vector or a vector of 1-character strings (see\n    <code><a rd-options=\"\" href=\"/link/points?package=graphics&amp;version=3.3.2\">points</a></code>). Unlike <code>points</code>, this can all be\n    specified as a single multi-character string.  <em>Must</em> be\n    specified for symbol drawing."
			}, {
				"name": "angle",
				"description": "angle of shading lines."
			}, {
				"name": "density",
				"description": "the density of shading lines, if numeric and\n    positive. If <code>NULL</code> or negative or <code>NA</code> color filling\n    is assumed."
			}, {
				"name": "bty",
				"description": "the type of box to be drawn around the legend.  The allowed\n    values are <code>&quot;o&quot;</code> (the default) and <code>&quot;n&quot;</code>."
			}, {
				"name": "bg",
				"description": "the background color for the legend box.  (Note that this is\n    only used if <code>bty != &quot;n&quot;</code>.)"
			}, {
				"name": "box.lty, box.lwd, box.col",
				"description": "the line type, width and color for\n    the legend box (if <code>bty = &quot;o&quot;</code>)."
			}, {
				"name": "pt.bg",
				"description": "the background color for the <code><a rd-options=\"\" href=\"/link/points?package=graphics&amp;version=3.3.2\">points</a></code>,\n    corresponding to its argument <code>bg</code>."
			}, {
				"name": "cex",
				"description": "character expansion factor <b>relative</b> to current\n    <code>par(&quot;cex&quot;)</code>.  Used for text, and provides the default for\n    <code>pt.cex</code> and <code>title.cex</code>."
			}, {
				"name": "pt.cex",
				"description": "expansion factor(s) for the points."
			}, {
				"name": "pt.lwd",
				"description": "line width for the points, defaults to the one for\n    lines, or if that is not set, to <code>par(&quot;lwd&quot;)</code>."
			}, {
				"name": "xjust",
				"description": "how the legend is to be justified relative to the legend\n    x location.  A value of 0 means left justified, 0.5 means centered\n    and 1 means right justified."
			}, {
				"name": "yjust",
				"description": "the same as <code>xjust</code> for the legend y location."
			}, {
				"name": "x.intersp",
				"description": "character interspacing factor for horizontal (x) spacing."
			}, {
				"name": "y.intersp",
				"description": "the same for vertical (y) line distances."
			}, {
				"name": "adj",
				"description": "numeric of length 1 or 2; the string adjustment for legend\n    text.  Useful for y-adjustment when <code>labels</code> are\n    <a rd-options=\"\" href=\"/link/plotmath?package=graphics&amp;version=3.3.2\">plotmath</a> expressions."
			}, {
				"name": "text.width",
				"description": "the width of the legend text in x (<code>&quot;user&quot;</code>)\n    coordinates.  (Should be a single positive number even for a reversed \n    x axis.)  Defaults to the proper value computed by \n    <code><a rd-options=\"\" href=\"/link/strwidth?package=graphics&amp;version=3.3.2\">strwidth</a>(legend)</code>."
			}, {
				"name": "text.col",
				"description": "the color used for the legend text."
			}, {
				"name": "text.font",
				"description": "the font used for the legend text, see <code><a rd-options=\"\" href=\"/link/text?package=graphics&amp;version=3.3.2\">text</a></code>."
			}, {
				"name": "merge",
				"description": "logical; if <code>TRUE</code>, merge points and lines but\n    not filled boxes.  Defaults to <code>TRUE</code> if there are points and lines."
			}, {
				"name": "trace",
				"description": "logical; if <code>TRUE</code>, shows how <code>legend</code> does all\n    its magical computations."
			}, {
				"name": "plot",
				"description": "logical.  If <code>FALSE</code>, nothing is plotted but the\n    sizes are returned."
			}, {
				"name": "ncol",
				"description": "the number of columns in which to set the legend items\n    (default is 1, a vertical legend)."
			}, {
				"name": "horiz",
				"description": "logical; if <code>TRUE</code>, set the legend horizontally\n    rather than vertically (specifying <code>horiz</code> overrides the <code>ncol</code>\n    specification)."
			}, {
				"name": "title",
				"description": "a character string or length-one expression giving a\n    title to be placed at the top of the legend.  Other objects will be\n    coerced by <code><a rd-options=\"\" href=\"/link/as.graphicsAnnot?package=graphics&amp;version=3.3.2\">as.graphicsAnnot</a></code>."
			}, {
				"name": "inset",
				"description": "inset distance(s) from the margins as a fraction of the\n    plot region when legend is placed by keyword."
			}, {
				"name": "xpd",
				"description": "if supplied, a value of the <a rd-options=\"\" href=\"/link/graphical%20parameter?package=graphics&amp;version=3.3.2\">graphical parameter</a> <code>xpd</code>\n    to be used while the legend is being drawn."
			}, {
				"name": "title.col",
				"description": "color for <code>title</code>."
			}, {
				"name": "title.adj",
				"description": "horizontal adjustment for <code>title</code>: see the help\n    for <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a>(&quot;adj&quot;)</code>."
			}, {
				"name": "seg.len",
				"description": "the length of lines drawn to illustrate <code>lty</code>\n    and/or <code>lwd</code> (in units of character widths)."
			}]
		}, {
			"name": "grid",
			"args": [{
				"name": "nx, ny",
				"description": "number of cells of the grid in x and y direction.  When\n    <code>NULL</code>, as per default, the grid aligns with the tick marks on\n    the corresponding <em>default</em> axis (i.e., tickmarks as computed by\n    <code><a rd-options=\"\" href=\"/link/axTicks?package=graphics&amp;version=3.3.2\">axTicks</a></code>).  When <code><a rd-options=\"\" href=\"/link/NA?package=graphics&amp;version=3.3.2\">NA</a></code>, no grid lines are\n    drawn in the corresponding direction."
			}, {
				"name": "col",
				"description": "character or (integer) numeric; color of the grid lines."
			}, {
				"name": "lty",
				"description": "character or (integer) numeric; line type of the grid lines."
			}, {
				"name": "lwd",
				"description": "non-negative numeric giving line width of the grid lines."
			}, {
				"name": "equilogs",
				"description": "logical, only used when <em>log</em> coordinates and\n    alignment with the axis tick marks are active.  Setting <code>equilogs =\n      FALSE</code> in that case gives <em>non equidistant</em> tick aligned\n    grid lines."
			}]
		}, {
			"name": "hist",
			"args": [{
				"name": "x",
				"description": "a vector of values for which the histogram is desired."
			}, {
				"name": "breaks",
				"description": "one of:\n    <ul>\n<li> a vector giving the breakpoints between histogram cells,\n      </li>\n<li> a function to compute the vector of breakpoints,\n      </li>\n<li> a single number giving the number of cells for the histogram,\n      </li>\n<li> a character string naming an algorithm to compute the\n      number of cells (see &#x2018;Details&#x2019;),\n      </li>\n<li> a function to compute the number of cells.\n    </li>\n</ul>\n\n    In the last three cases the number is a suggestion only; the\n     breakpoints will be set to <code><a rd-options=\"\" href=\"/link/pretty?package=graphics&amp;version=3.3.2\">pretty</a></code> values.  If\n     <code>breaks</code> is a function, the <code>x</code> vector is supplied to it\n     as the only argument."
			}, {
				"name": "freq",
				"description": "logical; if <code>TRUE</code>, the histogram graphic is a\n    representation of frequencies, the <code>counts</code> component of\n    the result; if <code>FALSE</code>, probability densities, component\n    <code>density</code>, are plotted (so that the histogram has a total area\n    of one).  Defaults to <code>TRUE</code> <em>if and only if</em> <code>breaks</code> are\n    equidistant (and <code>probability</code> is not specified)."
			}, {
				"name": "probability",
				"description": "an <em>alias</em> for <code>!freq</code>, for S compatibility."
			}, {
				"name": "include.lowest",
				"description": "logical; if <code>TRUE</code>, an <code>x[i]</code> equal to\n    the <code>breaks</code> value will be included in the first (or last, for\n    <code>right = FALSE</code>) bar.  This will be ignored (with a warning)\n    unless <code>breaks</code> is a vector."
			}, {
				"name": "right",
				"description": "logical; if <code>TRUE</code>, the histogram cells are\n    right-closed (left open) intervals."
			}, {
				"name": "density",
				"description": "the density of shading lines, in lines per inch.\n    The default value of <code>NULL</code> means that no shading lines\n    are drawn. Non-positive values of <code>density</code> also inhibit the\n    drawing of shading lines."
			}, {
				"name": "angle",
				"description": "the slope of shading lines, given as an angle in\n    degrees (counter-clockwise)."
			}, {
				"name": "col",
				"description": "a colour to be used to fill the bars.\n    The default of <code>NULL</code> yields unfilled bars."
			}, {
				"name": "border",
				"description": "the color of the border around the bars.  The default\n    is to use the standard foreground color."
			}, {
				"name": "main, xlab, ylab",
				"description": "these arguments to <code>title</code> have useful\n    defaults here."
			}, {
				"name": "xlim, ylim",
				"description": "the range of x and y values with sensible defaults.\n    Note that <code>xlim</code> is <em>not</em> used to define the histogram (breaks),\n    but only for plotting (when <code>plot = TRUE</code>)."
			}, {
				"name": "axes",
				"description": "logical.  If <code>TRUE</code> (default), axes are draw if the\n    plot is drawn."
			}, {
				"name": "plot",
				"description": "logical.  If <code>TRUE</code> (default), a histogram is\n    plotted, otherwise a list of breaks and counts is returned.  In the\n    latter case, a warning is used if (typically graphical) arguments\n    are specified that only apply to the <code>plot = TRUE</code> case."
			}, {
				"name": "labels",
				"description": "logical or character string.  Additionally draw labels on top\n    of bars, if not <code>FALSE</code>; see <code><a rd-options=\"\" href=\"/link/plot.histogram?package=graphics&amp;version=3.3.2\">plot.histogram</a></code>."
			}, {
				"name": "nclass",
				"description": "numeric (integer).  For S(-PLUS) compatibility only,\n    <code>nclass</code> is equivalent to <code>breaks</code> for a scalar or\n    character argument."
			}, {
				"name": "warn.unused",
				"description": "logical.  If <code>plot = FALSE</code> and\n    <code>warn.unused = TRUE</code>, a warning will be issued when graphical\n    parameters are passed to <code>hist.default()</code>."
			}, {
				"name": "...",
				"description": "further arguments and <a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> passed to\n    <code><a rd-options=\"\" href=\"/link/plot.histogram?package=graphics&amp;version=3.3.2\">plot.histogram</a></code> and thence to <code><a rd-options=\"\" href=\"/link/title?package=graphics&amp;version=3.3.2\">title</a></code> and\n    <code><a rd-options=\"\" href=\"/link/axis?package=graphics&amp;version=3.3.2\">axis</a></code> (if <code>plot = TRUE</code>)."
			}]
		}, {
			"name": "graphics-package",
			"args": []
		}, {
			"name": "layout",
			"args": [{
				"name": "mat",
				"description": "a matrix object specifying the location of the next\n    $N$ figures on the output device.  Each value in the matrix must\n    be <code>0</code> or a positive integer.  If $N$ is the largest\n    positive integer in the matrix, then the integers\n    ${1, \\dots, N-1}$ must also appear at least once in the matrix."
			}, {
				"name": "widths",
				"description": "a vector of values for the widths of columns on the\n    device.  Relative widths are specified with numeric values.    Absolute\n    widths (in centimetres) are specified with the <code>lcm()</code> function (see\n    examples)."
			}, {
				"name": "heights",
				"description": "a vector of values for the heights of rows on the device.\n    Relative and absolute heights can be specified, see <code>widths</code> above."
			}, {
				"name": "respect",
				"description": "either a logical value or a matrix object.  If the\n    latter, then it must have the same dimensions as <code>mat</code> and\n    each value in the matrix must be either <code>0</code> or <code>1</code>."
			}, {
				"name": "n",
				"description": "number of figures to plot."
			}, {
				"name": "x",
				"description": "a dimension to be interpreted as a number of centimetres."
			}]
		}, {
			"name": "hist.POSIXt",
			"args": [{
				"name": "x",
				"description": "an object inheriting from class <code>&quot;POSIXt&quot;</code> or <code>&quot;Date&quot;</code>."
			}, {
				"name": "breaks",
				"description": "a vector of cut points <em>or</em> number giving the number of\n    intervals which <code>x</code> is to be cut into <em>or</em> an\n    interval specification, one of <code>&quot;days&quot;</code>, <code>&quot;weeks&quot;</code>,\n    <code>&quot;months&quot;</code>, <code>&quot;quarters&quot;</code> or <code>&quot;years&quot;</code>,\n    plus <code>&quot;secs&quot;</code>, <code>&quot;mins&quot;</code>, <code>&quot;hours&quot;</code> for\n    date-time objects."
			}, {
				"name": "...",
				"description": "<a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a>, or arguments to\n    <code><a rd-options=\"\" href=\"/link/hist.default?package=graphics&amp;version=3.3.2\">hist.default</a></code> such as <code>include.lowest</code>,\n      <code>right</code> and <code>labels</code>."
			}, {
				"name": "xlab",
				"description": "a character string giving the label for the x axis, if plotted."
			}, {
				"name": "plot",
				"description": "logical.  If <code>TRUE</code> (default), a histogram is\n    plotted, otherwise a list of breaks and counts is returned."
			}, {
				"name": "freq",
				"description": "logical; if <code>TRUE</code>, the\n    histogram graphic is a representation of frequencies, i.e,\n    the <code>counts</code> component of the result; if <code>FALSE</code>,\n    <em>relative</em> frequencies (probabilities) are plotted."
			}, {
				"name": "start.on.monday",
				"description": "logical. If <code>breaks = &quot;weeks&quot;</code>, should the\n    week start on Mondays or Sundays?"
			}, {
				"name": "format",
				"description": "for the x-axis labels. See <code><a rd-options=\"\" href=\"/link/strptime?package=graphics&amp;version=3.3.2\">strptime</a></code>."
			}, {
				"name": "right",
				"description": "logical; if <code>TRUE</code>, the histogram cells are\n    right-closed (left open) intervals."
			}]
		}, {
			"name": "graphics-defunct",
			"args": []
		}, {
			"name": "image",
			"args": [{
				"name": "x, y",
				"description": "locations of grid lines at which the values in <code>z</code> are\n    measured.  These must be finite, non-missing and in (strictly)\n    ascending order.  By default, equally\n    spaced values from 0 to 1 are used.  If <code>x</code> is a <code>list</code>,\n    its components <code>x$x</code> and <code>x$y</code> are used for <code>x</code>\n    and <code>y</code>, respectively. If the list has component <code>z</code> this\n    is used for <code>z</code>."
			}, {
				"name": "z",
				"description": "a numeric or logical matrix containing the values to be plotted\n    (<code>NA</code>s are allowed).  Note that <code>x</code> can be used instead\n    of <code>z</code> for convenience."
			}, {
				"name": "zlim",
				"description": "the minimum and maximum <code>z</code> values for which colors\n    should be plotted, defaulting to the range of the finite values of\n    <code>z</code>. Each of the given colors will be used to color an\n    equispaced interval of this range. The <em>midpoints</em> of the\n    intervals cover the range, so that values just outside the range\n    will be plotted."
			}, {
				"name": "xlim, ylim",
				"description": "ranges for the plotted <code>x</code> and <code>y</code> values,\n    defaulting to the ranges of <code>x</code> and <code>y</code>."
			}, {
				"name": "col",
				"description": "a list of colors such as that generated by\n    <code><a rd-options=\"\" href=\"/link/rainbow?package=graphics&amp;version=3.3.2\">rainbow</a></code>, <code><a rd-options=\"\" href=\"/link/heat.colors?package=graphics&amp;version=3.3.2\">heat.colors</a></code>,\n    <code><a rd-options=\"\" href=\"/link/topo.colors?package=graphics&amp;version=3.3.2\">topo.colors</a></code>, <code><a rd-options=\"\" href=\"/link/terrain.colors?package=graphics&amp;version=3.3.2\">terrain.colors</a></code> or similar\n    functions."
			}, {
				"name": "add",
				"description": "logical; if <code>TRUE</code>, add to current plot (and disregard\n    the following four arguments).  This is rarely useful because\n    <code>image</code> &#x2018;paints&#x2019; over existing graphics."
			}, {
				"name": "xaxs, yaxs",
				"description": "style of x and y axis.  The default <code>&quot;i&quot;</code> is\n    appropriate for images.  See <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code>."
			}, {
				"name": "xlab, ylab",
				"description": "each a character string giving the labels for the x and\n    y axis.  Default to the &#x2018;call names&#x2019; of <code>x</code> or <code>y</code>, or to\n    <code>&quot;&quot;</code> if these were unspecified."
			}, {
				"name": "breaks",
				"description": "a set of finite numeric breakpoints for the colours:\n    must have one more breakpoint than colour and be in increasing\n    order.  Unsorted vectors will be sorted, with a warning."
			}, {
				"name": "oldstyle",
				"description": "logical. If true the midpoints of the colour intervals\n    are equally spaced, and <code>zlim[1]</code> and <code>zlim[2]</code> were taken\n    to be midpoints.  The default is to have colour intervals of equal\n    lengths between the limits."
			}, {
				"name": "useRaster",
				"description": "logical; if <code>TRUE</code> a bitmap raster is used to\n    plot the image instead of polygons. The grid must be regular in that\n    case, otherwise an error is raised.   For the behaviour when this is\n    not specified, see &#x2018;Details&#x2019;."
			}, {
				"name": "...",
				"description": "<a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> for <code><a rd-options=\"\" href=\"/link/plot?package=graphics&amp;version=3.3.2\">plot</a></code> may also be\n    passed as arguments to this function, as can the plot aspect ratio\n    <code>asp</code> and <code>axes</code> (see <code><a rd-options=\"\" href=\"/link/plot.window?package=graphics&amp;version=3.3.2\">plot.window</a></code>)."
			}]
		}, {
			"name": "identify",
			"args": [{
				"name": "x, y",
				"description": "coordinates of points in a scatter plot.  Alternatively, any\n    object which defines coordinates (a plotting structure, time\n    series etc: see <code><a rd-options=\"\" href=\"/link/xy.coords?package=graphics&amp;version=3.3.2\">xy.coords</a></code>) can be given as <code>x</code>,\n    and <code>y</code> left missing."
			}, {
				"name": "labels",
				"description": "an optional character vector giving labels for the\n    points.  Will be coerced using <code><a rd-options=\"\" href=\"/link/as.character?package=graphics&amp;version=3.3.2\">as.character</a></code>, and\n    recycled if necessary to the length of <code>x</code>.  Excess labels will\n    be discarded, with a warning."
			}, {
				"name": "pos",
				"description": "if <code>pos</code> is <code>TRUE</code>, a component is added to the\n    return value which indicates where text was plotted relative to each\n    identified point: see Value."
			}, {
				"name": "n",
				"description": "the maximum number of points to be identified."
			}, {
				"name": "plot",
				"description": "logical: if <code>plot</code> is <code>TRUE</code>, the labels are\n    printed near the points and if <code>FALSE</code> they are omitted."
			}, {
				"name": "atpen",
				"description": "logical: if <code>TRUE</code> and <code>plot = TRUE</code>, the\n    lower-left corners of the labels are plotted at the points clicked\n    rather than relative to the points."
			}, {
				"name": "offset",
				"description": "the distance (in character widths) which separates the\n    label from identified points.  Negative values are allowed.  Not\n    used if <code>atpen = TRUE</code>."
			}, {
				"name": "tolerance",
				"description": "the maximal distance (in inches) for the pointer to be\n    &#x2018;close enough&#x2019; to a point."
			}, {
				"name": "...",
				"description": "further arguments passed to <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code> such as\n    <code>cex</code>, <code>col</code> and <code>font</code>."
			}]
		}, {
			"name": "frame",
			"args": []
		}, {
			"name": "lines",
			"args": [{
				"name": "x, y",
				"description": "coordinate vectors of points to join."
			}, {
				"name": "type",
				"description": "character indicating the type of plotting; actually any of\n    the <code>type</code>s as in <code><a rd-options=\"\" href=\"/link/plot.default?package=graphics&amp;version=3.3.2\">plot.default</a></code>."
			}, {
				"name": "...",
				"description": "Further graphical parameters (see <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code>) may\n    also be supplied as arguments, particularly, line type, <code>lty</code>,\n    line width, <code>lwd</code>, color, <code>col</code> and for <code>type = &quot;b&quot;</code>,\n    <code>pch</code>.  Also the line characteristics <code>lend</code>, <code>ljoin</code>\n    and <code>lmitre</code>."
			}]
		}, {
			"name": "persp",
			"args": [{
				"name": "x, y",
				"description": "locations of grid lines at which the values in <code>z</code> are\n    measured.  These must be in ascending order.  By default, equally\n    spaced values from 0 to 1 are used.  If <code>x</code> is a <code>list</code>,\n    its components <code>x$x</code> and <code>x$y</code> are used for <code>x</code>\n    and <code>y</code>, respectively."
			}, {
				"name": "z",
				"description": "a matrix containing the values to be plotted (<code>NA</code>s are\n    allowed).  Note that <code>x</code> can be used instead of <code>z</code> for\n    convenience."
			}, {
				"name": "xlim, ylim, zlim",
				"description": "x-, y-  and z-limits.  These should be chosen\n    to cover the range of values of the surface: see &#x2018;Details&#x2019;."
			}, {
				"name": "xlab, ylab, zlab",
				"description": "titles for the axes.  N.B. These must be\n    character strings; expressions are not accepted.  Numbers will be\n    coerced to character strings."
			}, {
				"name": "main, sub",
				"description": "main and sub title, as for <code><a rd-options=\"\" href=\"/link/title?package=graphics&amp;version=3.3.2\">title</a></code>."
			}, {
				"name": "theta, phi",
				"description": "angles defining the viewing direction.\n    <code>theta</code> gives the azimuthal direction and <code>phi</code>\n    the colatitude."
			}, {
				"name": "r",
				"description": "the distance of the eyepoint from the centre of the plotting box."
			}, {
				"name": "d",
				"description": "a value which can be used to vary the strength of\n    the perspective transformation.  Values of <code>d</code> greater\n    than 1 will lessen the perspective effect and values less\n    and 1 will exaggerate it."
			}, {
				"name": "scale",
				"description": "before viewing the x, y and z coordinates of the\n    points defining the surface are transformed to the interval\n    [0,1].  If <code>scale</code> is <code>TRUE</code> the x, y and z coordinates\n    are transformed separately.  If <code>scale</code> is <code>FALSE</code>\n    the coordinates are scaled so that aspect ratios are retained.\n    This is useful for rendering things like DEM information."
			}, {
				"name": "expand",
				"description": "a expansion factor applied to the <code>z</code>\n    coordinates. Often used with <code>0 &lt; expand &lt; 1</code> to shrink the\n    plotting box in the <code>z</code> direction."
			}, {
				"name": "col",
				"description": "the color(s) of the surface facets.  Transparent colours are\n    ignored.  This is recycled to the $(nx-1)(ny-1)$ facets."
			}, {
				"name": "border",
				"description": "the color of the line drawn around the surface facets.\n    The default, <code>NULL</code>, corresponds to <code>par(&quot;fg&quot;)</code>.\n    A value of <code>NA</code> will disable the drawing of borders: this is\n    sometimes useful when the surface is shaded."
			}, {
				"name": "ltheta, lphi",
				"description": "if finite values are specified for <code>ltheta</code>\n    and <code>lphi</code>, the surface is shaded as though it was being\n    illuminated from the direction specified by azimuth <code>ltheta</code>\n    and colatitude <code>lphi</code>."
			}, {
				"name": "shade",
				"description": "the shade at a surface facet is computed as\n    <code>((1+d)/2)^shade</code>, where <code>d</code> is the dot product of\n    a unit vector normal to the facet and a unit vector in the\n    direction of a light source.  Values of <code>shade</code> close\n    to one yield shading similar to a point light source model\n    and values close to zero produce no shading.  Values in the\n    range 0.5 to 0.75 provide an approximation to daylight\n    illumination."
			}, {
				"name": "box",
				"description": "should the bounding box for the surface be displayed.\n    The default is <code>TRUE</code>."
			}, {
				"name": "axes",
				"description": "should ticks and labels be added to the box.  The\n    default is <code>TRUE</code>.  If <code>box</code> is <code>FALSE</code> then no\n    ticks or labels are drawn."
			}, {
				"name": "ticktype",
				"description": "character: <code>&quot;simple&quot;</code> draws just an arrow\n    parallel to the axis to indicate direction of increase;\n    <code>&quot;detailed&quot;</code> draws normal ticks as per 2D plots."
			}, {
				"name": "nticks",
				"description": "the (approximate) number of tick marks to draw on the\n    axes.  Has no effect if <code>ticktype</code> is <code>&quot;simple&quot;</code>."
			}, {
				"name": "...",
				"description": "additional <a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> (see <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code>)."
			}]
		}, {
			"name": "pie",
			"args": [{
				"name": "x",
				"description": "a vector of non-negative numerical quantities.\n    The values in <code>x</code> are displayed as the areas of pie slices."
			}, {
				"name": "labels",
				"description": "one or more expressions or character strings giving\n    names for the slices.  Other objects are coerced by\n    <code><a rd-options=\"\" href=\"/link/as.graphicsAnnot?package=graphics&amp;version=3.3.2\">as.graphicsAnnot</a></code>.  For empty or <code>NA</code>\n    (after coercion to character) labels, no label nor pointing line\n    is drawn."
			}, {
				"name": "edges",
				"description": "the circular outline of the pie is approximated by a\n    polygon with this many edges."
			}, {
				"name": "radius",
				"description": "the pie is drawn centered in a square box whose sides\n    range from $-1$ to $1$.  If the character strings labeling\n    the slices are long it may be necessary to use a smaller radius."
			}, {
				"name": "clockwise",
				"description": "logical indicating if slices are drawn clockwise or\n    counter clockwise (i.e., mathematically positive direction), the\n    latter is default."
			}, {
				"name": "init.angle",
				"description": "number specifying the <em>starting angle</em> (in\n    degrees) for the slices. Defaults to 0 (i.e., &#x2018;3 o&apos;clock&#x2019;)\n    unless <code>clockwise</code> is true where <code>init.angle</code>\n    defaults to 90 (degrees), (i.e., &#x2018;12 o&apos;clock&#x2019;)."
			}, {
				"name": "density",
				"description": "the density of shading lines, in lines per inch.\n    The default value of <code>NULL</code> means that no shading lines\n    are drawn. Non-positive values of <code>density</code> also inhibit the\n    drawing of shading lines."
			}, {
				"name": "angle",
				"description": "the slope of shading lines, given as an angle in\n    degrees (counter-clockwise)."
			}, {
				"name": "col",
				"description": "a vector of colors to be used in filling or shading\n    the slices. If missing a set of 6 pastel colours is used,\n    unless <code>density</code> is specified when <code>par(&quot;fg&quot;)</code> is used."
			}, {
				"name": "border, lty",
				"description": "(possibly vectors) arguments passed to\n    <code><a rd-options=\"\" href=\"/link/polygon?package=graphics&amp;version=3.3.2\">polygon</a></code> which draws each slice."
			}, {
				"name": "main",
				"description": "an overall title for the plot."
			}, {
				"name": "...",
				"description": "<a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> can be given as arguments to\n    <code>pie</code>.  They will affect the main title and labels only."
			}]
		}, {
			"name": "pairs",
			"args": [{
				"name": "x",
				"description": "the coordinates of points given as numeric columns of a\n    matrix or data frame.  Logical and factor columns are converted to\n    numeric in the same way that <code><a rd-options=\"\" href=\"/link/data.matrix?package=graphics&amp;version=3.3.2\">data.matrix</a></code> does."
			}, {
				"name": "formula",
				"description": "a formula, such as <code>~ x + y + z</code>.  Each term will\n    give a separate variable in the pairs plot, so terms should be\n    numeric vectors.  (A response will be interpreted as another\n    variable, but not treated specially, so it is confusing to use one.)"
			}, {
				"name": "data",
				"description": "a data.frame (or list) from which the variables in\n    <code>formula</code> should be taken."
			}, {
				"name": "subset",
				"description": "an optional vector specifying a subset of observations\n    to be used for plotting."
			}, {
				"name": "na.action",
				"description": "a function which indicates what should happen\n    when the data contain <code>NA</code>s.  The default is to pass missing\n    values on to the panel functions, but <code>na.action = na.omit</code>\n    will cause cases with missing values in any of the variables to be\n    omitted entirely."
			}, {
				"name": "labels",
				"description": "the names of the variables."
			}, {
				"name": "panel",
				"description": "<code>function(x, y, ...)</code> which is used to plot\n    the contents of each panel of the display."
			}, {
				"name": "...",
				"description": "arguments to be passed to or from methods.\n\n    Also, <a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> can be given as can arguments to\n    <code>plot</code> such as <code>main</code>.  <code>par(&quot;oma&quot;)</code> will be set\n    appropriately unless specified."
			}, {
				"name": "horInd, verInd",
				"description": "The (numerical) indices of the variables to be\n    plotted on the horizontal and vertical axes respectively."
			}, {
				"name": "lower.panel, upper.panel",
				"description": "separate panel functions (or\n    <code>NULL</code>) to be used below and above the diagonal respectively."
			}, {
				"name": "diag.panel",
				"description": "optional <code>function(x, ...)</code> to be\n    applied on the diagonals."
			}, {
				"name": "text.panel",
				"description": "optional <code>function(x, y, labels, cex,\n      font, ...)</code> to be applied on the diagonals."
			}, {
				"name": "label.pos",
				"description": "<code>y</code> position of labels in the text panel."
			}, {
				"name": "line.main",
				"description": "if <code>main</code> is specified, <code>line.main</code> gives\n    the <code>line</code> argument to <code><a rd-options=\"\" href=\"/link/mtext?package=graphics&amp;version=3.3.2\">mtext</a>()</code> which draws the\n    title.  You may want to specify <code>oma</code> when changing <code>line.main</code>."
			}, {
				"name": "cex.labels, font.labels",
				"description": "graphics parameters for the text panel."
			}, {
				"name": "row1attop",
				"description": "logical. Should the layout be matrix-like with row 1\n    at the top, or graph-like with row 1 at the bottom?"
			}, {
				"name": "gap",
				"description": "distance between subplots, in margin lines."
			}, {
				"name": "log",
				"description": "a character string indicating if logarithmic axes are to be\n    used: see <code><a rd-options=\"\" href=\"/link/plot.default?package=graphics&amp;version=3.3.2\">plot.default</a></code>.  <code>log = &quot;xy&quot;</code> specifies\n    logarithmic axes for all variables."
			}]
		}, {
			"name": "mosaicplot",
			"args": [{
				"name": "x",
				"description": "a contingency table in array form, with optional category\n    labels specified in the <code>dimnames(x)</code> attribute.  The table is\n    best created by the <code>table()</code> command."
			}, {
				"name": "main",
				"description": "character string for the mosaic title."
			}, {
				"name": "sub",
				"description": "character string for the mosaic sub-title (at bottom)."
			}, {
				"name": "xlab, ylab",
				"description": "x- and y-axis labels used for the plot; by default,\n    the first and second element of <code>names(dimnames(X))</code> (i.e., the\n    name of the first and second variable in <code>X</code>)."
			}, {
				"name": "sort",
				"description": "vector ordering of the variables, containing a permutation\n    of the integers <code>1:length(dim(x))</code> (the default)."
			}, {
				"name": "off",
				"description": "vector of offsets to determine percentage spacing at each\n    level of the mosaic (appropriate values are between 0 and 20,\n    and the default is 20 times the number of splits for 2-dimensional\n    tables, and 10 otherwise.  Rescaled to maximally 50, and recycled if\n    necessary."
			}, {
				"name": "dir",
				"description": "vector of split directions (<code>&quot;v&quot;</code> for vertical and\n    <code>&quot;h&quot;</code> for horizontal) for each level of the mosaic, one\n    direction for each dimension of the contingency table.  The\n    default consists of alternating directions, beginning with a\n    vertical split."
			}, {
				"name": "color",
				"description": "logical or (recycling) vector of colors for color\n    shading, used only when <code>shade</code> is <code>FALSE</code>, or <code>NULL</code>\n    (default).  By default, grey boxes are drawn.  <code>color = TRUE</code>\n    uses a gamma-corrected grey palette.  <code>color = FALSE</code> gives empty\n    boxes with no shading."
			}, {
				"name": "shade",
				"description": "a logical indicating whether to produce extended mosaic\n    plots, or a numeric vector of at most 5 distinct positive numbers\n    giving the absolute values of the cut points for the residuals.  By\n    default, <code>shade</code> is <code>FALSE</code>, and simple mosaics are\n    created.  Using <code>shade = TRUE</code> cuts absolute values at 2 and\n    4."
			}, {
				"name": "margin",
				"description": "a list of vectors with the marginal totals to be fit in\n    the log-linear model.  By default, an independence model is fitted.\n    See <code><a rd-options=\"\" href=\"/link/loglin?package=graphics&amp;version=3.3.2\">loglin</a></code> for further information."
			}, {
				"name": "cex.axis",
				"description": "The magnification to be used for axis annotation,\n    as a multiple of <code>par(&quot;cex&quot;)</code>."
			}, {
				"name": "las",
				"description": "numeric; the style of axis labels, see <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code>."
			}, {
				"name": "border",
				"description": "colour of borders of cells: see <code><a rd-options=\"\" href=\"/link/polygon?package=graphics&amp;version=3.3.2\">polygon</a></code>."
			}, {
				"name": "type",
				"description": "a character string indicating the type of residual to be\n    represented.  Must be one of <code>&quot;pearson&quot;</code> (giving components of\n    Pearson&apos;s $chi-squared$), <code>&quot;deviance&quot;</code> (giving\n    components of the likelihood ratio $chi-squared$), or\n    <code>&quot;FT&quot;</code> for the Freeman-Tukey residuals.  The value of this\n    argument can be abbreviated."
			}, {
				"name": "formula",
				"description": "a formula, such as <code>y ~ x</code>."
			}, {
				"name": "data",
				"description": "a data frame (or list), or a contingency table from which\n    the variables in <code>formula</code> should be taken."
			}, {
				"name": "...",
				"description": "further arguments to be passed to or from methods."
			}, {
				"name": "subset",
				"description": "an optional vector specifying a subset of observations\n    in the data frame to be used for plotting."
			}, {
				"name": "na.action",
				"description": "a function which indicates what should happen\n    when the data contains variables to be cross-tabulated, and these\n    variables contain <code>NA</code>s.  The default is to omit cases which\n    have an <code>NA</code> in any variable.  Since the tabulation will omit\n    all cases containing missing values, this will only be useful if the\n    <code>na.action</code> function replaces missing values."
			}]
		}, {
			"name": "locator",
			"args": [{
				"name": "n",
				"description": "the maximum number of points to locate.  Valid values start\n    at 1."
			}, {
				"name": "type",
				"description": "One of <code>&quot;n&quot;</code>, <code>&quot;p&quot;</code>, <code>&quot;l&quot;</code> or\n    <code>&quot;o&quot;</code>. If <code>&quot;p&quot;</code> or <code>&quot;o&quot;</code> the points are\n    plotted; if <code>&quot;l&quot;</code>  or <code>&quot;o&quot;</code> they are joined by lines."
			}, {
				"name": "...",
				"description": "additional graphics parameters used if <code>type != &quot;n&quot;</code>\n    for plotting the locations."
			}]
		}, {
			"name": "panel.smooth",
			"args": [{
				"name": "x, y",
				"description": "numeric vectors of the same length"
			}, {
				"name": "col, bg, pch, cex",
				"description": "numeric or character codes for the color(s),\n    point type and size of <code><a rd-options=\"\" href=\"/link/points?package=graphics&amp;version=3.3.2\">points</a></code>; see also\n    <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code>."
			}, {
				"name": "col.smooth",
				"description": "color to be used by <code>lines</code> for drawing the\n    smooths."
			}, {
				"name": "span",
				"description": "smoothing parameter <code>f</code> for <code><a rd-options=\"\" href=\"/link/lowess?package=graphics&amp;version=3.3.2\">lowess</a></code>, see\n    there."
			}, {
				"name": "iter",
				"description": "number of robustness iterations for <code><a rd-options=\"\" href=\"/link/lowess?package=graphics&amp;version=3.3.2\">lowess</a></code>."
			}, {
				"name": "...",
				"description": "further arguments to <code><a rd-options=\"\" href=\"/link/lines?package=graphics&amp;version=3.3.2\">lines</a></code>."
			}]
		}, {
			"name": "par",
			"args": [{
				"name": "...",
				"description": "arguments in <code>tag = value</code> form, or a list of tagged\n    values.  The tags must come from the names of graphical parameters\n    described in the &#x2018;Graphical Parameters&#x2019; section."
			}, {
				"name": "no.readonly",
				"description": "logical; if <code>TRUE</code> and there are no other\n    arguments, only parameters are returned which can be set by a\n    subsequent <code>par()</code> call <em>on the same device</em>."
			}]
		}, {
			"name": "mtext",
			"args": [{
				"name": "text",
				"description": "a character or <a rd-options=\"\" href=\"/link/expression?package=graphics&amp;version=3.3.2\">expression</a> vector specifying\n    the <em>text</em> to be written.  Other objects are coerced by\n    <code><a rd-options=\"\" href=\"/link/as.graphicsAnnot?package=graphics&amp;version=3.3.2\">as.graphicsAnnot</a></code>."
			}, {
				"name": "side",
				"description": "on which side of the plot (1=bottom, 2=left, 3=top, 4=right)."
			}, {
				"name": "line",
				"description": "on which MARgin line, starting at 0 counting outwards."
			}, {
				"name": "outer",
				"description": "use outer margins if available."
			}, {
				"name": "at",
				"description": "give location of each string in user coordinates.  If the\n     component of <code>at</code> corresponding to a particular text item is\n     not a finite value (the default), the location will be determined\n     by <code>adj</code>."
			}, {
				"name": "adj",
				"description": "adjustment for each string in reading direction.  For\n    strings parallel to the axes, <code>adj = 0</code> means left or bottom\n    alignment, and <code>adj = 1</code> means right or top alignment.\n\n    If <code>adj</code> is not a finite value (the default), the value of\n    <code>par(&quot;las&quot;)</code> determines the adjustment.  For strings plotted\n    parallel to the axis the default is to centre the string."
			}, {
				"name": "padj",
				"description": "adjustment for each string perpendicular to the reading\n    direction (which is controlled by <code>adj</code>).  For strings parallel\n    to the axes, <code>padj = 0</code> means right or top alignment,\n    and <code>padj = 1</code> means left or bottom alignment.\n\n    If <code>padj</code> is not a finite value (the default), the value of\n    <code>par(&quot;las&quot;)</code> determines the adjustment.  For strings plotted\n    perpendicular to the axis the default is to centre the string."
			}, {
				"name": "cex",
				"description": "character expansion factor.  <code>NULL</code> and <code>NA</code>\n    are equivalent to <code>1.0</code>.  This is an absolute measure, not\n    scaled by <code>par(&quot;cex&quot;)</code> or by setting <code>par(&quot;mfrow&quot;)</code>\n    or <code>par(&quot;mfcol&quot;)</code>.  Can be a vector."
			}, {
				"name": "col",
				"description": "color to use.  Can be a vector.  <code>NA</code> values (the\n    default) mean use <code>par(&quot;col&quot;)</code>."
			}, {
				"name": "font",
				"description": "font for text.  Can be a vector.  <code>NA</code> values (the\n    default) mean use <code>par(&quot;font&quot;)</code>."
			}, {
				"name": "...",
				"description": "Further graphical parameters (see <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code>),\n    including <code>family</code>, <code>las</code> and <code>xpd</code>. (The latter\n    defaults to the figure region unless <code>outer = TRUE</code>, otherwise\n    the device region.  It can only be increased.)"
			}]
		}, {
			"name": "matplot",
			"args": [{
				"name": "x,y",
				"description": "vectors or matrices of data for plotting.  The number of\n    rows should match.  If one of them are missing, the other is taken\n    as <code>y</code> and an <code>x</code> vector of <code>1:n</code> is used.\n    Missing values (<code>NA</code>s) are allowed."
			}, {
				"name": "type",
				"description": "character string (length 1 vector) or vector of 1-character\n    strings indicating the type of plot for each\n    column of <code>y</code>, see <code><a rd-options=\"\" href=\"/link/plot?package=graphics&amp;version=3.3.2\">plot</a></code> for all possible\n    <code>type</code>s.  The first character of <code>type</code>\n    defines the first plot, the second character the second, etc.\n    Characters in <code>type</code> are cycled through; e.g., <code>&quot;pl&quot;</code>\n    alternately plots points and lines."
			}, {
				"name": "lty,lwd,lend",
				"description": "vector of line types, widths, and end styles.\n    The first element is for the first column, the second element for\n    the second column, etc., even if lines are not plotted for all\n    columns. Line types will be used cyclically until all plots are\n    drawn."
			}, {
				"name": "pch",
				"description": "character string or vector of 1-characters or integers for\n    plotting characters, see <code><a rd-options=\"\" href=\"/link/points?package=graphics&amp;version=3.3.2\">points</a></code>.\n    The first character is the plotting-character for the first plot,\n    the second for the second, etc.  The default is the digits (1\n    through 9, 0) then the lowercase and uppercase letters."
			}, {
				"name": "col",
				"description": "vector of colors.  Colors are used cyclically."
			}, {
				"name": "cex",
				"description": "vector of character expansion sizes, used cyclically.\n    This works as a multiple of <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a>(&quot;cex&quot;)</code>.  <code>NULL</code> is\n    equivalent to <code>1.0</code>."
			}, {
				"name": "bg",
				"description": "vector of background (fill) colors for the open plot\n    symbols given by <code>pch = 21:25</code> as in <code><a rd-options=\"\" href=\"/link/points?package=graphics&amp;version=3.3.2\">points</a></code>.  The\n    default <code>NA</code> corresponds to the one of the underlying function\n    <code><a rd-options=\"\" href=\"/link/plot.xy?package=graphics&amp;version=3.3.2\">plot.xy</a></code>."
			}, {
				"name": "xlab, ylab",
				"description": "titles for x and y axes, as in <code><a rd-options=\"\" href=\"/link/plot?package=graphics&amp;version=3.3.2\">plot</a></code>."
			}, {
				"name": "xlim, ylim",
				"description": "ranges of x and y axes, as in <code><a rd-options=\"\" href=\"/link/plot?package=graphics&amp;version=3.3.2\">plot</a></code>."
			}, {
				"name": "...",
				"description": "Graphical parameters (see <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code>) and any further\n    arguments of <code>plot</code>, typically <code><a rd-options=\"\" href=\"/link/plot.default?package=graphics&amp;version=3.3.2\">plot.default</a></code>, may also be\n    supplied as arguments to this function.  Hence, the high-level\n    graphics control arguments described under <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code> and the\n    arguments to <code><a rd-options=\"\" href=\"/link/title?package=graphics&amp;version=3.3.2\">title</a></code> may be supplied to this function."
			}, {
				"name": "add",
				"description": "logical.  If <code>TRUE</code>, plots are added to current one,\n    using <code><a rd-options=\"\" href=\"/link/points?package=graphics&amp;version=3.3.2\">points</a></code> and <code><a rd-options=\"\" href=\"/link/lines?package=graphics&amp;version=3.3.2\">lines</a></code>."
			}, {
				"name": "verbose",
				"description": "logical.  If <code>TRUE</code>, write one line of what is\n    done."
			}]
		}, {
			"name": "plot.table",
			"args": [{
				"name": "x",
				"description": "a <code><a rd-options=\"\" href=\"/link/table?package=graphics&amp;version=3.3.2\">table</a></code> (like) object."
			}, {
				"name": "y",
				"description": "Must be <code>NULL</code>: there to protect against incorrect calls."
			}, {
				"name": "type",
				"description": "plotting type."
			}, {
				"name": "ylim",
				"description": "range of y-axis."
			}, {
				"name": "lwd",
				"description": "line width for bars when <code>type = &quot;h&quot;</code> is used in the 1D case."
			}, {
				"name": "xlab, ylab",
				"description": "x- and y-axis labels."
			}, {
				"name": "frame.plot",
				"description": "logical indicating if a frame (<code><a rd-options=\"\" href=\"/link/box?package=graphics&amp;version=3.3.2\">box</a></code>)\n    should be drawn in the 1D case.  Defaults to true when <code>x</code> has\n    <code><a rd-options=\"\" href=\"/link/dimnames?package=graphics&amp;version=3.3.2\">dimnames</a></code> coerce-able to numbers."
			}, {
				"name": "...",
				"description": "further graphical arguments, see <code><a rd-options=\"\" href=\"/link/plot.default?package=graphics&amp;version=3.3.2\">plot.default</a></code>.\n    <code>axes = FALSE</code> is accepted."
			}]
		}, {
			"name": "plot.factor",
			"args": [{
				"name": "x, y",
				"description": "numeric or factor. <code>y</code> may be missing."
			}, {
				"name": "legend.text",
				"description": "character vector for annotation of y axis in the\n      case of a factor <code>y</code>: defaults to <code>levels(y)</code>.  This\n      sets the <code>yaxlabels</code> argument of <code><a rd-options=\"\" href=\"/link/spineplot?package=graphics&amp;version=3.3.2\">spineplot</a></code>."
			}, {
				"name": "...",
				"description": "Further arguments to <code><a rd-options=\"\" href=\"/link/barplot?package=graphics&amp;version=3.3.2\">barplot</a></code>,\n      <code><a rd-options=\"\" href=\"/link/boxplot?package=graphics&amp;version=3.3.2\">boxplot</a></code>, <code><a rd-options=\"\" href=\"/link/spineplot?package=graphics&amp;version=3.3.2\">spineplot</a></code> or\n      <code><a rd-options=\"\" href=\"/link/plot?package=graphics&amp;version=3.3.2\">plot</a></code> as appropriate.  All of these accept\n      <a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> (see <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code>) and\n      annotation arguments passed\n      to <code><a rd-options=\"\" href=\"/link/title?package=graphics&amp;version=3.3.2\">title</a></code> and <code>axes = FALSE</code>.  None accept <code>type</code>."
			}]
		}, {
			"name": "plot.window",
			"args": [{
				"name": "xlim, ylim",
				"description": "numeric vectors of length 2, giving the x and y\n    coordinates ranges."
			}, {
				"name": "log",
				"description": "character; indicating which axes should be in log scale."
			}, {
				"name": "asp",
				"description": "numeric, giving the <b>asp</b>ect ratio y/x,\n    see &#x2018;Details&#x2019;."
			}, {
				"name": "...",
				"description": "further <a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> as in <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code>.\n    The relevant ones are <code>xaxs</code>, <code>yaxs</code> and <code>lab</code>."
			}]
		}, {
			"name": "plot.design",
			"args": [{
				"name": "x",
				"description": "either a data frame containing the design factors and\n    optionally the response, or a <code><a rd-options=\"\" href=\"/link/formula?package=graphics&amp;version=3.3.2\">formula</a></code> or\n    <code><a rd-options=\"\" href=\"/link/terms?package=graphics&amp;version=3.3.2\">terms</a></code> object."
			}, {
				"name": "y",
				"description": "the response, if not given in x."
			}, {
				"name": "fun",
				"description": "a function (or name of one) to be applied to each\n    subset.  It must return one number for a numeric (vector) input."
			}, {
				"name": "data",
				"description": "data frame containing the variables referenced by <code>x</code>\n    when that is formula-like."
			}, {
				"name": "...",
				"description": "<a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> such as <code>col</code>,\n    see <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code>."
			}, {
				"name": "ylim",
				"description": "range of y values, as in <code><a rd-options=\"\" href=\"/link/plot.default?package=graphics&amp;version=3.3.2\">plot.default</a></code>."
			}, {
				"name": "xlab",
				"description": "x axis label, see <code><a rd-options=\"\" href=\"/link/title?package=graphics&amp;version=3.3.2\">title</a></code>."
			}, {
				"name": "ylab",
				"description": "y axis label with a &#x2018;smart&#x2019; default."
			}, {
				"name": "main",
				"description": "main title, see <code><a rd-options=\"\" href=\"/link/title?package=graphics&amp;version=3.3.2\">title</a></code>."
			}, {
				"name": "ask",
				"description": "logical indicating if the user should be asked before a new\n    page is started -- in the case of multiple y&apos;s."
			}, {
				"name": "xaxt",
				"description": "character giving the type of x axis."
			}, {
				"name": "axes",
				"description": "logical indicating if axes should be drawn."
			}, {
				"name": "xtick",
				"description": "logical indicating if ticks (one per factor) should\n    be drawn on the x axis."
			}]
		}, {
			"name": "plot",
			"args": [{
				"name": "x",
				"description": "the coordinates of points in the plot. Alternatively, a\n      single plotting structure, function or <em>any <span style=\"R\">R</span> object with a\n        <code>plot</code> method</em> can be provided."
			}, {
				"name": "y",
				"description": "the y coordinates of points in the plot, <em>optional</em>\n    if <code>x</code> is an appropriate structure."
			}, {
				"name": "...",
				"description": "Arguments to be passed to methods, such as\n    <a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> (see <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code>).\n    Many methods will accept the following arguments:\n    <dl>\n        \n        \n        \n        \n        \n        \n    </dl>"
			}]
		}, {
			"name": "plot.default",
			"args": [{
				"name": "x, y",
				"description": "the <code>x</code> and <code>y</code> arguments provide the x and y\n    coordinates for the plot.  Any reasonable way of defining the\n    coordinates is acceptable.  See the function <code><a rd-options=\"\" href=\"/link/xy.coords?package=graphics&amp;version=3.3.2\">xy.coords</a></code>\n    for details.  If supplied separately, they must be of the same length."
			}, {
				"name": "type",
				"description": "1-character string giving the type of plot desired.  The\n    following values are possible, for details, see <code><a rd-options=\"\" href=\"/link/plot?package=graphics&amp;version=3.3.2\">plot</a></code>:\n    <code>&quot;p&quot;</code> for points, <code>&quot;l&quot;</code> for lines,\n    <code>&quot;b&quot;</code> for both points and lines,\n    <code>&quot;c&quot;</code> for empty points joined by lines,\n    <code>&quot;o&quot;</code> for overplotted points and lines,\n    <code>&quot;s&quot;</code> and <code>&quot;S&quot;</code> for stair steps and\n    <code>&quot;h&quot;</code> for histogram-like vertical lines.  Finally,\n    <code>&quot;n&quot;</code> does not produce any points or lines."
			}, {
				"name": "xlim",
				"description": "the x limits (x1, x2) of the plot.  Note that <code>x1 &gt; x2</code>\n    is allowed and leads to a &#x2018;reversed axis&#x2019;.\n\n    The default value, <code>NULL</code>, indicates that the range of the\n    <a rd-options=\"\" href=\"/link/finite?package=graphics&amp;version=3.3.2\">finite</a> values to be plotted should be used."
			}, {
				"name": "ylim",
				"description": "the y limits of the plot."
			}, {
				"name": "log",
				"description": "a character string which contains <code>&quot;x&quot;</code> if the x axis\n    is to be logarithmic, <code>&quot;y&quot;</code> if the y axis is to be logarithmic\n    and <code>&quot;xy&quot;</code> or <code>&quot;yx&quot;</code> if both axes are to be logarithmic."
			}, {
				"name": "main",
				"description": "a main title for the plot, see also <code><a rd-options=\"\" href=\"/link/title?package=graphics&amp;version=3.3.2\">title</a></code>."
			}, {
				"name": "sub",
				"description": "a sub title for the plot."
			}, {
				"name": "xlab",
				"description": "a label for the x axis, defaults to a description of <code>x</code>."
			}, {
				"name": "ylab",
				"description": "a label for the y axis, defaults to a description of <code>y</code>."
			}, {
				"name": "ann",
				"description": "a logical value indicating whether the default annotation\n    (title and x and y axis labels) should appear on the plot."
			}, {
				"name": "axes",
				"description": "a logical value indicating whether both axes should be drawn on\n    the plot.  Use <a rd-options=\"\" href=\"/link/graphical%20parameter?package=graphics&amp;version=3.3.2\">graphical parameter</a> <code>&quot;xaxt&quot;</code> or <code>&quot;yaxt&quot;</code>\n    to suppress just one of the axes."
			}, {
				"name": "frame.plot",
				"description": "a logical indicating whether a box should be drawn\n    around the plot."
			}, {
				"name": "panel.first",
				"description": "an &#x2018;expression&#x2019; to be evaluated after the\n    plot axes are set up but before any plotting takes place.  This can\n    be useful for drawing background grids or scatterplot smooths.  Note\n    that this works by lazy evaluation: passing this argument from other\n    <code>plot</code> methods may well not work since it may be evaluated too\n    early."
			}, {
				"name": "panel.last",
				"description": "an expression to be evaluated after plotting has\n    taken place but before the axes, title and box are added.  See the\n    comments about <code>panel.first</code>."
			}, {
				"name": "asp",
				"description": "the $y/x$ aspect ratio, see <code><a rd-options=\"\" href=\"/link/plot.window?package=graphics&amp;version=3.3.2\">plot.window</a></code>."
			}, {
				"name": "...",
				"description": "other <a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> (see <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code> and\n    section &#x2018;Details&#x2019; below)."
			}]
		}, {
			"name": "plot.xy",
			"args": [{
				"name": "xy",
				"description": "A four-element list as results from\n    <code><a rd-options=\"\" href=\"/link/xy.coords?package=graphics&amp;version=3.3.2\">xy.coords</a></code>."
			}, {
				"name": "type",
				"description": "1 character code: see <code><a rd-options=\"\" href=\"/link/plot.default?package=graphics&amp;version=3.3.2\">plot.default</a></code>.\n    <code>NULL</code> is accepted as a synonym for <code>&quot;p&quot;</code>."
			}, {
				"name": "pch",
				"description": "character or integer code for kind of points, see\n    <code><a rd-options=\"\" href=\"/link/points.default?package=graphics&amp;version=3.3.2\">points.default</a></code>."
			}, {
				"name": "lty",
				"description": "line type code, see <code><a rd-options=\"\" href=\"/link/lines?package=graphics&amp;version=3.3.2\">lines</a></code>."
			}, {
				"name": "col",
				"description": "color code or name, see <code><a rd-options=\"\" href=\"/link/colors?package=graphics&amp;version=3.3.2\">colors</a></code>,\n    <code><a rd-options=\"\" href=\"/link/palette?package=graphics&amp;version=3.3.2\">palette</a></code>.  Here <code>NULL</code> means colour 0."
			}, {
				"name": "bg",
				"description": "background (fill) color for the open plot symbols 21:25:\n    see <code><a rd-options=\"\" href=\"/link/points.default?package=graphics&amp;version=3.3.2\">points.default</a></code>."
			}, {
				"name": "cex",
				"description": "character expansion."
			}, {
				"name": "lwd",
				"description": "line width, also used for (non-filled) plot symbols, see\n    <code><a rd-options=\"\" href=\"/link/lines?package=graphics&amp;version=3.3.2\">lines</a></code> and <code><a rd-options=\"\" href=\"/link/points?package=graphics&amp;version=3.3.2\">points</a></code>."
			}, {
				"name": "...",
				"description": "further <a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> such as <code>xpd</code>,\n    <code>lend</code>, <code>ljoin</code> and <code>lmitre</code>."
			}]
		}, {
			"name": "plot.data.frame",
			"args": [{
				"name": "x",
				"description": "object of class <code>data.frame</code>."
			}, {
				"name": "...",
				"description": "further arguments to <code><a rd-options=\"\" href=\"/link/stripchart?package=graphics&amp;version=3.3.2\">stripchart</a></code>,\n    <code><a rd-options=\"\" href=\"/link/plot.default?package=graphics&amp;version=3.3.2\">plot.default</a></code> or <code><a rd-options=\"\" href=\"/link/pairs?package=graphics&amp;version=3.3.2\">pairs</a></code>."
			}]
		}, {
			"name": "plot.raster",
			"args": [{
				"name": "x, y",
				"description": "raster. <code>y</code> will be ignored."
			}, {
				"name": "xlim, ylim",
				"description": "Limits on the plot region (default from dimensions\n    of the raster."
			}, {
				"name": "xaxs, yaxs",
				"description": "Axis interval calculation style (default means that\n    raster fills plot region."
			}, {
				"name": "asp",
				"description": "Aspect ratio (default retains aspect ratio of the raster)."
			}, {
				"name": "add",
				"description": "Logical indicating whether to simply add raster to an\n    existing plot."
			}, {
				"name": "...",
				"description": "Further arguments to the <code><a rd-options=\"\" href=\"/link/rasterImage?package=graphics&amp;version=3.3.2\">rasterImage</a></code> function."
			}]
		}, {
			"name": "plot.formula",
			"args": [{
				"name": "formula",
				"description": "a <code><a rd-options=\"\" href=\"/link/formula?package=graphics&amp;version=3.3.2\">formula</a></code>, such as <code>y ~ x</code>."
			}, {
				"name": "data",
				"description": "a data.frame (or list) from which the variables in\n    <code>formula</code> should be taken.  A matrix is converted to a data frame."
			}, {
				"name": "...",
				"description": "Arguments to be passed to or from other methods.\n    <code>horizontal = TRUE</code> is also accepted."
			}, {
				"name": "subset",
				"description": "an optional vector specifying a subset of observations\n    to be used in the fitting process."
			}, {
				"name": "ylab",
				"description": "the y label of the plot(s)."
			}, {
				"name": "ask",
				"description": "logical, see <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code>."
			}]
		}, {
			"name": "polygon",
			"args": [{
				"name": "x, y",
				"description": "vectors containing the coordinates of the vertices\n    of the polygon."
			}, {
				"name": "density",
				"description": "the density of shading lines, in lines per inch.  The\n    default value of <code>NULL</code> means that no shading lines are drawn.\n    A zero value of <code>density</code> means no shading nor filling whereas\n    negative values and <code>NA</code> suppress shading (and so allow\n    color filling)."
			}, {
				"name": "angle",
				"description": "the slope of shading lines, given as an angle\n     in degrees (counter-clockwise)."
			}, {
				"name": "col",
				"description": "the color for filling the polygon. The default,\n     <code>NA</code>, is to leave polygons unfilled, unless <code>density</code> is\n     specified.  (For back-compatibility, <code>NULL</code> is equivalent to\n     <code>NA</code>.)  If <code>density</code> is specified with a positive value\n     this gives the color of the shading lines."
			}, {
				"name": "border",
				"description": "the color to draw the border.  The default, <code>NULL</code>,\n    means to use <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a>(&quot;fg&quot;)</code>.  Use <code>border = NA</code> to\n    omit borders.\n\n    For compatibility with S, <code>border</code> can also be logical, in\n    which case <code>FALSE</code> is equivalent to <code>NA</code> (borders omitted)\n    and <code>TRUE</code> is equivalent to <code>NULL</code> (use the foreground colour),"
			}, {
				"name": "lty",
				"description": "the line type to be used, as in <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code>."
			}, {
				"name": "...",
				"description": "graphical parameters such as <code>xpd</code>, <code>lend</code>,\n    <code>ljoin</code> and <code>lmitre</code> can be given as arguments."
			}, {
				"name": "fillOddEven",
				"description": "logical controlling the polygon shading mode:  see\n      below for details.  Default <code>FALSE</code>."
			}]
		}, {
			"name": "polypath",
			"args": [{
				"name": "x, y",
				"description": "vectors containing the coordinates of the vertices\n    of the path."
			}, {
				"name": "col",
				"description": "the color for filling the path. The default,\n     <code>NA</code>, is to leave paths unfilled, unless <code>density</code> is\n     specified.  (For back-compatibility, <code>NULL</code> is equivalent to\n     <code>NA</code>.)  If <code>density</code> is specified with a positive value\n     this gives the color of the shading lines."
			}, {
				"name": "border",
				"description": "the color to draw the border.  The default, <code>NULL</code>,\n    means to use <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a>(&quot;fg&quot;)</code>.  Use <code>border = NA</code> to\n    omit borders.\n\n    For compatibility with S, <code>border</code> can also be logical, in\n    which case <code>FALSE</code> is equivalent to <code>NA</code> (borders omitted)\n    and <code>TRUE</code> is equivalent to <code>NULL</code> (use the foreground colour),"
			}, {
				"name": "lty",
				"description": "the line type to be used, as in <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code>."
			}, {
				"name": "rule",
				"description": "character value specifying the path fill mode: either\n    <code>&quot;winding&quot;</code> or <code>&quot;evenodd&quot;</code>."
			}, {
				"name": "...",
				"description": "<a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> such as <code>xpd</code>, <code>lend</code>,\n    <code>ljoin</code> and <code>lmitre</code> can be given as arguments."
			}]
		}, {
			"name": "rug",
			"args": [{
				"name": "x",
				"description": "A numeric vector"
			}, {
				"name": "ticksize",
				"description": "The length of the ticks making up the &#x2018;rug&#x2019;.\n   Positive lengths give inwards ticks."
			}, {
				"name": "side",
				"description": "On which side of the plot box the rug will be\n   plotted. Normally 1 (bottom) or 3 (top)."
			}, {
				"name": "lwd",
				"description": "The line width of the ticks.  Some devices will round the\n   default width up to <code>1</code>."
			}, {
				"name": "col",
				"description": "The colour the ticks are plotted in."
			}, {
				"name": "quiet",
				"description": "logical indicating if there should be a warning about\n   clipped values."
			}, {
				"name": "...",
				"description": "further arguments, passed to <code><a rd-options=\"\" href=\"/link/axis?package=graphics&amp;version=3.3.2\">axis</a></code>, such\n   as <code>line</code> or <code>pos</code> for specifying the location of the rug."
			}]
		}, {
			"name": "screen",
			"args": [{
				"name": "figs",
				"description": "A two-element vector describing the number of rows and the\n    number of columns in a screen matrix <em>or</em> a matrix with 4 columns.\n    If a matrix, then each row describes a screen with values for the left,\n    right, bottom, and top of the screen (in that order) in NDC units,\n    that is 0 at the lower left corner of the device surface, and 1 at\n    the upper right corner."
			}, {
				"name": "screen",
				"description": "A number giving the screen to be split.  It defaults to\n    the current screen if there is one, otherwise the whole device region."
			}, {
				"name": "erase",
				"description": "logical: should be selected screen be cleared?"
			}, {
				"name": "n",
				"description": "A number indicating which screen to prepare for drawing\n    (<code>screen</code>), erase (<code>erase.screen</code>), or close\n    (<code>close.screen</code>).  (<code>close.screen</code> will accept a vector of\n    screen numbers.)"
			}, {
				"name": "new",
				"description": "A logical value indicating whether the screen should be\n    erased as part of the preparation for drawing in the screen."
			}, {
				"name": "all.screens",
				"description": "A logical value indicating whether all of the\n    screens should be closed."
			}]
		}, {
			"name": "rasterImage",
			"args": [{
				"name": "image",
				"description": "a <code>raster</code> object, or an object that can be\n    coerced to one by <code><a rd-options=\"\" href=\"/link/as.raster?package=graphics&amp;version=3.3.2\">as.raster</a></code>."
			}, {
				"name": "xleft",
				"description": "a vector (or scalar) of left x positions."
			}, {
				"name": "ybottom",
				"description": "a vector (or scalar) of bottom y positions."
			}, {
				"name": "xright",
				"description": "a vector (or scalar) of right x positions."
			}, {
				"name": "ytop",
				"description": "a vector (or scalar) of top y positions."
			}, {
				"name": "angle",
				"description": "angle of rotation (in degrees, anti-clockwise\n    from positive x-axis, about the bottom-left corner)."
			}, {
				"name": "interpolate",
				"description": "a logical vector (or scalar) indicating\n    whether to apply linear interpolation to the image when drawing."
			}, {
				"name": "...",
				"description": "<a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a>."
			}]
		}, {
			"name": "segments",
			"args": [{
				"name": "x0, y0",
				"description": "coordinates of points <b>from</b> which to draw."
			}, {
				"name": "x1, y1",
				"description": "coordinates of points <b>to</b> which to draw.  At least\n    one must be supplied."
			}, {
				"name": "col, lty, lwd",
				"description": "<a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> as in\n    <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code>, possibly vectors.  <code>NA</code> values in <code>col</code>\n    cause the segment to be omitted."
			}, {
				"name": "...",
				"description": "further <a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> (from <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code>),\n    such as <code>xpd</code> and the line characteristics <code>lend</code>, <code>ljoin</code>\n    and <code>lmitre</code>."
			}]
		}, {
			"name": "rect",
			"args": [{
				"name": "xleft",
				"description": "a vector (or scalar) of left x positions."
			}, {
				"name": "ybottom",
				"description": "a vector (or scalar) of bottom y positions."
			}, {
				"name": "xright",
				"description": "a vector (or scalar) of right x positions."
			}, {
				"name": "ytop",
				"description": "a vector (or scalar) of top y positions."
			}, {
				"name": "density",
				"description": "the density of shading lines, in lines per inch.\n    The default value of <code>NULL</code> means that no shading lines are drawn.\n    A zero value of <code>density</code> means no shading lines whereas\n    negative values (and <code>NA</code>) suppress shading (and so allow\n    color filling)."
			}, {
				"name": "angle",
				"description": "angle (in degrees) of the shading lines."
			}, {
				"name": "col",
				"description": "color(s) to fill or shade the rectangle(s) with.\n    The default <code>NA</code> (or also <code>NULL</code>) means do not fill,\n    i.e., draw transparent rectangles, unless <code>density</code> is specified."
			}, {
				"name": "border",
				"description": "color for rectangle border(s).  The default means\n    <code>par(&quot;fg&quot;)</code>.  Use <code>border = NA</code> to omit borders.\n    If there are shading\n    lines, <code>border = TRUE</code> means use the same colour for\n    the border as for the shading lines."
			}, {
				"name": "lty",
				"description": "line type for borders and shading; defaults to <code>&quot;solid&quot;</code>."
			}, {
				"name": "lwd",
				"description": "line width for borders and shading.  Note that the use of\n    <code>lwd = 0</code> (as in the examples) is device-dependent."
			}, {
				"name": "...",
				"description": "<a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> such as <code>xpd</code>, <code>lend</code>,\n    <code>ljoin</code> and <code>lmitre</code> can be given as\n    arguments."
			}]
		}, {
			"name": "points",
			"args": [{
				"name": "x, y",
				"description": "coordinate vectors of points to plot."
			}, {
				"name": "type",
				"description": "character indicating the type of plotting; actually any of\n    the <code>type</code>s as in <code><a rd-options=\"\" href=\"/link/plot.default?package=graphics&amp;version=3.3.2\">plot.default</a></code>."
			}, {
				"name": "...",
				"description": "Further <a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> may also be supplied as\n    arguments.  See &#x2018;Details&#x2019;."
			}]
		}, {
			"name": "plot.histogram",
			"args": [{
				"name": "x",
				"description": "a <code>histogram</code> object, or a list with components\n    <code>density</code>, <code>mid</code>, etc, see <code><a rd-options=\"\" href=\"/link/hist?package=graphics&amp;version=3.3.2\">hist</a></code> for\n    information about the components of <code>x</code>."
			}, {
				"name": "freq",
				"description": "logical; if <code>TRUE</code>, the\n    histogram graphic is to present a representation of frequencies, i.e,\n    <code>x$counts</code>; if <code>FALSE</code>, <em>relative</em> frequencies\n    (probabilities), i.e., <code>x$density</code>, are plotted.  The\n    default is true for equidistant <code>breaks</code> and false otherwise."
			}, {
				"name": "col",
				"description": "a colour to be used to fill the bars.  The default of\n    <code>NULL</code> yields unfilled bars."
			}, {
				"name": "border",
				"description": "the color of the border around the bars."
			}, {
				"name": "angle, density",
				"description": "select shading of bars by lines:\n    see <code><a rd-options=\"\" href=\"/link/rect?package=graphics&amp;version=3.3.2\">rect</a></code>."
			}, {
				"name": "lty",
				"description": "the line type used for the bars, see also <code><a rd-options=\"\" href=\"/link/lines?package=graphics&amp;version=3.3.2\">lines</a></code>."
			}, {
				"name": "main, sub, xlab, ylab",
				"description": "these arguments to <code>title</code> have useful\n    defaults here."
			}, {
				"name": "xlim, ylim",
				"description": "the range of x and y values with sensible defaults."
			}, {
				"name": "axes",
				"description": "logical, indicating if axes should be drawn."
			}, {
				"name": "labels",
				"description": "logical or character.  Additionally draw labels on top of bars,\n    if not <code>FALSE</code>; if <code>TRUE</code>, draw the counts or rounded\n    densities; if <code>labels</code> is a <code>character</code>, draw itself."
			}, {
				"name": "add",
				"description": "logical.  If <code>TRUE</code>, only the bars are added to the\n    current plot.  This is what <code>lines.histogram(*)</code> does."
			}, {
				"name": "ann",
				"description": "logical.  Should annotations (titles and axis titles) be plotted?"
			}, {
				"name": "...",
				"description": "further <a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> to\n    <code>title</code> and <code>axis</code>."
			}]
		}, {
			"name": "smoothScatter",
			"args": [{
				"name": "x, y",
				"description": "the <code>x</code> and <code>y</code> arguments provide the x and y\n    coordinates for the plot.  Any reasonable way of defining the\n    coordinates is acceptable.  See the function <code><a rd-options=\"\" href=\"/link/xy.coords?package=graphics&amp;version=3.3.2\">xy.coords</a></code>\n    for details.  If supplied separately, they must be of the same length."
			}, {
				"name": "nbin",
				"description": "numeric vector of length one (for both directions) or two\n    (for x and y separately) specifying the number of equally spaced\n    grid points for the density estimation; directly used as\n    <code>gridsize</code> in <code><a rd-options=\"KernSmooth\" href=\"/link/bkde2D?package=graphics&amp;version=3.3.2&amp;to=KernSmooth\">bkde2D</a>()</code>."
			}, {
				"name": "bandwidth",
				"description": "numeric vector (length 1 or 2) of smoothing bandwidth(s).\n    If missing, a more or less useful default is used. <code>bandwidth</code>\n    is subsequently passed to function\n    <code><a rd-options=\"KernSmooth\" href=\"/link/bkde2D?package=graphics&amp;version=3.3.2&amp;to=KernSmooth\">bkde2D</a></code>."
			}, {
				"name": "colramp",
				"description": "function accepting an integer <code>n</code> as an argument and\n    returning <code>n</code> colors."
			}, {
				"name": "nrpoints",
				"description": "number of points to be superimposed on the density\n    image.  The first <code>nrpoints</code> points from those areas of lowest\n    regional densities will be plotted.  Adding points to the plot\n    allows for the identification of outliers.  If all points are to be\n    plotted, choose <code>nrpoints = Inf</code>."
			}, {
				"name": "ret.selection",
				"description": "<code><a rd-options=\"\" href=\"/link/logical?package=graphics&amp;version=3.3.2\">logical</a></code> indicating to return the\n    ordered indices of &#x201C;low density&#x201D; points if <code>nrpoints &gt; 0</code>."
			}, {
				"name": "pch, cex, col",
				"description": "arguments passed to <code><a rd-options=\"\" href=\"/link/points?package=graphics&amp;version=3.3.2\">points</a></code>,\n    when <code>nrpoints &gt; 0</code>: point symbol, character expansion factor\n    and color, see also <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code>."
			}, {
				"name": "transformation",
				"description": "function mapping the density scale to the color scale."
			}, {
				"name": "postPlotHook",
				"description": "either <code>NULL</code> or a function which will be\n    called (with no arguments) after <code><a rd-options=\"\" href=\"/link/image?package=graphics&amp;version=3.3.2\">image</a></code>."
			}, {
				"name": "xlab, ylab",
				"description": "character strings to be used as axis labels, passed\n    to <code><a rd-options=\"\" href=\"/link/image?package=graphics&amp;version=3.3.2\">image</a></code>."
			}, {
				"name": "xlim, ylim",
				"description": "numeric vectors of length 2 specifying axis limits."
			}, {
				"name": "xaxs, yaxs, ...",
				"description": "further arguments passed to <code><a rd-options=\"\" href=\"/link/image?package=graphics&amp;version=3.3.2\">image</a></code>,\n    e.g., <code>add=TRUE</code> or <code>useRaster=TRUE</code>."
			}]
		}, {
			"name": "stem",
			"args": [{
				"name": "x",
				"description": "a numeric vector."
			}, {
				"name": "scale",
				"description": "This controls the plot length."
			}, {
				"name": "width",
				"description": "The desired width of plot."
			}, {
				"name": "atom",
				"description": "a tolerance."
			}]
		}, {
			"name": "units",
			"args": [{
				"name": "x, y",
				"description": "numeric vector"
			}, {
				"name": "xy",
				"description": "numeric of length 1 or 2."
			}, {
				"name": "warn.log",
				"description": "logical; if <code>TRUE</code>, a warning is printed in case\n    of active log scale."
			}]
		}, {
			"name": "strwidth",
			"args": [{
				"name": "s",
				"description": "a character or <a rd-options=\"\" href=\"/link/expression?package=graphics&amp;version=3.3.2\">expression</a> vector whose dimensions\n    are to be determined.  Other objects are coerced by\n    <code><a rd-options=\"\" href=\"/link/as.graphicsAnnot?package=graphics&amp;version=3.3.2\">as.graphicsAnnot</a></code>."
			}, {
				"name": "units",
				"description": "character indicating in which units <code>s</code> is measured;\n    should be one of <code>&quot;user&quot;</code>, <code>&quot;inches&quot;</code>, <code>&quot;figure&quot;</code>;\n    partial matching is performed."
			}, {
				"name": "cex",
				"description": "numeric <b>c</b>haracter <b>ex</b>pansion factor; multiplied\n    by <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a>(&quot;cex&quot;)</code> yields the final character size; the\n    default <code>NULL</code> is equivalent to <code>1</code>."
			}, {
				"name": "font, vfont, ...",
				"description": "additional information about the font,\n    possibly including the graphics parameter <code>&quot;family&quot;</code>:\n    see <code><a rd-options=\"\" href=\"/link/text?package=graphics&amp;version=3.3.2\">text</a></code>."
			}]
		}, {
			"name": "title",
			"args": [{
				"name": "main",
				"description": "The main title (on top) using font, size (character\n    expansion) and color <code>par(c(&quot;font.main&quot;, &quot;cex.main&quot;, &quot;col.main&quot;))</code>."
			}, {
				"name": "sub",
				"description": "Sub-title (at bottom) using font, size and color \n    <code>par(c(&quot;font.sub&quot;, &quot;cex.sub&quot;, &quot;col.sub&quot;))</code>."
			}, {
				"name": "xlab",
				"description": "X axis label using font, size and color \n    <code>par(c(&quot;font.lab&quot;, &quot;cex.lab&quot;, &quot;col.lab&quot;))</code>."
			}, {
				"name": "ylab",
				"description": "Y axis label, same font attributes as <code>xlab</code>."
			}, {
				"name": "line",
				"description": "specifying a value for <code>line</code> overrides the\n    default placement of labels, and places them this many lines\n    outwards from the plot edge."
			}, {
				"name": "outer",
				"description": "a logical value.  If <code>TRUE</code>, the titles are\n    placed in the outer margins of the plot."
			}, {
				"name": "...",
				"description": "further <a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> from <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code>.  Use\n    e.g., <code>col.main</code> or <code>cex.sub</code> instead of just <code>col</code>\n    or <code>cex</code>.  <code>adj</code> controls the justification of the titles.\n    <code>xpd</code> can be used to set the clipping region:\n    this defaults to the figure region unless <code>outer = TRUE</code>,\n    otherwise the device region and can only be increased.  <code>mgp</code>\n    controls the default placing of the axis titles."
			}]
		}, {
			"name": "stripchart",
			"args": [{
				"name": "x",
				"description": "the data from which the plots are to be produced.  In the\n    default method the data can be specified as a single numeric\n    vector, or as list of numeric vectors, each corresponding to\n    a component plot.  In the <code>formula</code> method, a symbolic\n    specification of the form <code>y ~ g</code> can be given,\n    indicating the observations in the vector <code>y</code> are to be\n    grouped according to the levels of the factor\n    <code>g</code>.  <code>NA</code>s are allowed in the data."
			}, {
				"name": "data",
				"description": "a data.frame (or list) from which the variables in\n    <code>x</code> should be taken."
			}, {
				"name": "subset",
				"description": "an optional vector specifying a subset of observations\n    to be used for plotting."
			}, {
				"name": "na.action",
				"description": "a function which indicates what should happen\n    when the data contain <code>NA</code>s.  The default is to ignore missing\n    values in either the response or the group."
			}, {
				"name": "...",
				"description": "additional parameters passed to the default method, or by\n    it to <code><a rd-options=\"\" href=\"/link/plot.window?package=graphics&amp;version=3.3.2\">plot.window</a></code>, <code><a rd-options=\"\" href=\"/link/points?package=graphics&amp;version=3.3.2\">points</a></code>,\n    <code><a rd-options=\"\" href=\"/link/axis?package=graphics&amp;version=3.3.2\">axis</a></code> and <code><a rd-options=\"\" href=\"/link/title?package=graphics&amp;version=3.3.2\">title</a></code> to control the appearance\n    of the plot."
			}, {
				"name": "method",
				"description": "the method to be used to separate coincident points.\n    The default method <code>&quot;overplot&quot;</code> causes such points to be\n    overplotted, but it is also possible to specify <code>&quot;jitter&quot;</code> to\n    jitter the points, or <code>&quot;stack&quot;</code> have coincident points\n    stacked.  The last method only makes sense for very granular data."
			}, {
				"name": "jitter",
				"description": "when <code>method = &quot;jitter&quot;</code> is used, <code>jitter</code>\n    gives the amount of jittering applied."
			}, {
				"name": "offset",
				"description": "when stacking is used, points are stacked this many\n    line-heights (symbol widths) apart."
			}, {
				"name": "vertical",
				"description": "when vertical is <code>TRUE</code> the plots are drawn\n    vertically rather than the default horizontal."
			}, {
				"name": "group.names",
				"description": "group labels which will be printed alongside\n    (or underneath) each plot."
			}, {
				"name": "add",
				"description": "logical, if true <em>add</em> the chart to the current plot."
			}, {
				"name": "at",
				"description": "numeric vector giving the locations where the charts should\n    be drawn, particularly when <code>add = TRUE</code>;\n    defaults to <code>1:n</code> where <code>n</code> is the number of boxes."
			}, {
				"name": "ylab, xlab",
				"description": "labels: see <code><a rd-options=\"\" href=\"/link/title?package=graphics&amp;version=3.3.2\">title</a></code>."
			}, {
				"name": "dlab, glab",
				"description": "alternate way to specify axis labels: see &#x2018;Details&#x2019;."
			}, {
				"name": "xlim, ylim",
				"description": "plot limits: see <code><a rd-options=\"\" href=\"/link/plot.window?package=graphics&amp;version=3.3.2\">plot.window</a></code>."
			}, {
				"name": "log",
				"description": "on which axes to use a log scale:  see\n    <code><a rd-options=\"\" href=\"/link/plot.default?package=graphics&amp;version=3.3.2\">plot.default</a></code>"
			}, {
				"name": "pch, col, cex",
				"description": "Graphical parameters: see <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code>."
			}, {
				"name": "axes, frame.plot",
				"description": "Axis control:  see <code><a rd-options=\"\" href=\"/link/plot.default?package=graphics&amp;version=3.3.2\">plot.default</a></code>."
			}]
		}, {
			"name": "symbols",
			"args": [{
				"name": "x, y",
				"description": "the x and y co-ordinates for the centres of the symbols.\n    They can be specified in any way which is accepted by\n    <code><a rd-options=\"\" href=\"/link/xy.coords?package=graphics&amp;version=3.3.2\">xy.coords</a></code>."
			}, {
				"name": "circles",
				"description": "a vector giving the radii of the circles."
			}, {
				"name": "squares",
				"description": "a vector giving the length of the sides of the squares."
			}, {
				"name": "rectangles",
				"description": "a matrix with two columns.  The first column gives\n    widths and the second the heights of rectangles."
			}, {
				"name": "stars",
				"description": "a matrix with three or more columns giving the lengths\n    of the rays from the center of the stars.  <code>NA</code> values\n    are replaced by zeroes."
			}, {
				"name": "thermometers",
				"description": "a matrix with three or four columns.  The first\n    two columns give the width and height of the thermometer symbols. If\n    there are three columns, the third is taken as a proportion: the\n    thermometers are filled (using colour <code>fg</code>) from their base to\n    this proportion of their height.  If there are four columns, the\n    third and fourth columns are taken as proportions and the\n    thermometers are filled between these two proportions of their\n    heights.  The part of the box not filled in <code>fg</code> will be filled\n    in the background colour (default transparent) given by <code>bg</code>."
			}, {
				"name": "boxplots",
				"description": "a matrix with five columns.  The first two columns\n    give the width and height of the boxes, the next two columns\n    give the lengths of the lower and upper whiskers and the fifth\n    the proportion (with a warning if not in [0,1]) of the way up\n    the box that the median line is drawn."
			}, {
				"name": "inches",
				"description": "<code>TRUE</code>, <code>FALSE</code> or a positive number.\n    See &#x2018;Details&#x2019;."
			}, {
				"name": "add",
				"description": "if <code>add</code> is <code>TRUE</code>, the symbols are added to\n    an existing plot, otherwise a new plot is created."
			}, {
				"name": "fg",
				"description": "colour(s) the symbols are to be drawn in."
			}, {
				"name": "bg",
				"description": "if specified, the symbols are filled with colour(s), the\n    vector <code>bg</code> being recycled to the number of symbols.\n    The default is to leave the symbols unfilled."
			}, {
				"name": "xlab",
				"description": "the x label of the plot if <code>add</code> is not true.\n    Defaults to the <code><a rd-options=\"\" href=\"/link/deparse?package=graphics&amp;version=3.3.2\">deparse</a></code>d expression used for <code>x</code>."
			}, {
				"name": "ylab",
				"description": "the y label of the plot.  Unused if <code>add = TRUE</code>."
			}, {
				"name": "main",
				"description": "a main title for the plot.  Unused if <code>add = TRUE</code>."
			}, {
				"name": "xlim",
				"description": "numeric vector of length 2 giving the x limits for the\n    plot.  Unused if <code>add = TRUE</code>."
			}, {
				"name": "ylim",
				"description": "numeric vector of length 2 giving the y limits for the\n    plot.  Unused if <code>add = TRUE</code>."
			}, {
				"name": "...",
				"description": "graphics parameters can also be passed to this function,\n    as can the plot aspect ratio <code>asp</code> (see <code><a rd-options=\"\" href=\"/link/plot.window?package=graphics&amp;version=3.3.2\">plot.window</a></code>)."
			}]
		}, {
			"name": "text",
			"args": [{
				"name": "x, y",
				"description": "numeric vectors of coordinates where the text\n    <code>labels</code> should be written.  If the length of <code>x</code> and\n    <code>y</code> differs, the shorter one is recycled."
			}, {
				"name": "labels",
				"description": "a character vector or <a rd-options=\"\" href=\"/link/expression?package=graphics&amp;version=3.3.2\">expression</a> specifying\n    the <em>text</em> to be written.  An attempt is made to coerce other\n    language objects (names and calls) to expressions, and vectors and\n    other classed objects to character vectors by <code><a rd-options=\"\" href=\"/link/as.character?package=graphics&amp;version=3.3.2\">as.character</a></code>.\n    If <code>labels</code> is longer than <code>x</code> and\n    <code>y</code>, the coordinates are recycled to the length of <code>labels</code>."
			}, {
				"name": "adj",
				"description": "one or two values in $[0, 1]$ which specify the x\n    (and optionally y) adjustment of the labels.  On most devices values\n    outside that interval will also work."
			}, {
				"name": "pos",
				"description": "a position specifier for the text.  If specified this\n    overrides any <code>adj</code> value given.  Values of <code>1</code>,\n    <code>2</code>, <code>3</code> and <code>4</code>, respectively indicate\n    positions below, to the left of, above and to the right of\n    the specified coordinates."
			}, {
				"name": "offset",
				"description": "when <code>pos</code> is specified, this value gives the\n    offset of the label from the specified coordinate in fractions\n    of a character width."
			}, {
				"name": "vfont",
				"description": "<code>NULL</code> for the current font family, or a character\n    vector of length 2 for Hershey vector fonts.  The first element of\n    the vector selects a typeface and the second element selects a\n    style.  Ignored if <code>labels</code> is an expression."
			}, {
				"name": "cex",
				"description": "numeric <b>c</b>haracter <b>ex</b>pansion factor; multiplied\n    by <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a>(&quot;cex&quot;)</code> yields the final character size.\n    <code>NULL</code> and <code>NA</code> are equivalent to <code>1.0</code>."
			}, {
				"name": "col, font",
				"description": "the color and (if <code>vfont = NULL</code>) font to be\n    used, possibly vectors.  These default to the values of the global\n    <a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> in <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a>()</code>."
			}, {
				"name": "...",
				"description": "further <a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> (from <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code>),\n    such as <code>srt</code>, <code>family</code> and <code>xpd</code>."
			}]
		}, {
			"name": "spineplot",
			"args": [{
				"name": "x",
				"description": "an object, the default method expects either a single variable\n    (interpreted to be the explanatory variable) or a 2-way table.  See\n    details."
			}, {
				"name": "y",
				"description": "a <code>&quot;factor&quot;</code> interpreted to be the dependent variable"
			}, {
				"name": "formula",
				"description": "a <code>&quot;formula&quot;</code> of type <code>y ~ x</code> with a single\n    dependent <code>&quot;factor&quot;</code> and a single explanatory variable."
			}, {
				"name": "data",
				"description": "an optional data frame."
			}, {
				"name": "breaks",
				"description": "if the explanatory variable is numeric, this controls how\n    it is discretized. <code>breaks</code> is passed to <code><a rd-options=\"\" href=\"/link/hist?package=graphics&amp;version=3.3.2\">hist</a></code> and can\n    be a list of arguments."
			}, {
				"name": "tol.ylab",
				"description": "convenience tolerance parameter for y-axis annotation.\n    If the distance between two labels drops under this threshold, they are\n    plotted equidistantly."
			}, {
				"name": "off",
				"description": "vertical offset between the bars (in per cent). It is fixed to\n    <code>0</code> for spinograms and defaults to <code>2</code> for spine plots."
			}, {
				"name": "ylevels",
				"description": "a character or numeric vector specifying in which order\n    the levels of the dependent variable should be plotted."
			}, {
				"name": "col",
				"description": "a vector of fill colors of the same length as <code>levels(y)</code>.\n    The default is to call <code><a rd-options=\"\" href=\"/link/gray.colors?package=graphics&amp;version=3.3.2\">gray.colors</a></code>."
			}, {
				"name": "main, xlab, ylab",
				"description": "character strings for annotation"
			}, {
				"name": "xaxlabels, yaxlabels",
				"description": "character vectors for annotation of x and y axis.\n    Default to <code>levels(y)</code> and <code>levels(x)</code>, respectively for the\n    spine plot. For <code>xaxlabels</code> in the spinogram, the breaks are\n    used."
			}, {
				"name": "xlim, ylim",
				"description": "the range of x and y values with sensible defaults."
			}, {
				"name": "axes",
				"description": "logical.  If <code>FALSE</code> all axes (including those giving\n    level names) are suppressed."
			}, {
				"name": "...",
				"description": "additional arguments passed to <code><a rd-options=\"\" href=\"/link/rect?package=graphics&amp;version=3.3.2\">rect</a></code>."
			}, {
				"name": "subset",
				"description": "an optional vector specifying a subset of observations\n    to be used for plotting."
			}]
		}, {
			"name": "sunflowerplot",
			"args": [{
				"name": "x",
				"description": "numeric vector of <code>x</code>-coordinates of length <code>n</code>,\n    say, or another valid plotting structure, as for\n    <code><a rd-options=\"\" href=\"/link/plot.default?package=graphics&amp;version=3.3.2\">plot.default</a></code>, see also <code><a rd-options=\"\" href=\"/link/xy.coords?package=graphics&amp;version=3.3.2\">xy.coords</a></code>."
			}, {
				"name": "y",
				"description": "numeric vector of <code>y</code>-coordinates of length <code>n</code>."
			}, {
				"name": "number",
				"description": "integer vector of length <code>n</code>. <code>number[i]</code> = number\n    of replicates for <code>(x[i], y[i])</code>, may be 0.\n    Default (<code>missing(number)</code>): compute the exact multiplicity of\n    the points <code>x[], y[]</code>, via\n    <code><a rd-options=\"\" href=\"/link/xyTable?package=graphics&amp;version=3.3.2\">xyTable</a>()</code>."
			}, {
				"name": "log",
				"description": "character indicating log coordinate scale, see\n    <code><a rd-options=\"\" href=\"/link/plot.default?package=graphics&amp;version=3.3.2\">plot.default</a></code>."
			}, {
				"name": "digits",
				"description": "when <code>number</code> is computed (i.e., not specified),\n    <code>x</code> and <code>y</code> are rounded to <code>digits</code> significant\n    digits before multiplicities are computed."
			}, {
				"name": "xlab, ylab",
				"description": "character label for x-, or y-axis, respectively."
			}, {
				"name": "xlim, ylim",
				"description": "<code>numeric(2)</code> limiting the extents of the x-,\n    or y-axis."
			}, {
				"name": "add",
				"description": "logical; should the plot be added on a previous one ?\n    Default is <code>FALSE</code>."
			}, {
				"name": "rotate",
				"description": "logical; if <code>TRUE</code>, randomly rotate the\n    sunflowers (preventing artefacts)."
			}, {
				"name": "pch",
				"description": "plotting character to be used for points\n    (<code>number[i]==1</code>) and center of sunflowers."
			}, {
				"name": "cex",
				"description": "numeric; character size expansion of center points\n    (s. <code>pch</code>)."
			}, {
				"name": "cex.fact",
				"description": "numeric <em>shrinking</em> factor to be used for the\n    center points <em>when there are flower leaves</em>,\n    i.e., <code>cex / cex.fact</code> is used for these."
			}, {
				"name": "col, bg",
				"description": "colors for the plot symbols, passed to\n    <code><a rd-options=\"\" href=\"/link/plot.default?package=graphics&amp;version=3.3.2\">plot.default</a></code>."
			}, {
				"name": "size",
				"description": "of sunflower leaves in inches, 1[in] := 2.54[cm].\n    Default: 1/8\\&quot;, approximately 3.2mm."
			}, {
				"name": "seg.col",
				"description": "color to be used for the <b>seg</b>ments which make the\n    sunflowers leaves, see <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a>(col=)</code>;\n    <code>col = &quot;gold&quot;</code> reminds of real sunflowers."
			}, {
				"name": "seg.lwd",
				"description": "numeric; the line width for the leaves&apos; segments."
			}, {
				"name": "...",
				"description": "further arguments to <code><a rd-options=\"\" href=\"/link/plot?package=graphics&amp;version=3.3.2\">plot</a></code> [if\n    <code>add = FALSE</code>], or to be passed to or from another method."
			}, {
				"name": "formula",
				"description": "a <code><a rd-options=\"\" href=\"/link/formula?package=graphics&amp;version=3.3.2\">formula</a></code>, such as <code>y ~ x</code>."
			}, {
				"name": "data",
				"description": "a data.frame (or list) from which the variables in\n    <code>formula</code> should be taken."
			}, {
				"name": "subset",
				"description": "an optional vector specifying a subset of observations\n    to be used in the fitting process."
			}, {
				"name": "na.action",
				"description": "a function which indicates what should happen\n    when the data contain <code>NA</code>s.  The default is to ignore case\n    with missing values."
			}]
		}, {
			"name": "stars",
			"args": [{
				"name": "x",
				"description": "matrix or data frame of data.\n    One star or segment plot will be produced for each row of <code>x</code>.\n    Missing values (<code>NA</code>) are allowed, but they are treated as if\n    they were 0 (after scaling, if relevant)."
			}, {
				"name": "full",
				"description": "logical flag: if <code>TRUE</code>, the segment plots will\n    occupy a full circle.  Otherwise, they occupy the (upper) semicircle\n    only."
			}, {
				"name": "scale",
				"description": "logical flag: if <code>TRUE</code>, the columns of the data\n    matrix are scaled independently so that the maximum value in each\n    column is 1 and the minimum is 0.  If <code>FALSE</code>, the presumption\n    is that the data have been scaled by some other algorithm to the\n    range $[0, 1]$."
			}, {
				"name": "radius",
				"description": "logical flag: in <code>TRUE</code>, the radii corresponding to\n    each variable in the data will be drawn."
			}, {
				"name": "labels",
				"description": "vector of character strings for labeling the plots.\n    Unlike the S function <code>stars</code>, no attempt is made to construct\n    labels if <code>labels = NULL</code>."
			}, {
				"name": "locations",
				"description": "Either two column matrix with the x and y coordinates used\n    to place each of the segment plots; or numeric of length 2 when all\n    plots should be superimposed (for a &#x2018;spider plot&#x2019;).\n    By default, <code>locations = NULL</code>, the segment plots will be\n    placed in a rectangular grid."
			}, {
				"name": "nrow, ncol",
				"description": "integers giving the number of rows and columns to use when\n    <code>locations</code> is <code>NULL</code>.  By default, <code>nrow == ncol</code>, a square\n    layout will be used."
			}, {
				"name": "len",
				"description": "scale factor for the length of radii or segments."
			}, {
				"name": "key.loc",
				"description": "vector with x and y coordinates of the unit key."
			}, {
				"name": "key.labels",
				"description": "vector of character strings for labeling the\n    segments of the unit key.  If omitted, the second component of\n    <code>dimnames(x)</code> is used, if available."
			}, {
				"name": "key.xpd",
				"description": "clipping switch for the unit key (drawing and\n    labeling), see <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a>(&quot;xpd&quot;)</code>."
			}, {
				"name": "xlim",
				"description": "vector with the range of x coordinates to plot."
			}, {
				"name": "ylim",
				"description": "vector with the range of y coordinates to plot."
			}, {
				"name": "flip.labels",
				"description": "logical indicating if the label locations should\n    flip up and down from diagram to diagram. Defaults to a somewhat\n    smart heuristic."
			}, {
				"name": "draw.segments",
				"description": "logical. If <code>TRUE</code> draw a segment diagram."
			}, {
				"name": "col.segments",
				"description": "color vector (integer or character, see\n    <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code>), each specifying a color for one of the segments\n    (variables).  Ignored if <code>draw.segments = FALSE</code>."
			}, {
				"name": "col.stars",
				"description": "color vector (integer or character, see\n    <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code>), each specifying a color for one of the stars\n    (cases).  Ignored if <code>draw.segments = TRUE</code>."
			}, {
				"name": "col.lines",
				"description": "color vector (integer or character, see\n    <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a></code>), each specifying a color for one of the lines\n    (cases).  Ignored if <code>draw.segments = TRUE</code>."
			}, {
				"name": "axes",
				"description": "logical flag: if <code>TRUE</code> axes are added to the plot."
			}, {
				"name": "frame.plot",
				"description": "logical flag: if <code>TRUE</code>, the plot region is framed."
			}, {
				"name": "main",
				"description": "a main title for the plot."
			}, {
				"name": "sub",
				"description": "a sub title for the plot."
			}, {
				"name": "xlab",
				"description": "a label for the x axis."
			}, {
				"name": "ylab",
				"description": "a label for the y axis."
			}, {
				"name": "cex",
				"description": "character expansion factor for the labels."
			}, {
				"name": "lwd",
				"description": "line width used for drawing."
			}, {
				"name": "lty",
				"description": "line type used for drawing."
			}, {
				"name": "xpd",
				"description": "logical or NA indicating if clipping should be done, see\n    <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a>(xpd = .)</code>."
			}, {
				"name": "mar",
				"description": "argument to <code><a rd-options=\"\" href=\"/link/par?package=graphics&amp;version=3.3.2\">par</a>(mar = *)</code>, typically choosing\n    smaller margins than by default."
			}, {
				"name": "...",
				"description": "further arguments, passed to the first call of\n    <code>plot()</code>, see <code><a rd-options=\"\" href=\"/link/plot.default?package=graphics&amp;version=3.3.2\">plot.default</a></code> and to\n    <code><a rd-options=\"\" href=\"/link/box?package=graphics&amp;version=3.3.2\">box</a>()</code> if <code>frame.plot</code> is true."
			}, {
				"name": "add",
				"description": "logical, if <code>TRUE</code> <em>add</em> stars to current plot."
			}, {
				"name": "plot",
				"description": "logical, if <code>FALSE</code>, nothing is plotted."
			}]
		}, {
			"name": "xspline",
			"args": [{
				"name": "x,y",
				"description": "vectors containing the coordinates of the vertices\n    of the polygon. See <code><a rd-options=\"\" href=\"/link/xy.coords?package=graphics&amp;version=3.3.2\">xy.coords</a></code> for alternatives."
			}, {
				"name": "shape",
				"description": "A numeric vector of values between -1 and 1, which\n    control the shape of the spline relative to the control points."
			}, {
				"name": "open",
				"description": "A logical value indicating whether the spline is\n    an open or a closed shape."
			}, {
				"name": "repEnds",
				"description": "For open X-splines, a logical value indicating whether\n    the first and last control points should be replicated for drawing\n    the curve. Ignored for closed X-splines."
			}, {
				"name": "draw",
				"description": "logical: should the X-spline be drawn?  If false, a set of\n    line segments to draw the curve is returned, and nothing is drawn."
			}, {
				"name": "border",
				"description": "the color to draw the curve.   Use <code>border = NA</code> to\n    omit borders."
			}, {
				"name": "col",
				"description": "the color for filling the shape. The default,\n    <code>NA</code>, is to leave unfilled."
			}, {
				"name": "...",
				"description": "<a rd-options=\"\" href=\"/link/graphical%20parameters?package=graphics&amp;version=3.3.2\">graphical parameters</a> such as <code>lty</code>, <code>xpd</code>,\n    <code>lend</code>, <code>ljoin</code> and <code>lmitre</code> can be given as arguments."
			}]
		}]
	}
}, {
	"grDevices": {
		"functions": [{
			"name": "as.raster",
			"args": [{
				"name": "x",
				"description": "any <span style=\"R\">R</span> object."
			}, {
				"name": "max",
				"description": "number giving the maximum of the color values range."
			}, {
				"name": "...",
				"description": "further arguments passed to or from other methods."
			}]
		}, {
			"name": "boxplot.stats",
			"args": [{
				"name": "x",
				"description": "a numeric vector for which the boxplot will\n    be constructed (<code><a rd-options=\"\" href=\"/link/NA?package=grDevices&amp;version=3.3.2\">NA</a></code>s and <code><a rd-options=\"\" href=\"/link/NaN?package=grDevices&amp;version=3.3.2\">NaN</a></code>s are allowed\n    and omitted)."
			}, {
				"name": "coef",
				"description": "this determines how far the plot &#x2018;whiskers&#x2019; extend out\n    from the box.  If <code>coef</code> is positive, the whiskers extend to the\n    most extreme data point which is no more than <code>coef</code> times\n    the length of the box away from the box. A value of zero causes\n    the whiskers\n    to extend to the data extremes (and no outliers be returned)."
			}, {
				"name": "do.conf, do.out",
				"description": "logicals; if <code>FALSE</code>, the <code>conf</code> or\n    <code>out</code> component respectively will be empty in the result."
			}]
		}, {}, {
			"name": "check.options",
			"args": [{
				"name": "new",
				"description": "a <em>named</em> list"
			}, {
				"name": "name.opt",
				"description": "character with the name of <span style=\"R\">R</span> object containing the\n    default list."
			}, {
				"name": "reset",
				"description": "logical; if <code>TRUE</code>, reset the options from\n    <code>name.opt</code>.  If there is more than one <span style=\"R\">R</span> object with name\n    <code>name.opt</code>, remove the first one in the <code><a rd-options=\"\" href=\"/link/search?package=grDevices&amp;version=3.3.2\">search</a>()</code> path."
			}, {
				"name": "assign.opt",
				"description": "logical; if <code>TRUE</code>, assign the ..."
			}, {
				"name": "envir",
				"description": "the <code><a rd-options=\"\" href=\"/link/environment?package=grDevices&amp;version=3.3.2\">environment</a></code> used for <code><a rd-options=\"\" href=\"/link/get?package=grDevices&amp;version=3.3.2\">get</a></code>\n    and <code><a rd-options=\"\" href=\"/link/assign?package=grDevices&amp;version=3.3.2\">assign</a></code>."
			}, {
				"name": "check.attributes",
				"description": "character containing the attributes which\n    <code>check.options</code> should check."
			}, {
				"name": "override.check",
				"description": "logical vector of length <code>length(new)</code> (or 1\n    which entails recycling).\n    For those <code>new[i]</code> where <code>override.check[i] == TRUE</code>, the\n    checks are overridden and the changes made anyway."
			}]
		}, {
			"name": "axisTicks",
			"args": [{
				"name": "usr",
				"description": "numeric vector of length 2, with <code>c(min, max)</code> axis\n    extents."
			}, {
				"name": "log",
				"description": "logical indicating if a log scale is (thought to be) in\n    use."
			}, {
				"name": "axp",
				"description": "numeric vector of length 3, <code>c(mi, ma, n.)</code>, with\n    identical meaning to <code><a rd-options=\"\" href=\"/link/par?package=grDevices&amp;version=3.3.2\">par</a>(&quot;?axp&quot;)</code> (where <code>?</code> is\n    <code>x</code> or <code>y</code>), namely &#x201C;pretty&#x201D; axis extents, and an\n    integer <em>code</em> <code>n.</code>."
			}, {
				"name": "nint, nintLog",
				"description": "positive integer value indicating\n    (<em>approximately</em>) the desired number of intervals.\n    <code>nintLog</code> is used <b>only</b> for the case <code>log = TRUE</code>."
			}]
		}, {
			"name": "cairo",
			"args": [{
				"name": "filename",
				"description": "the name of the output file.\n    The page number is substituted if a C integer format is included in\n    the character string, as in the default.  (The result must be less\n    than <code>PATH_MAX</code> characters long, and may be truncated if not.\n    See <code><a rd-options=\"\" href=\"/link/postscript?package=grDevices&amp;version=3.3.2\">postscript</a></code> for further details.)  Tilde expansion\n    is performed where supported by the platform."
			}, {
				"name": "width",
				"description": "the width of the device in inches."
			}, {
				"name": "height",
				"description": "the height of the device in inches."
			}, {
				"name": "pointsize",
				"description": "the default pointsize of plotted text (in big points)."
			}, {
				"name": "onefile",
				"description": "should all plots appear in one file or in separate files?"
			}, {
				"name": "family",
				"description": "one of the device-independent font families,\n    <code>&quot;sans&quot;</code>, <code>&quot;serif&quot;</code> and <code>&quot;mono&quot;</code>, or a character\n    string specify a font family to be searched for in a\n    system-dependent way.\n unix\n    See, the &#x2018;Cairo fonts&#x2019; section in the help for <code><a rd-options=\"\" href=\"/link/X11?package=grDevices&amp;version=3.3.2\">X11</a></code>."
			}, {
				"name": "bg",
				"description": "the initial background colour: can be overridden by setting\n    par(&quot;bg&quot;)."
			}, {
				"name": "antialias",
				"description": "string, the type of anti-aliasing (if any) to be used;\n    defaults to <code>&quot;default&quot;</code>."
			}, {
				"name": "fallback_resolution",
				"description": "numeric: the resolution in dpi used when\n    falling back to bitmap output.  Prior to <span style=\"R\">R</span> 3.3.0 this depended on\n    the cairo implementation but was commonly 300."
			}]
		}, {
			"name": "adjustcolor",
			"args": [{
				"name": "col",
				"description": "vector of colors, in any format that col2rgb() accepts"
			}, {
				"name": "alpha.f",
				"description": "factor modifying the opacity alpha; typically in [0,1]"
			}, {
				"name": "red.f, green.f, blue.f",
				"description": "factors modifying the &#x201C;red-&#x201D;,\n    &#x201C;green-&#x201D; or &#x201C;blue-&#x201D;ness of the colors, respectively."
			}, {
				"name": "offset",
				"description": ""
			}, {
				"name": "transform",
				"description": ""
			}]
		}, {
			"name": "as.graphicsAnnot",
			"args": [{
				"name": "x",
				"description": "an <span style=\"R\">R</span> object"
			}]
		}, {
			"name": "col2rgb",
			"args": [{
				"name": "col",
				"description": "vector of any of the three kinds of <span style=\"R\">R</span> color specifications,\n    i.e., either a color name (as listed by <code><a rd-options=\"\" href=\"/link/colors?package=grDevices&amp;version=3.3.2\">colors</a>()</code>), a\n    hexadecimal string of the form <code>&quot;#rrggbb&quot;</code> or\n    <code>&quot;#rrggbbaa&quot;</code> (see <code><a rd-options=\"\" href=\"/link/rgb?package=grDevices&amp;version=3.3.2\">rgb</a></code>), or a positive integer\n    <code>i</code> meaning <code><a rd-options=\"\" href=\"/link/palette?package=grDevices&amp;version=3.3.2\">palette</a>()[i]</code>."
			}, {
				"name": "alpha",
				"description": "logical value indicating whether the alpha channel (opacity)\n    values should be returned."
			}]
		}, {
			"name": "cm",
			"args": [{
				"name": "x",
				"description": "numeric vector"
			}]
		}, {
			"name": "dev.capabilities",
			"args": [{
				"name": "what",
				"description": "a character vector partially matching the names of the\n    components listed in section &#x2018;Value&#x2019;, or <code>NULL</code> which\n    lists all available capabilities."
			}]
		}, {
			"name": "densCols",
			"args": [{
				"name": "x, y",
				"description": "the <code>x</code> and <code>y</code> arguments provide the x and y\n    coordinates of the points.  Any reasonable way of defining the\n    coordinates is acceptable.  See the function <code><a rd-options=\"\" href=\"/link/xy.coords?package=grDevices&amp;version=3.3.2\">xy.coords</a></code>\n    for details.  If supplied separately, they must be of the same length."
			}, {
				"name": "nbin",
				"description": "numeric vector of length one (for both directions) or two\n    (for x and y separately) specifying the number of equally spaced\n    grid points for the density estimation; directly used as\n    <code>gridsize</code> in <code><a rd-options=\"KernSmooth\" href=\"/link/bkde2D?package=grDevices&amp;version=3.3.2&amp;to=KernSmooth\">bkde2D</a>()</code>."
			}, {
				"name": "bandwidth",
				"description": "numeric vector (length 1 or 2) of smoothing bandwidth(s).\n    If missing, a more or less useful default is used. <code>bandwidth</code>\n    is subsequently passed to function <code><a rd-options=\"KernSmooth\" href=\"/link/bkde2D?package=grDevices&amp;version=3.3.2&amp;to=KernSmooth\">bkde2D</a></code>."
			}, {
				"name": "colramp",
				"description": "function accepting an integer <code>n</code> as an argument and\n    returning <code>n</code> colors."
			}]
		}, {
			"name": "contourLines",
			"args": [{
				"name": "x, y",
				"description": "locations of grid lines at which the values in <code>z</code> are\n    measured.  These must be in ascending order.  By default, equally\n    spaced values from 0 to 1 are used.  If <code>x</code> is a <code>list</code>,\n    its components <code>x$x</code> and <code>x$y</code> are used for <code>x</code>\n    and <code>y</code>, respectively. If the list has component <code>z</code> this\n    is used for <code>z</code>."
			}, {
				"name": "z",
				"description": "a matrix containing the values to be plotted (<code>NA</code>s are\n    allowed).  Note that <code>x</code> can be used instead of <code>z</code> for\n    convenience."
			}, {
				"name": "nlevels",
				"description": "number of contour levels desired <b>iff</b>\n    <code>levels</code> is not supplied."
			}, {
				"name": "levels",
				"description": "numeric vector of levels at which to draw contour\n    lines."
			}]
		}, {
			"name": "dev.interactive",
			"args": [{
				"name": "orNone",
				"description": "logical; if <code>TRUE</code>, the function also returns\n    <code>TRUE</code> when <code><a rd-options=\"\" href=\"/link/.Device?package=grDevices&amp;version=3.3.2\">.Device</a> == &quot;null device&quot;</code> and\n    <code><a rd-options=\"\" href=\"/link/getOption?package=grDevices&amp;version=3.3.2\">getOption</a>(&quot;device&quot;)</code> is among the known\n    interactive devices."
			}, {
				"name": "name",
				"description": "one or more device names as a character vector,\n    or <code>NULL</code> to give the existing list."
			}]
		}, {
			"name": "dev.capture",
			"args": [{
				"name": "native",
				"description": "Logical. If <code>FALSE</code> the result is a matrix of R\n    color names, if <code>TRUE</code> the output is returned as a\n    <code>nativeRaster</code> object which is more efficient for plotting, but\n    not portable."
			}]
		}, {
			"name": "colors",
			"args": [{
				"name": "distinct",
				"description": "logical indicating if the colors returned should all be\n    distinct; e.g., <code>&quot;snow&quot;</code> and <code>&quot;snow1&quot;</code> are effectively the\n    same point in the $(0:255)^3$ RGB space."
			}]
		}, {
			"name": "dev.flush",
			"args": [{
				"name": "level",
				"description": "Integer &gt;= 0.  The amount by which to change the hold\n    level.  Negative values will be silently replaced by zero."
			}]
		}, {
			"name": "colorRamp",
			"args": [{
				"name": "colors",
				"description": "colors to interpolate; must be a valid argument to\n    <code><a rd-options=\"\" href=\"/link/col2rgb?package=grDevices&amp;version=3.3.2\">col2rgb</a>()</code>."
			}, {
				"name": "bias",
				"description": "a positive number.  Higher values give more widely spaced\n    colors at the high end."
			}, {
				"name": "space",
				"description": "a character string; interpolation in RGB or CIE Lab\n    color spaces."
			}, {
				"name": "interpolate",
				"description": "use spline or linear interpolation."
			}, {
				"name": "alpha",
				"description": "logical: should alpha channel (opacity) values be\n    returned?   It is an error to give a true value if\n    <code>space</code> is specified."
			}, {
				"name": "...",
				"description": "arguments to pass to <code>colorRamp</code>."
			}]
		}, {
			"name": "convertColor",
			"args": [{
				"name": "color",
				"description": "A matrix whose rows specify colors."
			}, {
				"name": "from, to",
				"description": "Input and output color spaces.  See &#x2018;Details&#x2019; below."
			}, {
				"name": "from.ref.white, to.ref.white",
				"description": "Reference whites or <code>NULL</code>\n    if these are built in to the definition, as for RGB\n    spaces. <code>D65</code> is the default, see &#x2018;Details&#x2019; for others."
			}, {
				"name": "scale.in, scale.out",
				"description": "Input is divided by <code>scale.in</code>, output\n    is multiplied by <code>scale.out</code>. Use <code>NULL</code> to suppress\n    scaling when input or output is not numeric."
			}, {
				"name": "clip",
				"description": "If <code>TRUE</code>, truncate RGB output to [0,1],\n    <code>FALSE</code> return out-of-range RGB, <code>NA</code> set out of range\n    colors to <code>NaN</code>."
			}]
		}, {
			"name": "dev",
			"args": [{
				"name": "which",
				"description": "An integer specifying a device number."
			}, {
				"name": "...",
				"description": "arguments to be passed to the device selected."
			}, {
				"name": "noRStudioGD",
				"description": "Do not use the RStudio graphics device even if\n    specified as the default device: it does not accept arguments such\n    as <code>width</code> and <code>height</code>."
			}]
		}, {
			"name": "embedFonts",
			"args": [{
				"name": "file",
				"description": "a character string giving the name of the original file."
			}, {
				"name": "format",
				"description": "the format for the new file (with fonts embedded) given as\n    the name of a ghostscript output device.\n    If not specified, it is guessed from the suffix of <code>file</code>."
			}, {
				"name": "outfile",
				"description": "the name of the new file (with fonts embedded)."
			}, {
				"name": "fontpaths",
				"description": "a character vector giving directories that\n    Ghostscript will search for fonts."
			}, {
				"name": "options",
				"description": "a character vector containing further options to\n    Ghostscript."
			}]
		}, {
			"name": "dev.size",
			"args": [{
				"name": "units",
				"description": "the units in which to return the value -- inches, cm, or\n    pixels (device units)."
			}]
		}, {
			"name": "getGraphicsEvent",
			"args": [{
				"name": "prompt",
				"description": "prompt to be displayed to the user in the graphics window"
			}, {
				"name": "onMouseDown",
				"description": "a function to respond to mouse clicks"
			}, {
				"name": "onMouseMove",
				"description": "a function to respond to mouse movement"
			}, {
				"name": "onMouseUp",
				"description": "a function to respond to mouse button releases"
			}, {
				"name": "onKeybd",
				"description": "a function to respond to key presses"
			}, {
				"name": "consolePrompt",
				"description": "prompt to be displayed to the user in the console"
			}, {
				"name": "which",
				"description": "which graphics device does the call apply to?"
			}, {
				"name": "...",
				"description": "items including handlers to be placed in the event environment"
			}, {
				"name": "env",
				"description": "an environment to be used as the event environment"
			}]
		}, {
			"name": "devAskNewPage",
			"args": [{
				"name": "ask",
				"description": "<code>NULL</code> or a logical value.  If <code>TRUE</code>, the user\n    will in future be prompted before a new page of output is started."
			}]
		}, {
			"name": "Devices",
			"args": []
		}, {
			"name": "gray.colors",
			"args": [{
				"name": "n",
				"description": "the number of gray colors ($\\ge 1$) to be in the\n    palette."
			}, {
				"name": "start",
				"description": "starting gray level in the palette (should be between\n    <code>0</code> and <code>1</code> where zero indicates <code>&quot;black&quot;</code> and one\n    indicates <code>&quot;white&quot;</code>)."
			}, {
				"name": "end",
				"description": "ending gray level in the palette."
			}, {
				"name": "gamma",
				"description": "the gamma correction."
			}, {
				"name": "alpha",
				"description": "the opacity, is specified."
			}]
		}, {
			"name": "dev2",
			"args": [{
				"name": "device",
				"description": "A device function (e.g., <code>x11</code>,\n    <code>postscript</code>, ...)"
			}, {
				"name": "...",
				"description": "Arguments to the <code>device</code> function above: for\n    <code>dev.copy2eps</code> arguments to <code><a rd-options=\"\" href=\"/link/postscript?package=grDevices&amp;version=3.3.2\">postscript</a></code> and for\n    <code>dev.copy2pdf</code>, arguments to <code><a rd-options=\"\" href=\"/link/pdf?package=grDevices&amp;version=3.3.2\">pdf</a></code>.\n    For <code>dev.print</code>, this includes <code>which</code> and by default any\n    <code><a rd-options=\"\" href=\"/link/postscript?package=grDevices&amp;version=3.3.2\">postscript</a></code> arguments."
			}, {
				"name": "which",
				"description": "A device number specifying the device to copy to."
			}, {
				"name": "out.type",
				"description": "The name of the output device: can be <code>&quot;pdf&quot;</code>, or\n    <code>&quot;quartz&quot;</code> (some macOS builds) or <code>&quot;cairo&quot;</code> (Windows\n    and some Unix-alikes, see <code><a rd-options=\"\" href=\"/link/cairo_pdf?package=grDevices&amp;version=3.3.2\">cairo_pdf</a></code>)."
			}, {
				"name": "displaylist",
				"description": "A character string: the only valid values are\n    <code>&quot;inhibit&quot;</code> and <code>&quot;enable&quot;</code>."
			}]
		}, {
			"name": "gray",
			"args": [{
				"name": "level",
				"description": "a vector of desired gray levels between <code>0</code> and\n    <code>1</code>; zero indicates <code>&quot;black&quot;</code> and one indicates\n    <code>&quot;white&quot;</code>."
			}, {
				"name": "alpha",
				"description": "the opacity, if specified."
			}]
		}, {
			"name": "extendrange",
			"args": [{
				"name": "x",
				"description": "numeric vector; not used if <code>r</code> is specified."
			}, {
				"name": "r",
				"description": "numeric vector of length 2; defaults to the\n    <code><a rd-options=\"\" href=\"/link/range?package=grDevices&amp;version=3.3.2\">range</a></code> of <code>x</code>."
			}, {
				"name": "f",
				"description": "number specifying the fraction by which the range should be\n    extended."
			}]
		}, {
			"name": "dev2bitmap",
			"args": [{
				"name": "file",
				"description": "The output file name, with an appropriate extension."
			}, {
				"name": "type",
				"description": "The type of bitmap."
			}, {
				"name": "width, height",
				"description": "Dimensions of the display region."
			}, {
				"name": "res",
				"description": "Resolution, in dots per inch."
			}, {
				"name": "units",
				"description": "The units in which <code>height</code> and <code>width</code> are\n    given.  Can be <code>in</code> (inches), <code>px</code> (pixels), <code>cm</code> or\n    <code>mm</code>."
			}, {
				"name": "pointsize",
				"description": "The pointsize to be used for text: defaults to\n    something reasonable given the width and height"
			}, {
				"name": "...",
				"description": "Other parameters passed to <code><a rd-options=\"\" href=\"/link/postscript?package=grDevices&amp;version=3.3.2\">postscript</a></code> or\n    <code><a rd-options=\"\" href=\"/link/pdf?package=grDevices&amp;version=3.3.2\">pdf</a></code>."
			}, {
				"name": "method",
				"description": "Should the plot be done by <code><a rd-options=\"\" href=\"/link/postscript?package=grDevices&amp;version=3.3.2\">postscript</a></code> or\n    <code><a rd-options=\"\" href=\"/link/pdf?package=grDevices&amp;version=3.3.2\">pdf</a></code>?"
			}, {
				"name": "taa, gaa",
				"description": "Number of bits of antialiasing for text and for graphics\n    respectively.  Usually 4 (for best effect) or 2.  Not supported on\n    all types."
			}]
		}, {
			"name": "Hershey",
			"args": []
		}, {
			"name": "make.rgb",
			"args": [{
				"name": "red,green,blue",
				"description": "Chromaticity (xy or xyY) of RGB primaries"
			}, {
				"name": "name",
				"description": "Name for the colour space"
			}, {
				"name": "white",
				"description": "Character string specifying the reference white (see\n    &#x2018;Details&#x2019;.)"
			}, {
				"name": "gamma",
				"description": "Display gamma (nonlinearity). A positive number or the\n    string <code>&quot;sRGB&quot;</code>"
			}, {
				"name": "fromXYZ",
				"description": "Function to convert from XYZ tristimulus coordinates\n    to this space"
			}, {
				"name": "toXYZ",
				"description": "Function to convert from this space to XYZ tristimulus\n    coordinates."
			}]
		}, {
			"name": "n2mfrow",
			"args": [{
				"name": "nr.plots",
				"description": "integer; the number of plot figures you&apos;ll want to draw."
			}]
		}, {
			"name": "Japanese",
			"args": []
		}, {
			"name": "grDevices-package",
			"args": []
		}, {
			"name": "nclass",
			"args": [{
				"name": "x",
				"description": "A data vector."
			}]
		}, {
			"name": "grSoftVersion",
			"args": []
		}, {
			"name": "palette",
			"args": [{
				"name": "value",
				"description": "an optional character vector."
			}]
		}, {
			"name": "hcl",
			"args": [{
				"name": "h",
				"description": "The hue of the color specified as an angle in the range\n      [0,360].  0 yields red, 120 yields green 240 yields blue, etc."
			}, {
				"name": "c",
				"description": "The chroma of the color.  The upper bound for chroma depends\n      on hue and luminance."
			}, {
				"name": "l",
				"description": "A value in the range [0,100] giving the luminance of the\n        colour.  For a given combination of hue and chroma, only\n        a subset of this range is possible."
			}, {
				"name": "alpha",
				"description": "numeric vector of values in the range <code>[0,1]</code> for\n    alpha transparency channel (0 means transparent and 1 means opaque)."
			}, {
				"name": "fixup",
				"description": "a logical value which indicates whether the resulting\n    RGB values should be corrected to ensure that a real color results.\n    if <code>fixup</code> is <code>FALSE</code> RGB components lying outside the\n    range [0,1] will result in an <code>NA</code> value."
			}]
		}, {
			"name": "hsv",
			"args": [{
				"name": "h,s,v",
				"description": "numeric vectors of values in the range <code>[0, 1]</code> for\n    &#x2018;hue&#x2019;, &#x2018;saturation&#x2019; and &#x2018;value&#x2019; to be combined\n    to form a vector of colors.  Values in shorter arguments are\n    recycled."
			}, {
				"name": "alpha",
				"description": "numeric vector of values in the range <code>[0, 1]</code> for\n    alpha transparency channel (0 means transparent and 1 means opaque)."
			}]
		}, {
			"name": "postscriptFonts",
			"args": [{
				"name": "...",
				"description": "either character strings naming mappings to display,\n    or named arguments specifying mappings to add or change."
			}]
		}, {
			"name": "pretty.Date",
			"args": [{
				"name": "x",
				"description": "an object of class <code>&quot;Date&quot;</code> or <code>&quot;POSIXt&quot;</code> (i.e.,\n    <code>&quot;POSIXct&quot;</code> or <code>&quot;POSIXlt&quot;</code>)."
			}, {
				"name": "n",
				"description": "integer giving the <em>desired</em> number of intervals."
			}, {
				"name": "min.n",
				"description": "nonnegative integer giving the <em>minimal</em> number of\n    intervals."
			}, {
				"name": "sep",
				"description": "character string, serving as a separator for certain\n    formats (e.g., between month and year)."
			}, {
				"name": "...",
				"description": "further arguments for compatibility with the generic,\n    ignored."
			}]
		}, {
			"name": "Palettes",
			"args": [{
				"name": "n",
				"description": "the number of colors ($\\ge 1$) to be in the\n    palette."
			}, {
				"name": "s, v",
				"description": "the &#x2018;saturation&#x2019; and &#x2018;value&#x2019; to be used\n    to complete the HSV color descriptions."
			}, {
				"name": "start",
				"description": "the (corrected) hue in [0,1] at which the rainbow\n    begins."
			}, {
				"name": "end",
				"description": "the (corrected) hue in [0,1] at which the rainbow ends."
			}, {
				"name": "alpha",
				"description": "the alpha transparency, a number in [0,1], see argument\n    <code>alpha</code> in <code><a rd-options=\"\" href=\"/link/hsv?package=grDevices&amp;version=3.3.2\">hsv</a></code>."
			}]
		}, {
			"name": "pdf",
			"args": [{
				"name": "file",
				"description": "a character string giving the name of the file.\n    If it is of the form <code>&quot;|cmd&quot;</code>, the output is piped to the\n    command given by <code>cmd</code>.  If it is <code>NULL</code>,\n    then no external file is created (effectively, no drawing occurs),\n    but the device may still be queried (e.g., for size of text).\n\n    For use with <code>onefile = FALSE</code> give a C integer format such\n    as <code>&quot;Rplot%03d.pdf&quot;</code> (the default in that case).\n    (See <code><a rd-options=\"\" href=\"/link/postscript?package=grDevices&amp;version=3.3.2\">postscript</a></code> for further details.)\n\n    Tilde expansion (see <code><a rd-options=\"\" href=\"/link/path.expand?package=grDevices&amp;version=3.3.2\">path.expand</a></code>) is done."
			}, {
				"name": "width, height",
				"description": "the width and height of the graphics region in\n    inches.  The default values are <code>7</code>."
			}, {
				"name": "onefile",
				"description": "logical: if true (the default) allow multiple figures\n    in one file.  If false, generate a file with name containing the page\n    number for each page.  Defaults to <code>TRUE</code>, and forced to true\n    if <code>file</code> is a pipe."
			}, {
				"name": "family",
				"description": "the font family to be used, see\n    <code><a rd-options=\"\" href=\"/link/postscript?package=grDevices&amp;version=3.3.2\">postscript</a></code>.  Defaults to <code>&quot;Helvetica&quot;</code>."
			}, {
				"name": "title",
				"description": "title string to embed as the <span class=\"samp\">/Title</span> field in the\n    file.  Defaults to <code>&quot;R Graphics Output&quot;</code>."
			}, {
				"name": "fonts",
				"description": "a character vector specifying <span style=\"R\">R</span> graphics font family\n    names for additional fonts which will be included in the PDF file.\n    Defaults to <code>NULL</code>."
			}, {
				"name": "version",
				"description": "a string describing the PDF version that will be\n    required to view the output.  This is a minimum, and will be\n    increased (with a warning) if necessary.  Defaults to <code>&quot;1.4&quot;</code>,\n    but see &#x2018;Details&#x2019;."
			}, {
				"name": "paper",
				"description": "the target paper size.  The choices are\n    <code>&quot;a4&quot;</code>, <code>&quot;letter&quot;</code>, <code>&quot;legal&quot;</code> (or <code>&quot;us&quot;</code>) and\n    <code>&quot;executive&quot;</code> (and these can be capitalized), or <code>&quot;a4r&quot;</code>\n    and <code>&quot;USr&quot;</code> for rotated (&#x2018;landscape&#x2019;).\n    The default is <code>&quot;special&quot;</code>, which means that the <code>width</code>\n    and <code>height</code> specify the paper size.  A further choice is\n    <code>&quot;default&quot;</code>; if this is selected, the\n    papersize is taken from the option <code>&quot;papersize&quot;</code>\n    if that is set and as <code>&quot;a4&quot;</code> if it is unset or empty.\n    Defaults to <code>&quot;special&quot;</code>."
			}, {
				"name": "encoding",
				"description": "the name of an encoding file.  See\n    <code><a rd-options=\"\" href=\"/link/postscript?package=grDevices&amp;version=3.3.2\">postscript</a></code> for details.  Defaults to <code>&quot;default&quot;</code>."
			}, {
				"name": "bg",
				"description": "the initial background color to be used.  Defaults to\n    <code>&quot;transparent&quot;</code>."
			}, {
				"name": "fg",
				"description": "the initial foreground color to be used.  Defaults to\n   <code>&quot;black&quot;</code>."
			}, {
				"name": "pointsize",
				"description": "the default point size to be used.  Strictly\n    speaking, in bp, that is 1/72 of an inch, but approximately in\n    points.  Defaults to <code>12</code>."
			}, {
				"name": "pagecentre",
				"description": "logical: should the device region be centred on the\n    page? -- is only relevant for <code>paper != &quot;special&quot;</code>.\n    Defaults to <code>TRUE</code>."
			}, {
				"name": "colormodel",
				"description": "a character string describing the color model:\n    currently allowed values are <code>&quot;srgb&quot;</code>, <code>&quot;gray&quot;</code> (or\n    <code>&quot;grey&quot;</code>) and <code>&quot;cmyk&quot;</code>.  Defaults to <code>&quot;srgb&quot;</code>.  See section\n    &#x2018;Color models&#x2019;."
			}, {
				"name": "useDingbats",
				"description": "logical.  Should small circles be rendered\n    <em>via</em> the Dingbats font?  Defaults to <code>TRUE</code>, which produces\n    smaller and better output.  Setting this to <code>FALSE</code> can work\n    around font display problems in broken PDF viewers: although this\n    font is one of the 14 guaranteed to be available in all PDF viewers,\n    that guarantee is not always honoured.\n unix\n    See the &#x2018;Note&#x2019; for a possible fix for some viewers."
			}, {
				"name": "useKerning",
				"description": "logical.  Should kerning corrections be included in\n    setting text and calculating string widths?  Defaults to <code>TRUE</code>."
			}, {
				"name": "fillOddEven",
				"description": "logical controlling the polygon fill mode:  see\n    <code><a rd-options=\"\" href=\"/link/polygon?package=grDevices&amp;version=3.3.2\">polygon</a></code> for details.  Defaults to <code>FALSE</code>."
			}, {
				"name": "compress",
				"description": "logical.  Should PDF streams be generated with Flate\n    compression?  Defaults to <code>TRUE</code>."
			}]
		}, {
			"name": "recordGraphics",
			"args": [{
				"name": "expr",
				"description": "object of mode <code><a rd-options=\"\" href=\"/link/expression?package=grDevices&amp;version=3.3.2\">expression</a></code> or <code>call</code> or\n    an unevaluated expression."
			}, {
				"name": "list",
				"description": "a list defining the environment in which <code>expr</code> is to\n    be evaluated."
			}, {
				"name": "env",
				"description": "An <code><a rd-options=\"\" href=\"/link/environment?package=grDevices&amp;version=3.3.2\">environment</a></code> specifying\n    where <span style=\"R\">R</span> looks for objects not found in\n    <code>envir</code>."
			}]
		}, {
			"name": "ps.options",
			"args": [{
				"name": "...",
				"description": "arguments <code>onefile</code>, <code>family</code>, <code>title</code>,\n    <code>fonts</code>,\n    <code>encoding</code>, <code>bg</code>, <code>fg</code>, <code>width</code>, <code>height</code>,\n    <code>horizontal</code>, <code>pointsize</code>,  <code>paper</code>,\n    <code>pagecentre</code>, <code>print.it</code>, <code>command</code>,\n    <code>colormodel</code> and <code>fillOddEven</code> can be supplied.  <code>onefile</code>,\n    <code>horizontal</code> and <code>paper</code> are <em>ignored</em>\n    for <code>setEPS</code> and <code>setPS</code>."
			}, {
				"name": "reset",
				"description": "logical: should the defaults be reset to their\n    &#x2018;factory-fresh&#x2019; values?"
			}, {
				"name": "override.check",
				"description": "logical argument passed to\n    <code><a rd-options=\"\" href=\"/link/check.options?package=grDevices&amp;version=3.3.2\">check.options</a></code>.  See the Examples."
			}]
		}, {
			"name": "plotmath",
			"args": []
		}, {}, {}, {}, {}, {}, {}, {}, {}, {
			"name": "xfig",
			"args": [{
				"name": "file",
				"description": "a character string giving the name of the file.   For use\n    with <code>onefile = FALSE</code> give a C integer format such as\n    <code>&quot;Rplot%03d.fig&quot;</code> (the default in that case).\n    (See <code><a rd-options=\"\" href=\"/link/postscript?package=grDevices&amp;version=3.3.2\">postscript</a></code> for further details.)"
			}, {
				"name": "onefile",
				"description": "logical: if true allow multiple figures\n    in one file. If false, assume only one page per file and generate a\n    file number containing the page number."
			}, {
				"name": "encoding",
				"description": "The encoding in which to write text strings.  The\n    default is not to re-encode.  This can be any encoding recognized by\n    <code><a rd-options=\"\" href=\"/link/iconv?package=grDevices&amp;version=3.3.2\">iconv</a></code>: in a Western UTF-8 locale you probably want to\n    select an 8-bit encoding such as <code>latin1</code>, and in an East Asian\n    locale an <code>EUC</code> encoding.  If re-encoding fails, the text\n    strings will be written in the current encoding with a warning."
			}, {
				"name": "paper",
				"description": "the size of paper region.  The choices\n    are <code>&quot;A4&quot;</code>, <code>&quot;Letter&quot;</code> and <code>&quot;Legal&quot;</code> (and these\n    can be lowercase).  A further choice is <code>&quot;default&quot;</code>, which\n    is the default.  If this is selected, the papersize is taken\n    from the option <code>&quot;papersize&quot;</code> if that is set to a non-empty\n    value, otherwise <code>&quot;A4&quot;</code>."
			}, {
				"name": "horizontal",
				"description": "the orientation of the printed image, a\n    logical.  Defaults to true, that is landscape orientation."
			}, {
				"name": "width, height",
				"description": "the width and height of the\n    graphics region in inches.  The default is to use the entire\n    page less a 0.5 inch overall margin in each direction.  (See\n    <code><a rd-options=\"\" href=\"/link/postscript?package=grDevices&amp;version=3.3.2\">postscript</a></code> for further details.)"
			}, {
				"name": "family",
				"description": "the font family to be used.  This must be one\n    of <code>&quot;AvantGarde&quot;</code>, <code>&quot;Bookman&quot;</code>, <code>&quot;Courier&quot;</code>,\n    <code>&quot;Helvetica&quot;</code> (the default), <code>&quot;Helvetica-Narrow&quot;</code>,\n    <code>&quot;NewCenturySchoolbook&quot;</code>, <code>&quot;Palatino&quot;</code> or\n    <code>&quot;Times&quot;</code>.  Any other value is replaced by\n    <code>&quot;Helvetica&quot;</code>, with a warning."
			}, {
				"name": "pointsize",
				"description": "the default point size to be used."
			}, {
				"name": "bg",
				"description": "the initial background color to be used."
			}, {
				"name": "fg",
				"description": "the initial foreground color to be used."
			}, {
				"name": "pagecentre",
				"description": "logical: should the device region be centred on the\n    page?"
			}, {
				"name": "defaultfont",
				"description": "logical: should the device use xfig&apos;s default\n    font?"
			}, {
				"name": "textspecial",
				"description": "logical: should the device set the textspecial flag\n  for all text elements. This is useful when generating pstex from xfig\n  figures."
			}]
		}, {}, {
			"name": "rgb2hsv",
			"args": [{
				"name": "r",
				"description": "vector of &#x2018;red&#x2019; values in $[0, M]$, ($M\n      = $<code>maxColorValue</code>) or 3-row rgb matrix."
			}, {
				"name": "g",
				"description": "vector of &#x2018;green&#x2019; values, or <code><a rd-options=\"\" href=\"/link/NULL?package=grDevices&amp;version=3.3.2\">NULL</a></code> when\n    <code>r</code> is a matrix."
			}, {
				"name": "b",
				"description": "vector of &#x2018;blue&#x2019; values, or <code><a rd-options=\"\" href=\"/link/NULL?package=grDevices&amp;version=3.3.2\">NULL</a></code> when\n    <code>r</code> is a matrix."
			}, {
				"name": "maxColorValue",
				"description": "number giving the maximum of the RGB color values\n    range.  The default <code>255</code> corresponds to the typical <code>0:255</code>\n    RGB coding as in <code><a rd-options=\"\" href=\"/link/col2rgb?package=grDevices&amp;version=3.3.2\">col2rgb</a>()</code>."
			}]
		}, {}]
	}
}, {
	"methods": {
		"functions": [{
			"name": "Classes_Details",
			"args": []
		}, {
			"name": "Classes",
			"args": []
		}, {
			"name": "as",
			"args": [{
				"name": "object",
				"description": "any <span style=\"R\">R</span> object."
			}, {
				"name": "Class",
				"description": "the name of the class to which <code>object</code> should be\n    coerced."
			}, {
				"name": "strict",
				"description": "logical flag.  If <code>TRUE</code>, the returned object\n    must be strictly from the target class (unless that class is a\n    virtual class, in which case the object will be from the closest\n    actual class, in particular the original object, if that class extends the\n    virtual class directly).\n\n    If <code>strict = FALSE</code>, any simple extension of the target class\n    will be returned, without further change.  A simple extension is,\n    roughly, one that just adds slots to an existing class."
			}, {
				"name": "value",
				"description": "The value to use to modify <code>object</code> (see the\n    discussion below).  You should supply an object with class\n    <code>Class</code>; some coercion is done, but you&apos;re unwise to rely on\n    it."
			}, {
				"name": "ext",
				"description": "an optional object\n    defining how <code>Class</code> is extended by the class of the\n    object (as returned by <code><a rd-options=\"\" href=\"/link/possibleExtends?package=methods&amp;version=3.3.2\">possibleExtends</a></code>).\n    This argument is used internally;\n    do not use it directly."
			}]
		}, {
			"name": "classRepresentation-class",
			"args": []
		}, {
			"name": "cbind2",
			"args": [{
				"name": "x",
				"description": "any <span style=\"R\">R</span> object, typically matrix-like."
			}, {
				"name": "y",
				"description": "any <span style=\"R\">R</span> object, typically similar to <code>x</code>, or missing\n    completely."
			}, {
				"name": "...",
				"description": "optional arguments for methods."
			}]
		}, {
			"name": "classesToAM",
			"args": [{
				"name": "classes",
				"description": "Either a character vector of class names or a list, whose\n      elements can be either class names or class definitions.  The\n      list is convenient, for example, to include the package slot for\n      the class name. See the examples."
			}, {
				"name": "includeSubclasses",
				"description": "A logical flag; if <code>TRUE</code>, then the matrix will include all\n      the known subclasses of the specified classes as well as the\n      superclasses.  The argument can also be a logical vector of the\n      same length as <code>classes</code>, to include subclasses for some\n      but not all the classes."
			}, {
				"name": "abbreviate",
				"description": "Control of the abbreviation of the row and/or  column labels of\n        the matrix returned: values 0, 1, 2, or 3 abbreviate neither,\n        rows, columns or both.  The default, 2, is useful for printing\n        the matrix, since class names tend to be more than one\n        character long, making for spread-out printing.  Values of 0\n        or 3 would be appropriate for making a graph (3 avoids the\n        tendency of some graph plotting software to produce labels in\n        minuscule font size)."
			}]
		}, {
			"name": "callGeneric",
			"args": [{
				"name": "...",
				"description": "Optionally, the arguments to the function in its next call.\n\n    If no arguments are included in the call to <code>callGeneric</code>, the\n    effect is to call the function with the current arguments.\n    See the detailed description for what this really means."
			}]
		}, {
			"name": "BasicClasses",
			"args": []
		}, {
			"name": "canCoerce",
			"args": [{
				"name": "object",
				"description": "any <span style=\"R\">R</span> object, typically of a formal S4 class."
			}, {
				"name": "Class",
				"description": "an S4 class (see <code><a rd-options=\"\" href=\"/link/isClass?package=methods&amp;version=3.3.2\">isClass</a></code>)."
			}]
		}, {
			"name": "className",
			"args": [{
				"name": "class, package",
				"description": "The character string name of a class and, optionally, of the package\nto which it belongs.  If argument <code>package</code> is missing and the\n<code>class</code> argument has a package slot, that is used  (in\nparticular, passing in an object from class <code>&quot;className&quot;</code> returns\nitself in this case, but changes the package slot if the second\nargument is supplied).\n\nIf there is no package argument or slot, a\ndefinition for the class must exist and will be used to define the\npackage.  If there are multiple definitions, one will be chosen and a\nwarning printed giving the other possibilities."
			}, {
				"name": "details",
				"description": "If <code>FALSE</code>, the default, <code>multipleClasses()</code> returns a\ncharacter vector of those classes currently known with multiple\ndefinitions.\n\nIf <code>TRUE</code>, a named list of those class definitions is returned.\nEach element of the list is itself a list of the corresponding class\ndefinitions, with the package names as the names of the list.  Note\nthat identical class definitions will not be considered\n&#x201C;multiple&#x201D; definitions (see the discussion of the details below)."
			}]
		}, {
			"name": "EmptyMethodsList-class",
			"args": []
		}, {
			"name": "environment-class",
			"args": []
		}, {
			"name": "GenericFunctions",
			"args": [{
				"name": "f",
				"description": "The character string naming the function."
			}, {
				"name": "where",
				"description": "The environment, namespace, or search-list position\n  from which to search for objects.  By default, start at the\n  top-level environment of the calling function, typically the global\n  environment (i.e., use the search list), or the namespace of a\n  package from which the call came.  It is important to supply this\n  argument when calling any of these functions indirectly.  With\n  package namespaces, the default is likely to be wrong in such calls."
			}, {
				"name": "signature",
				"description": "The class signature of the relevant method.  A\n    signature is a named or unnamed vector of character strings.  If\n    named, the names must be formal argument names for the generic\n    function.  Signatures are matched to the arguments specified in\n    the signature slot of the generic function (see the Details\n    section of the <code><a rd-options=\"\" href=\"/link/setMethod?package=methods&amp;version=3.3.2\">setMethod</a></code> documentation).\n\n  The <code>signature</code> argument to <code>dumpMethods</code> is ignored (it\n  was used internally in previous implementations)."
			}, {
				"name": "file",
				"description": "The file or connection on which to dump method definitions."
			}, {
				"name": "def",
				"description": "The function object defining the method; if omitted, the\n    current method definition corresponding to the signature."
			}, {
				"name": "...",
				"description": "Named or unnamed arguments to form a signature."
			}, {
				"name": "generic",
				"description": "In testing or finding functions, should generic\n    functions be included.  Supply as <code>FALSE</code> to get only\n    non-generic functions."
			}, {
				"name": "fdef",
				"description": "Optional, the generic function definition.\n\n   Usually omitted in calls to <code>isGeneric</code>"
			}, {
				"name": "getName",
				"description": "If <code>TRUE</code>, <code>isGeneric</code> returns the name of\n    the generic.  By default, it returns <code>TRUE</code>."
			}, {
				"name": "methods",
				"description": "The methods object containing the methods to be dumped.  By default,\n    the methods defined for this generic (optionally on the specified\n    <code>where</code> location)."
			}, {
				"name": "all",
				"description": "in <code>removeMethods</code>, logical indicating if all\n    (default) or only the first method found should be removed."
			}, {
				"name": "searchForm",
				"description": "In <code>getGenerics</code>, if <code>TRUE</code>, the\n    <code>package</code> slot of the returned result is in the form used\n    by <code>search()</code>, otherwise as the simple package name (e.g,\n    <code>&quot;package:base&quot;</code> vs <code>&quot;base&quot;</code>)."
			}]
		}, {
			"name": "findMethods",
			"args": [{
				"name": "f",
				"description": "A generic function or the character-string name of one."
			}, {
				"name": "where",
				"description": "Optionally, an environment or position on the search list\n    to look for methods metadata.\n\n    If <code>where</code> is missing,  <code>findMethods</code> uses the current\n    table of methods in the generic function itself, and\n    <code>hasMethods</code> looks for metadata anywhere in the search list."
			}, {
				"name": "table",
				"description": "If <code>TRUE</code> in a call to <code>getMethods</code> the\n      returned value is the table used for dispatch, including\n      inherited methods discovered to date.  Used internally, but\n      since the default result is the now unused <code>mlist</code> object,\n      the default will likely be changed at some point."
			}, {
				"name": "classes",
				"description": "If supplied, only methods whose signatures contain at\n    least one of the supplied classes will be included in the value\n    returned."
			}, {
				"name": "inherited",
				"description": "Logical flag; if <code>TRUE</code>, the table of all\n    methods, inherited or defined directly, will be used; otherwise,\n    only the methods explicitly defined.  Option <code>TRUE</code> is\n    meaningful only if <code>where</code> is missing."
			}, {
				"name": "...",
				"description": "In the call to <code>findMethodSignatures</code>, any arguments\n    that might be given to <code>findMethods</code>."
			}, {
				"name": "target",
				"description": "Optional flag to <code>findMethodSignatures</code>; if\n    <code>TRUE</code>, the signatures used are the target signatures (the\n    classes for which the method will be selected); if <code>FALSE</code>,\n    they will be the signatures are defined.  The difference is only\n    meaningful if <code>inherited</code> is <code>TRUE</code>."
			}, {
				"name": "methods",
				"description": "In the call to <code>findMethodSignatures</code>, an optional\n    list of methods, presumably returned by a previous call to\n    <code>findMethods</code>.  If missing, that function will be call with the\n    ... arguments."
			}, {
				"name": "package",
				"description": "In a call to <code>hasMethods</code>, the package name for\n    the generic function (e.g., <code>&quot;base&quot;</code> for primitives).  If\n    missing this will be inferred either from the <code>&quot;package&quot;</code>\n    attribute of the function name, if any, or from the package slot of\n    the generic function.  See &#x2018;Details&#x2019;."
			}]
		}, {
			"name": "findClass",
			"args": [{
				"name": "Class",
				"description": "character string name for the class.  The functions will\n    usually take a class definition instead of the string.  To restrict\n    the class to those defined in a particular package, set the\n    <code><a rd-options=\"\" href=\"/link/packageSlot?package=methods&amp;version=3.3.2\">packageSlot</a></code> of the character string."
			}, {
				"name": "where",
				"description": "the <code><a rd-options=\"\" href=\"/link/environment?package=methods&amp;version=3.3.2\">environment</a></code> in which to search for\n    the class definition.  Defaults to the top-level environment of the\n    calling function.  When called from the command line, this has the\n    effect of using all the package environments in the search list.\n\n    To restrict the search to classes in a particular package, use <code>where =\n      asNamespace(pkg)</code> with <code>pkg</code> the package name;  to restrict\n    it to\n    the <em>exported</em> classes, use <code>where = &quot;package:pkg&quot;</code> after the\n    package is attached to the search list."
			}, {
				"name": "formal",
				"description": "<code><a rd-options=\"\" href=\"/link/logical?package=methods&amp;version=3.3.2\">logical</a></code> is a formal definition\n    required? For S compatibility, and always treated as <code>TRUE</code>."
			}, {
				"name": "unique",
				"description": "if <code>findClass</code> expects a unique location for the\n    class, <code>unique</code> is a character string explaining the purpose\n    of the search (and is used in warning and error messages).  By\n    default, multiple locations are possible and the function always\n    returns a list."
			}, {
				"name": "inherits",
				"description": "in a call to <code>getClasses</code>, should the value\n    returned include all parent environments of <code>where</code>, or that\n    environment only?  Defaults to <code>TRUE</code> if <code>where</code> is\n    omitted, and to <code>FALSE</code> otherwise."
			}, {
				"name": "classDef",
				"description": "For <code>resetClass</code>, the optional class\n    definition."
			}]
		}, {
			"name": "getClass",
			"args": [{
				"name": "Class",
				"description": "the character-string name of the class, often with a\n      <code>&quot;package&quot;</code> attribute as noted below under <code>package</code>."
			}, {
				"name": ".Force",
				"description": "if <code>TRUE</code>, return <code>NULL</code> if the class is\n    undefined; otherwise, an undefined class results in an error."
			}, {
				"name": "where",
				"description": "environment from which to begin the search for the definition; by default,\n    start at the top-level (global) environment and proceed through\n    the search list."
			}, {
				"name": "package",
				"description": "the name of the package asserted to hold the\n      definition.  If it is a non-empty string it is used instead of\n      <code>where</code>, as the first place to look for the class.\n      Note that the package must be loaded but need not be attached.  By\n      default, the package attribute of the <code>Class</code> argument is\n      used, if any.  There will usually be a package attribute if\n      <code>Class</code> comes from <code>class(x)</code> for some object."
			}, {
				"name": "inherits",
				"description": "logical; should the class definition be retrieved from\n    any enclosing environment and also from the cache?  If <code>FALSE</code>\n    only a definition in the environment <code>where</code> will be returned."
			}]
		}, {
			"name": "fixPre1.8",
			"args": [{
				"name": "names",
				"description": "Character vector of the names of all the objects to be\n    fixed and re-assigned."
			}, {
				"name": "where",
				"description": "The environment from which to look for the objects, and\n    for class definitions.  Defaults to the top environment of the\n    call to <code>fixPre1.8</code>, the global environment if the function\n    is used interactively."
			}]
		}, {
			"name": "Documentation",
			"args": []
		}, {
			"name": "genericFunction-class",
			"args": []
		}, {
			"name": "dotsMethods",
			"args": []
		}, {
			"name": "getMethod",
			"args": [{
				"name": "f",
				"description": "a generic function or the character-string name of one."
			}, {
				"name": "signature",
				"description": "the signature of classes to match to the arguments\n    of <code>f</code>.  See the details below."
			}, {
				"name": "where",
				"description": "the position or environment in which to look for the\n    method(s):  by default, the table of methods defined in the generic\n    function itself is used."
			}, {
				"name": "optional",
				"description": "if the selection in <code>selectMethod</code> does not find\n    a valid method an error is generated, unless <code>optional</code> is\n    true.  In that case, the value returned is <code>NULL</code> if no method\n    matches."
			}, {
				"name": "mlist, fdef, useInherited, verbose, doCache",
				"description": "optional arguments\n    to  <code>getMethod</code> and <code>selectMethod</code> for internal use.  Avoid\n    these: some will work as expected and others will not, and none of\n    them is required for normal use of the functions."
			}]
		}, {
			"name": "hasArg",
			"args": [{
				"name": "name",
				"description": "The name of a potential argument, as an unquoted name or\n    character string."
			}]
		}, {
			"name": "isSealedMethod",
			"args": [{
				"name": "f",
				"description": "The quoted name of the generic function."
			}, {
				"name": "signature",
				"description": "The class names in the method&apos;s signature, as\n  they would be supplied to <code><a rd-options=\"\" href=\"/link/setMethod?package=methods&amp;version=3.3.2\">setMethod</a></code>."
			}, {
				"name": "fdef",
				"description": "Optional, and usually omitted:  the generic function\n      definition for <code>f</code>."
			}, {
				"name": "Class",
				"description": "The quoted name of the class."
			}, {
				"name": "where",
				"description": "where to search for the method or class definition.  By\n    default, searches from the top environment of the call to\n    <code>isSealedMethod</code> or <code>isSealedClass</code>, typically the\n    global environment or the namespace of a package containing a call\n    to one of the functions."
			}]
		}, {
			"name": "inheritedSlotNames",
			"args": [{
				"name": "Class",
				"description": "character string or\n    <code>classRepresentation</code>, i.e., resulting from\n    <code><a rd-options=\"\" href=\"/link/getClass?package=methods&amp;version=3.3.2\">getClass</a></code>."
			}, {
				"name": "where",
				"description": "environment, to be passed further to\n    <code><a rd-options=\"\" href=\"/link/isClass?package=methods&amp;version=3.3.2\">isClass</a></code> and <code><a rd-options=\"\" href=\"/link/getClass?package=methods&amp;version=3.3.2\">getClass</a></code>."
			}]
		}, {
			"name": "implicitGeneric",
			"args": [{
				"name": "name",
				"description": "Character string name of the function."
			}, {
				"name": "where",
				"description": "Package or environment in which to register the implicit\n    generics.  When using the functions from the top level of your own\n    package source, this argument should be omitted."
			}, {
				"name": "generic",
				"description": "Obsolete, and likely to be deprecated."
			}, {
				"name": "restore",
				"description": "Should the non-generic version of the function be\n    restored?."
			}, {
				"name": "what",
				"description": "Optional table of\n    the implicit generics to register, but nearly always omitted, when\n    it defaults to a standard metadata name."
			}]
		}, {
			"name": "language-class",
			"args": []
		}, {
			"name": "Introduction",
			"args": []
		}, {
			"name": "is",
			"args": [{
				"name": "object",
				"description": "any <span style=\"R\">R</span> object."
			}, {
				"name": "class1, class2",
				"description": "the names of the classes between which <code>is</code> relations are to be\n    examined defined, or (more efficiently) the class definition\n    objects for the classes."
			}, {
				"name": "fullInfo",
				"description": "In a call to <code>extends</code>, with <code>class2</code> missing,\n    <code>fullInfo</code> is a flag, which if <code>TRUE</code> causes a list of\n    objects of class <code>SClassExtension</code> to be returned, rather than\n    just the names of the classes.  Only the distance slot is likely to\n    be useful in practice; see the &#x2018;Selecting Superclasses&#x2019; section;"
			}, {
				"name": "maybe",
				"description": "What to return for conditional inheritance.  But such\n    relationships are rarely used and not recommended, so this\n    argument should not be needed."
			}]
		}, {
			"name": "getPackageName",
			"args": [{
				"name": "where",
				"description": "the environment or position on the search list\n    associated with the desired package."
			}, {
				"name": "object",
				"description": "object providing a character string name, plus the\n    package in which this object is to be found."
			}, {
				"name": "value",
				"description": "the name of the package."
			}, {
				"name": "create",
				"description": "flag, should a package name be created if none can be\n     inferred?  If <code>TRUE</code> and no non-empty package name is found,\n     the current date and time are used as a package name, and a\n     warning is issued. The created name is stored in the environment\n     if that environment is not locked."
			}, {
				"name": "pkg, env",
				"description": "make the string in <code>pkg</code> the internal\n    package name for all computations that set class and method\n    definitions in environment <code>env</code>."
			}]
		}, {
			"name": "initialize-methods",
			"args": []
		}, {
			"name": "MethodDefinition-class",
			"args": []
		}, {
			"name": "LocalReferenceClasses",
			"args": []
		}, {
			"name": "Methods_for_Nongenerics",
			"args": []
		}, {
			"name": "Methods_for_S3",
			"args": []
		}, {
			"name": "methods-defunct",
			"args": []
		}, {
			"name": "LinearMethodsList-class",
			"args": []
		}, {
			"name": "Methods_Details",
			"args": []
		}, {
			"name": "languageEl",
			"args": []
		}, {
			"name": "methods-deprecated",
			"args": []
		}, {
			"name": "method.skeleton",
			"args": [{
				"name": "generic",
				"description": "the character string name of the generic function, or\n      the generic function itself.  In the first case, the function\n      need not currently be a generic, as it would not for the\n      resulting call to <code><a rd-options=\"\" href=\"/link/setMethod?package=methods&amp;version=3.3.2\">setMethod</a></code>."
			}, {
				"name": "signature",
				"description": "the method signature, as it would be given to <code><a rd-options=\"\" href=\"/link/setMethod?package=methods&amp;version=3.3.2\">setMethod</a></code>"
			}, {
				"name": "file",
				"description": "a character string name for the output file, or a\n      writable connection.  By default the generic function name and\n      the classes in the signature are concatenated, with separating\n      underscore characters.  The file name should normally end in <code>&quot;.R&quot;</code>."
			}, {
				"name": "external",
				"description": "flag to control whether the function definition for\n      the method should be a separate external object assigned in the\n      source file, or included in line in the call to\n      <code><a rd-options=\"\" href=\"/link/setMethod?package=methods&amp;version=3.3.2\">setMethod</a></code>.\n    If supplied as a character string, this will be used as the name\n    for the external function; by default the name concatenates the\n    generic and signature names, with separating underscores."
			}, {
				"name": "where",
				"description": "The environment in which to look for the function; by default,\n    the top-level environment of the call to <code>method.skeleton</code>."
			}]
		}, {
			"name": "MethodWithNext-class",
			"args": []
		}, {
			"name": "new",
			"args": [{
				"name": "Class",
				"description": "either the name of a class, a <code><a rd-options=\"\" href=\"/link/character?package=methods&amp;version=3.3.2\">character</a></code>\n    string, (the usual case) or the object describing the class (e.g.,\n    the value returned by <code>getClass</code>)."
			}, {
				"name": "...",
				"description": "data to include in the new object.  Named arguments\n    correspond to slots in the class definition. Unnamed arguments must\n    be objects from classes that this class extends."
			}, {
				"name": ".Object",
				"description": "An object:  see the Details section."
			}]
		}, {
			"name": "Methods",
			"args": []
		}, {
			"name": "methods-package",
			"args": []
		}, {
			"name": "nonStructure-class",
			"args": []
		}, {
			"name": "callNextMethod",
			"args": [{
				"name": "...",
				"description": "Optionally, the arguments to the function in its next call\n    (but note that the dispatch is as in the detailed description below;\n    the arguments have no effect on selecting the next method.)\n\n    If no arguments are included in the call to <code>callNextMethod</code>, the\n    effect is to call the method with the current arguments.\n    See the detailed description for what this really means.\n\n    Calling with no arguments is often the natural way to use\n    <code>callNextMethod</code>; see the examples."
			}]
		}, {
			"name": "MethodsList",
			"args": []
		}, {
			"name": "MethodsList-class",
			"args": []
		}, {
			"name": "MethodSupport",
			"args": []
		}, {
			"name": "methodUtilities",
			"args": []
		}, {
			"name": "ObjectsWithPackage-class",
			"args": []
		}, {
			"name": "RMethodUtils",
			"args": []
		}, {
			"name": "promptClass",
			"args": [{
				"name": "clName",
				"description": "a character string naming the class to be documented."
			}, {
				"name": "filename",
				"description": "usually, a connection or a character string giving the\n    name of the file to which the documentation shell should be written.\n    The default corresponds to a file whose name is the topic name for\n    the class documentation, followed by <code>&quot;.Rd&quot;</code>.  Can also be\n    <code>NA</code> (see below)."
			}, {
				"name": "type",
				"description": "the documentation type to be declared in the output file."
			}, {
				"name": "keywords",
				"description": "the keywords to include in the shell of the\n    documentation.  The keyword <code>&quot;classes&quot;</code> should be one of\n    them."
			}, {
				"name": "where",
				"description": "where to look for the definition of the class and of\n    methods that use it."
			}, {
				"name": "generatorName",
				"description": "the name for a generator function for this\n    class; only required if a generator function was created\n    <em>and</em> saved under a name different from the class name."
			}]
		}, {
			"name": "removeMethod",
			"args": [{
				"name": "f, signature, where",
				"description": "As for <code><a rd-options=\"\" href=\"/link/setMethod?package=methods&amp;version=3.3.2\">setMethod</a>()</code>."
			}]
		}, {
			"name": "S3Part",
			"args": [{
				"name": "object",
				"description": "an object from some class that extends a registered\n    S3 class, or a basic\n    vector, matrix or array object type.\n\n    For most of the functions, an S3 object can also be supplied,\n    with the interpretation that it is its own S3 part."
			}, {
				"name": "strictS3",
				"description": "If <code>TRUE</code>, the value returned by\n    <code>S3Part</code> will be an S3 object, with all the S4 slots\n    removed.  Otherwise, an S4 object will always\n    be returned; for example, from the S4 class created by\n    <code><a rd-options=\"\" href=\"/link/setOldClass?package=methods&amp;version=3.3.2\">setOldClass</a></code> as a proxy for an S3 class, rather than\n    the underlying S3 object."
			}, {
				"name": "S3Class",
				"description": "the <code><a rd-options=\"\" href=\"/link/character?package=methods&amp;version=3.3.2\">character</a></code> vector to be stored as the\n    S3 class slot in the object.  Usually, and by default, retains\n    the slot from <code>object</code>, but an S3 superclass is allowed."
			}, {
				"name": "classDef",
				"description": "a class definition object, as returned by\n    <code><a rd-options=\"\" href=\"/link/getClass?package=methods&amp;version=3.3.2\">getClass</a></code>.\n\n<em>The remaining arguments apply only to the replacement versions,\n  which are not recommended.</em>"
			}, {
				"name": "needClass",
				"description": "Require that the replacement value be this class or a\n    subclass of it."
			}, {
				"name": "value",
				"description": "For <code>S3Part<-< code=\"\">, the replacement value for the\n    S3 part of the object.\n\n    For <code>S3Class<-< code=\"\">, the character vector that will be used as\n    a proxy for <code>class(x)</code> in S3 method dispatch.\n  </-<></code></-<></code>"
			}]
		}, {
			"name": "promptMethods",
			"args": [{
				"name": "f",
				"description": "a character string naming the generic function whose methods\n    are to be documented."
			}, {
				"name": "filename",
				"description": "usually, a connection or a character string giving the\n    name of the file to which the documentation shell should be written.\n    The default corresponds to the coded topic name for these methods\n    (currently, <code>f</code> followed by <code>&quot;-methods.Rd&quot;</code>).  Can also be\n    <code>FALSE</code> or <code>NA</code> (see below)."
			}, {
				"name": "methods",
				"description": "Optional methods list object giving the methods to be\n    documented.  By default, the first methods object for this generic\n    is used (for example, if the current global environment has some\n    methods for <code>f</code>, these would be documented).\n\n    If this argument is supplied, it is likely to be\n    <code>getMethods(f, where)</code>, with <code>where</code> some package\n    containing methods for <code>f</code>."
			}]
		}, {
			"name": "representation",
			"args": [{
				"name": "...",
				"description": "The call to representation takes arguments that are single character\n    strings.  Unnamed arguments are classes that a newly defined class\n    extends; named arguments name the explicit slots in the new class,\n    and specify what class each slot should have.\n\n    In the call to <code>prototype</code>, if an unnamed argument is\n    supplied, it unconditionally forms the basis for the prototype\n    object.  Remaining arguments are taken to correspond to slots of\n    this object.  It is an error to supply more than one unnamed argument."
			}]
		}, {
			"name": "RClassUtils",
			"args": []
		}, {
			"name": "S4groupGeneric",
			"args": [{
				"name": "x, z, e1, e2",
				"description": "objects."
			}, {
				"name": "digits",
				"description": "number of digits to be used in <code>round</code> or <code>signif</code>."
			}, {
				"name": "...",
				"description": "further arguments passed to or from methods."
			}, {
				"name": "na.rm",
				"description": "logical: should missing values be removed?"
			}]
		}, {
			"name": "SClassExtension-class",
			"args": []
		}, {
			"name": "setClass",
			"args": [{
				"name": "Class",
				"description": "character string name for the class."
			}, {
				"name": "slots",
				"description": "A named vector with the names being those of the slots in\n      the new class.  Each element of the vector specifies an\n      existing class; the corresponding slot must be from this class\n      or a subclass of it.  This argument\n      must be supplied by name, <code>slots=</code>, in the call, for back compatibility\n      with other arguments no longer recommended.\n\n\n    It is allowed to provide an unnamed character vector as a limiting\n    case, with the elements taken as slot names and all slots having\n    the unrestricted class <code>&quot;ANY&quot;</code>."
			}, {
				"name": "contains",
				"description": "A vector specifying existing classes from which\n      this class should inherit. The new class will have all the slots\n      of the superclasses, with the same requirements on the classes\n      of these slots.  This argument\n      must be supplied by name, <code>contains=</code>, in the call, for back compatibility\n      with other arguments no longer recommended.\n      \n      See the section &#x2018;Virtual Classes&#x2019; for the special\n      superclass  <code>&quot;VIRTUAL&quot;</code>."
			}, {
				"name": "prototype, where, validity, sealed, package",
				"description": "<em>These arguments are currently allowed, but either they are unlikely to be\n        useful or there are modern alternatives that are preferred.</em>\n\n     <code>prototype</code>: supplies an object with the default\n    data for the slots in this class.  A more flexible approach is to\n    write a method for <code><a rd-options=\"\" href=\"/link/initialize?package=methods&amp;version=3.3.2\">initialize</a>()</code>.\n\n  <code>where</code>: supplies an environment in which to store the definition.\n    Should not be used:  For calls to\n    <code>setClass()</code> appearing in the source code for a package the\n    definition will be stored in the namespace of the package.\n\n  <code>validity</code>: supplied a validity-checking method\n    for objects from this class.  For clearer code, use a separate\n    call to <code><a rd-options=\"\" href=\"/link/setValidity?package=methods&amp;version=3.3.2\">setValidity</a>()</code>.\n\n  <code>sealed</code>: if <code>TRUE</code>, the class definition will be sealed,\n    so that another call to <code>setClass</code> will fail on this class\n    name.  But the definition is automatically sealed after the\n    namespace is loaded, so explicit sealing it is not needed.\n\n  <code>package</code>: supplies an optional package name for the class, but\n  the class attribute should be  the package in which the class\n  definition is assigned, as it is by default."
			}, {
				"name": "representation, access, version, S3methods",
				"description": "<em>All these\n    arguments are deprecated from version 3.0.0 of <span style=\"R\">R</span> and should be\n    avoided</em>.\n\n    <code>representation</code> is an argument inherited from S that\n    included both <code>slots</code> and <code>contains</code>, but the use of\n    the latter two arguments is clearer and recommended.\n\n    <code>access</code> and <code>version</code> are included for\n    historical compatibility with S-Plus, but ignored.\n \n    <code>S3methods</code> is a flag indicating that old-style methods\n    will be written involving this class; ignored now."
			}]
		}, {
			"name": "setAs",
			"args": [{
				"name": "from, to",
				"description": "The classes between which the coerce methods\n    <code>def</code> and <code>replace</code> perform coercion."
			}, {
				"name": "def",
				"description": "function of one argument.  It will get an object from\n    class <code>from</code> and had better return an object of class\n    <code>to</code>.  The convention is that\n    the name of the argument is <code>from</code>; if another argument name\n    is used, <code>setAs</code> will attempt to substitute <code>from</code>."
			}, {
				"name": "replace",
				"description": "if supplied, the function to use as a replacement\n    method, when <code>as</code> is used on the left of an assignment.\n    Should be a function of two arguments, <code>from, value</code>,\n    although <code>setAs</code> will attempt to substitute if the arguments\n    differ.\n\n<em>The remaining argument will not be used in standard applications.</em>"
			}, {
				"name": "where",
				"description": "the position or environment in which to store the\n    resulting methods. Do not use this argument when defining a method\n    in a package.  Only the default, the namespace of the package,\n    should be used in normal situations."
			}]
		}, {
			"name": "selectSuperClasses",
			"args": [{
				"name": "Class",
				"description": "name of the class or (more efficiently) the class\n    definition object (see <code><a rd-options=\"\" href=\"/link/getClass?package=methods&amp;version=3.3.2\">getClass</a></code>)."
			}, {
				"name": "dropVirtual",
				"description": "logical indicating if only non-virtual superclasses\n    should be returned."
			}, {
				"name": "namesOnly",
				"description": "logical indicating if only a vector names instead of\n    a named list class-extensions should be returned."
			}, {
				"name": "directOnly",
				"description": "logical indicating if only a <em>direct</em> super\n  classes should be returned."
			}, {
				"name": "simpleOnly",
				"description": "logical indicating if only simple class extensions\n    should be returned."
			}, {
				"name": "where",
				"description": "(only used when <code>Class</code> is not a class definition)\n    environment where the class definition of <code>Class</code> is found."
			}, {
				"name": "ext",
				"description": "for <code>.selectSuperClasses()</code> only, a <code><a rd-options=\"\" href=\"/link/list?package=methods&amp;version=3.3.2\">list</a></code>\n    of class extensions, typically <code><a rd-options=\"\" href=\"/link/getClassDef?package=methods&amp;version=3.3.2\">getClassDef</a>(..)@contains</code>."
			}]
		}, {
			"name": "setClassUnion",
			"args": [{
				"name": "name",
				"description": "the name for the new union class."
			}, {
				"name": "members",
				"description": "the names of the classes that should be members of this union."
			}, {
				"name": "where",
				"description": "where to save the new class definition.  In calls from\n    a package&apos;s source code, should be omitted to save the definition\n    in the package&apos;s namespace."
			}, {
				"name": "Class",
				"description": "the name or definition of a class."
			}]
		}, {
			"name": "testInheritedMethods",
			"args": [{
				"name": "f",
				"description": "a generic function or the character string name of one.  By default,\n    all currently defined subclasses of all the method signatures for this\n    generic will be examined.  The other arguments are mainly options to\n    modify which inheritance patterns will be examined."
			}, {
				"name": "signatures",
				"description": "An optional set of subclass signatures to use instead of the relevant\n    subclasses computed by <code>testInheritedMethods</code>.  See the Details\n    for how this is done.  This argument might be supplied after a call\n    with <code>test = FALSE</code>, to test selection in batches."
			}, {
				"name": "test",
				"description": "optional flag to control whether method selection is actually tested.\n    If <code>FALSE</code>, returns just the list of relevant signatures for\n    subclasses, without calling <code><a rd-options=\"\" href=\"/link/selectMethod?package=methods&amp;version=3.3.2\">selectMethod</a></code> for each signature.\n    If there are a very large number of signatures, you may want to collect the full list  and then test them in batches."
			}, {
				"name": "virtual",
				"description": "should virtual classes be included in the relevant subclasses.\n    Normally not, since only the classes of actual arguments will trigger\n    the inheritance calculation in a call to the generic function.\n    Including virtual classes may be useful if the class has no current\n    non-virtual subclasses but you anticipate your users may define such\n    classes in the future."
			}, {
				"name": "groupMethods",
				"description": "should methods for the group generic function be included?"
			}, {
				"name": "where",
				"description": "the environment in which to look for class definitions.  Nearly\n    always, use the default global environment after attaching all the\n    packages with relevant methods and/or class definitions."
			}]
		}, {
			"name": "TraceClasses",
			"args": []
		}, {
			"name": "setOldClass",
			"args": [{
				"name": "Classes",
				"description": "A character vector, giving the names for S3\n    classes, as they would appear on the right side of an assignment of\n    the <code>class</code> attribute in S3 computations.\n\n    In addition to S3 classes, an object type or other valid data part\n    can be specified, if the S3 class is known to require its data to\n    be of that form."
			}, {
				"name": "S4Class",
				"description": "optionally, the class definition or the class name\n    of an S4 class.  The new class will have all the slots and other\n    properties of this class, plus any S3 inheritance implied by\n    multiple names in the <code>Classes</code> argument.  See the section\n    on &#x201C;S3 classes with known attributes&#x201D; below."
			}, {
				"name": "prototype, where, test",
				"description": "<em>These arguments are currently\n        allowed, but not recommended in typical applications.</em>\n\n  <code>prototype</code>:\n    An optional object to use as the prototype.  If the S3 class is\n    not to be <code>VIRTUAL</code> (the default), the use of <code>S4Class=</code> is\n    preferred. \n  \n  <code>where</code>:\n    Where to store the class definitions. Should be the default (the\n    package namespace) for normal use in an application package.\n  \n  <code>test</code>: flag, if <code>TRUE</code>, arrange to test inheritance\n    explicitly for each object, needed if the S3 class can have a\n    different set of class strings, with the same first string.\n    Such classes are inherently malformed, are rare, and should be avoided."
			}]
		}, {
			"name": "setMethod",
			"args": [{
				"name": "f",
				"description": "The character-string name of the generic function. The unquoted name usually works as well (evaluating to the generic function), except for a few functions in the base package."
			}, {
				"name": "signature",
				"description": "The classes required for some of the arguments. Most applications just require one or two character strings matching the first argument(s) in the signature. More complicated cases follow R&apos;s rule for argument matching. See the details below; however, if the signature is not trivial, you should use <code><a rd-options=\"\" href=\"/link/method.skeleton?package=methods&amp;version=3.3.2\">method.skeleton</a></code> to generate a valid call to <code>setMethod</code>."
			}, {
				"name": "definition",
				"description": "A function definition, which will become the method\n    called when the arguments in a call to <code>f</code> match the\n    classes in <code>signature</code>, directly or through inheritance.\n    The definition must be a function with the same formal arguments\n    as the generic; however, <code>setMethod()</code> will handle methods\n    that add arguments, if <code>...</code> is a formal argument to the generic.\n  See the Details section."
			}, {
				"name": "where, valueClass, sealed",
				"description": "<em>These arguments are allowed\n        but either obsolete or rarely appropriate.</em>\n\n      <code>where</code>: where to store the definition; should be the\n      default, the namespace for the package.\n\n  <code>valueClass</code> Obsolete. \n\n  <code>sealed</code> prevents the method being redefined, but should never\n    be needed when the method is defined in the source code of a\n    package."
			}]
		}, {
			"name": "showMethods",
			"args": [{
				"name": "f",
				"description": "one or more function names.  If omitted, all functions\n    will be shown that match the other arguments.\n\n    The argument can also be an expression that evaluates to a single\n    generic function, in which\n    case argument <code>fdef</code> is ignored.  Providing an expression for\n    the function allows examination of hidden or anonymous functions;\n    see the example for <code>isDiagonal()</code>."
			}, {
				"name": "where",
				"description": "Where to find the generic function, if not supplied as an\n    argument. When <code>f</code> is missing, or length 0, this also\n    determines which generic functions to examine.  If <code>where</code> is\n    supplied, only the generic functions returned by\n    <code>getGenerics(where)</code> are eligible for printing.  If\n    <code>where</code> is also missing, all the cached generic functions are\n    considered."
			}, {
				"name": "classes",
				"description": "If argument <code>classes</code> is supplied, it is a vector\n    of class names that restricts the displayed results to those methods\n    whose signatures include one or more of those classes."
			}, {
				"name": "includeDefs",
				"description": "If <code>includeDefs</code> is <code>TRUE</code>, include the\n    definitions of the individual methods in the printout."
			}, {
				"name": "inherited",
				"description": "logical indicating if methods that have been found by\n    inheritance, so far in the session, will be included and marked as\n    inherited.  Note that an inherited method will not usually appear\n    until it has been used in this session.  See\n    <code><a rd-options=\"\" href=\"/link/selectMethod?package=methods&amp;version=3.3.2\">selectMethod</a></code> if you want to know what method would be\n    dispatched for particular classes of arguments."
			}, {
				"name": "showEmpty",
				"description": "logical indicating whether methods with no defined\n    methods matching the other criteria should be shown at all.  By\n    default, <code>TRUE</code> if and only if argument <code>f</code> is not\n    missing."
			}, {
				"name": "printTo",
				"description": "The connection on which the information will be\n    shown; by default, on standard output."
			}, {
				"name": "fdef",
				"description": "Optionally, the generic function definition to use; if\n    missing, one is found, looking in <code>where</code> if that is specified.\n    See also comment in &#x2018;Details&#x2019;."
			}, {
				"name": "generic.function, class",
				"description": "See <code>methods</code>."
			}]
		}, {
			"name": "signature-class",
			"args": []
		}, {
			"name": "setGeneric",
			"args": [{
				"name": "name",
				"description": "The character string name of the generic function."
			}, {
				"name": "def",
				"description": "An optional function object, defining the non-generic\n      version, to become the default method.  This is equivalent in\n      effect to assigning <code>def</code> as the function and then using\n      the one-argument call to <code>setGeneric</code>.\n\n      <em>The following arguments are specialized, optionally used\n        when creating a new generic function with non-standard\n        features. They should not be used when the non-generic is in\n        another package.</em>"
			}, {
				"name": "group",
				"description": "The name of the group\n    generic function to which this function belongs.  See\n    <a rd-options=\"\" href=\"/link/Methods_Details?package=methods&amp;version=3.3.2\">Methods_Details</a> for details of group generic functions in method\n    selection and <a rd-options=\"\" href=\"/link/S4groupGeneric?package=methods&amp;version=3.3.2\">S4groupGeneric</a> for existing groups."
			}, {
				"name": "valueClass",
				"description": "A character vector specifying one or more class\n    names.  The value returned by the generic function must\n    have (or extend) this class, or one of the classes; otherwise,\n    an error is generated."
			}, {
				"name": "signature",
				"description": "The vector of names from among the formal arguments to\n    the function, that will be allowed in the signature of methods for this\n    function, in calls to <code><a rd-options=\"\" href=\"/link/setMethod?package=methods&amp;version=3.3.2\">setMethod</a></code>.  By default and\n    usually, this will be all formal arguments except <code>...</code>.\n\n    A non-standard signature for the generic function may be\n    used to exclude arguments that take advantage of lazy evaluation;\n    in particular, if the argument may <em>not</em> be evaluated then it\n    cannot be part of the signature.\n\n    While <code>...</code> cannot be used as part of a general signature,\n    it is possible to have this as the <em>only</em> element of the\n    signature.\n    Methods will then be selected if their signature matches\n    all the <code>...</code> arguments.  See the documentation for topic\n    <a rd-options=\"\" href=\"/link/dotsMethods?package=methods&amp;version=3.3.2\">dotsMethods</a> for details.  It is not\n    possible to mix <code>...</code> and other arguments in the signature.\n\n    It&apos;s usually a mistake to omit arguments from the signature in the\n    belief that this improves efficiency.  For method selection, the\n    arguments that are used in the signatures for the <em>methods</em>\n    are what counts, and then only seriously on the first call to the\n    function with that combination of classes."
			}, {
				"name": "simpleInheritanceOnly",
				"description": "Supply this argument as <code>TRUE</code> to require that methods selected\n    be inherited through simple inheritance only; that is, from\n    superclasses specified in the <code>contains=</code> argument to\n    <code><a rd-options=\"\" href=\"/link/setClass?package=methods&amp;version=3.3.2\">setClass</a></code>, or by simple inheritance to a class union or\n    other virtual class.  Generic functions should require simple\n    inheritance if they need to be assured that they get the complete\n    original object, not one that has been transformed.  Examples of\n    functions requiring simple inheritance are <code><a rd-options=\"\" href=\"/link/initialize?package=methods&amp;version=3.3.2\">initialize</a></code>,\n    because by definition it must return an object from the same class\n    as its argument, and <code><a rd-options=\"\" href=\"/link/show?package=methods&amp;version=3.3.2\">show</a></code>, because it claims to give a\n    full description of the object provided as its argument."
			}, {
				"name": "useAsDefault",
				"description": "Override the usual default method mechanism.  Only relevant when\n    defining a nonstandard generic function.\n    See the section &#x2018;Specialized Local Generics&#x2019;.\n\n    <em>The remaining arguments are obsolete for normal applications.</em>"
			}, {
				"name": "package",
				"description": "The name of the package with which this function is\n    associated.  Should be determined automatically from the\n    non-generic version."
			}, {
				"name": "where",
				"description": "Where to store the resulting objects as side effects.\n      The default, to store in the package&apos;s namespace, is the only\n      safe choice."
			}, {
				"name": "genericFunction",
				"description": "Obsolete."
			}]
		}, {
			"name": "setGroupGeneric",
			"args": [{
				"name": "name",
				"description": "the character string name of the generic function."
			}, {
				"name": "def",
				"description": "A function object.  There isn&apos;t likely to be an existing\n    nongeneric of this name, so some function needs to be supplied.  Any\n    known member or other function with the same argument list will do,\n    because the group generic cannot be called directly."
			}, {
				"name": "group, valueClass",
				"description": "arguments to pass to\n    <code><a rd-options=\"\" href=\"/link/setGeneric?package=methods&amp;version=3.3.2\">setGeneric</a></code>."
			}, {
				"name": "knownMembers",
				"description": "the names of functions that are\n    known to be members of this group.  This information is used to\n    reset cached definitions of the member generics when information\n    about the group generic is changed."
			}, {
				"name": "package, where",
				"description": "passed to <code><a rd-options=\"\" href=\"/link/setGeneric?package=methods&amp;version=3.3.2\">setGeneric</a></code>, but\n    obsolete and to be avoided."
			}]
		}, {
			"name": "StructureClasses",
			"args": []
		}, {
			"name": "setIs",
			"args": [{
				"name": "class1, class2",
				"description": "the names of the classes between which <code>is</code> relations are to be\n    examined defined, or (more efficiently) the class definition\n    objects for the classes."
			}, {
				"name": "coerce, replace",
				"description": "functions optionally supplied to coerce the object to\n    <code>class2</code>, and to alter the object so that <code>is(object, class2)</code>\n    is identical to <code>value</code>.  See the details section below."
			}, {
				"name": "test",
				"description": "a <em>conditional</em> relationship is\n    defined by supplying this function.  Conditional relations are\n    discouraged and are not included in selecting methods.  See the details section below.\n\n  The remaining arguments are for internal use and/or usually omitted."
			}, {
				"name": "extensionObject",
				"description": "alternative to the <code>test, coerce,\n    replace, by</code> arguments; an object from class\n    <code>SClassExtension</code> describing the relation.  (Used in internal calls.)"
			}, {
				"name": "doComplete",
				"description": "when <code>TRUE</code>, the class definitions will be\n    augmented with indirect relations as well.  (Used in internal calls.)"
			}, {
				"name": "by",
				"description": "In a call to <code>setIs</code>, the name of an intermediary class.\n    Coercion will proceed by first coercing to this class and from there\n    to the target class.  (The intermediate coercions have to be valid.)"
			}, {
				"name": "where",
				"description": "In a call to <code>setIs</code>, where to store the metadata defining the\n    relationship.  Default is the global environment for calls from the\n    top level of the session or a source file evaluated there.  When the\n    call occurs in the top level of a file in the source of a package,\n    the default will be the namespace or environment of the package.\n    Other uses are tricky and not usually a good idea, unless you really\n    know what you are doing."
			}, {
				"name": "classDef",
				"description": "Optional class definition for <code>class</code> , required internally\n    when <code>setIs</code> is called during the initial definition of the\n    class by a call to <code><a rd-options=\"\" href=\"/link/setClass?package=methods&amp;version=3.3.2\">setClass</a></code>. <em>Don&apos;t</em> use this\n    argument, unless you really know why you&apos;re doing so."
			}]
		}, {
			"name": "substituteDirect",
			"args": []
		}, {
			"name": "setLoadActions",
			"args": [{
				"name": "action, ...",
				"description": "functions of one or more arguments, to be called when this package is\n    loaded. The functions will be called with one argument (the package\n    namespace) so all following arguments must have default values.\n\n    If the elements of ... are named, these names will be used for the\n    corresponding load metadata."
			}, {
				"name": "where, .where",
				"description": "the namespace of the package for which the list of load actions are\n    defined. This argument is normally omitted if the call comes from the\n    source code for the package itself, but will be needed if a package\n    supplies load actions for another package."
			}, {
				"name": "aname",
				"description": "the name for the action.  If an action is set without\n    supplying a name,  the default uses the position in the sequence of\n    actions specified (<code>&quot;.1&quot;</code>, etc.)."
			}, {
				"name": "expr",
				"description": "an expression to be evaluated in a load action in\n    environment <code>where</code>.  In the case of <code>evalqOnLoad()</code>,\n    the expression is interpreted literally, in that of\n    <code>evalOnLoad()</code> it must be precomputed, typically as an object\n    of type <code>&quot;language&quot;</code>."
			}]
		}, {
			"name": "show",
			"args": [{
				"name": "object",
				"description": "Any R object"
			}]
		}, {
			"name": "makeClassRepresentation",
			"args": [{
				"name": "name",
				"description": "character string name for the class"
			}, {
				"name": "slots",
				"description": "named list of slot classes as would be supplied to\n    <code>setClass</code>, but <em>without</em> the unnamed arguments for\n    superClasses if any."
			}, {
				"name": "superClasses",
				"description": "what classes does this class extend"
			}, {
				"name": "prototype",
				"description": "an object providing the default data for the class,\n    e.g., the result of a call to <code><a rd-options=\"\" href=\"/link/prototype?package=methods&amp;version=3.3.2\">prototype</a></code>."
			}, {
				"name": "package",
				"description": "The character string name for the package in which\n    the class will be stored; see <code><a rd-options=\"\" href=\"/link/getPackageName?package=methods&amp;version=3.3.2\">getPackageName</a></code>."
			}, {
				"name": "validity",
				"description": "Optional validity method.  See\n    <code><a rd-options=\"\" href=\"/link/validObject?package=methods&amp;version=3.3.2\">validObject</a></code>, and the discussion of validity methods in\n    the reference."
			}, {
				"name": "access",
				"description": "Access information.  Not currently used."
			}, {
				"name": "version",
				"description": "Optional version key for version control.  Currently\n    generated, but not used."
			}, {
				"name": "sealed",
				"description": "Is the class sealed? See <code><a rd-options=\"\" href=\"/link/setClass?package=methods&amp;version=3.3.2\">setClass</a></code>."
			}, {
				"name": "virtual",
				"description": "Is this known to be a virtual class?"
			}, {
				"name": "where",
				"description": "The environment from which to look for class\n      definitions needed (e.g., for slots or superclasses). See the\n      discussion of this argument under <a rd-options=\"\" href=\"/link/GenericFunctions?package=methods&amp;version=3.3.2\">GenericFunctions</a>."
			}]
		}, {
			"name": "slot",
			"args": [{
				"name": "object",
				"description": "An object from a formally defined class."
			}, {
				"name": "name",
				"description": "The name of the slot. The operator\n    takes a fixed name, which can be unquoted if it is syntactically a\n    name in the language.  A slot name can be any non-empty string, but\n    if the name is not made up of letters, numbers, and <code>.</code>, it\n    needs to be quoted (by backticks or single or double quotes).\n\n    In the case of the <code>slot</code> function, <code>name</code> can be any\n    expression that evaluates to a valid slot in the class definition.\n    Generally, the only reason to use the functional form rather than\n    the simpler operator is <em>because</em> the slot name has to be computed."
			}, {
				"name": "value",
				"description": "A new value for the named slot.  The value must be\n    valid for this slot in this object&apos;s class."
			}, {
				"name": "check",
				"description": "In the replacement version of <code>slot</code>, a flag.  If\n    <code>TRUE</code>, check the assigned value for validity\n    as the value of this slot.  User&apos;s coded should not set this to\n    <code>FALSE</code> in normal use, since the resulting object can be invalid."
			}, {
				"name": "x",
				"description": "either the name of a class (as character string), or a class\n    definition.  If given an argument that is neither a character string\n    nor a class definition, <code>slotNames</code> (only) uses <code>class(x)</code>\n    instead."
			}]
		}, {
			"name": "envRefClass-class",
			"args": []
		}, {
			"name": "validObject",
			"args": [{
				"name": "object",
				"description": "any object, but not much will happen unless the\n    object&apos;s class has a formal definition."
			}, {
				"name": "test",
				"description": "logical; if <code>TRUE</code> and validity fails, the\n    function returns a vector of strings describing the problems.  If\n    <code>test</code> is <code>FALSE</code> (the default) validity failure generates\n    an error."
			}, {
				"name": "complete",
				"description": "logical; if <code>TRUE</code>, validity methods will be\n    applied recursively to any of the slots that have such methods."
			}, {
				"name": "Class",
				"description": "the name or class definition of the class whose validity\n    method is to be set."
			}, {
				"name": "ClassDef",
				"description": "a class definition object, as from\n    <code><a rd-options=\"\" href=\"/link/getClassDef?package=methods&amp;version=3.3.2\">getClassDef</a></code>."
			}, {
				"name": "method",
				"description": "a validity method;  that is, either <code>NULL</code> or a\n    function of one argument (<code>object</code>).  Like\n    <code>validObject</code>, the function should return <code>TRUE</code> if the\n    object is valid, and one or more descriptive strings if any problems\n    are found.  Unlike <code>validObject</code>, it should never generate an\n    error."
			}, {
				"name": "where",
				"description": "the modified class definition will be stored in this\n    environment."
			}]
		}, {
			"name": ".BasicFunsList",
			"args": []
		}]
	}
}, {
	"parallel": {
		"functions": [{
			"name": "RNGstreams",
			"args": [{
				"name": "seed",
				"description": "An integer vector of length 7 as given by\n    <code>.Random.seed</code> when the <span class=\"samp\">&quot;L&apos;Ecuyer-CMRG&quot;</span> RNG is in use.\n    See <code><a rd-options=\"\" href=\"/link/RNG?package=parallel&amp;version=3.3.2\">RNG</a></code> for the valid values."
			}, {
				"name": "cl",
				"description": "A cluster from this package or package \\href{https://CRAN.R-project.org/package=#1}{\\pkg{#1}}snow<a href=\"https://CRAN.R-project.org/package=snow\"><span class=\"pkg\">snow</span></a>, or (if\n    <code>NULL</code>) the registered cluster."
			}, {
				"name": "iseed",
				"description": "An integer to be supplied to <code><a rd-options=\"\" href=\"/link/set.seed?package=parallel&amp;version=3.3.2\">set.seed</a></code>, or\n    <code>NULL</code> not to set reproducible seeds."
			}]
		}, {
			"name": "parallel-package",
			"args": []
		}, {
			"name": "makeCluster",
			"args": [{
				"name": "spec",
				"description": "A specification appropriate to the type of cluster."
			}, {
				"name": "names",
				"description": "Either a character vector of host names on which to run\n    the worker copies of <span style=\"R\">R</span>, or a positive integer (in which case\n    that number of copies is run on <span class=\"samp\">localhost</span>)."
			}, {
				"name": "nnodes",
				"description": "The number of nodes to be forked."
			}, {
				"name": "type",
				"description": "One of the supported types: see &#x2018;Details&#x2019;."
			}, {
				"name": "...",
				"description": "Options to be passed to the function spawning the workers.\n    See &#x2018;Details&#x2019;."
			}, {
				"name": "cl",
				"description": "an object of class <code>&quot;cluster&quot;</code>."
			}]
		}, {
			"name": "splitIndices",
			"args": [{
				"name": "nx",
				"description": "Number of tasks."
			}, {
				"name": "ncl",
				"description": "Number of cluster nodes."
			}]
		}, {
			"name": "detectCores",
			"args": [{
				"name": "all.tests",
				"description": "Logical: if true apply all known tests."
			}, {
				"name": "logical",
				"description": "Logical: if possible, use the number of physical CPUs/cores\n    (if <code>FALSE</code>) or logical CPUs (if <code>TRUE</code>).  Currently this\n    is honoured only on Linux, macOS, Sparc Solaris and Windows."
			}]
		}, {
			"name": "clusterApply",
			"args": [{
				"name": "cl",
				"description": "a cluster object, created by this package or by package\n    \\href{https://CRAN.R-project.org/package=#1}{\\pkg{#1}}snow<a href=\"https://CRAN.R-project.org/package=snow\"><span class=\"pkg\">snow</span></a>.  If <code>NULL</code>, use the registered default cluster."
			}, {
				"name": "fun, FUN",
				"description": "function or character string naming a function."
			}, {
				"name": "expr",
				"description": "expression to evaluate."
			}, {
				"name": "seq",
				"description": "vector to split."
			}, {
				"name": "varlist",
				"description": "character vector of names of objects to export."
			}, {
				"name": "envir",
				"description": "environment from which t export variables"
			}, {
				"name": "x",
				"description": "a vector for <code>clusterApply</code> and <code>clusterApplyLB</code>, a\n    matrix for <code>parRapply</code> and <code>parCapply</code>."
			}, {
				"name": "...",
				"description": "additional arguments to pass to <code>fun</code> or <code>FUN</code>:\n    beware of partial matching to earlier arguments."
			}, {
				"name": "MoreArgs",
				"description": "additional arguments for <code>fun</code>."
			}, {
				"name": "RECYCLE",
				"description": "logical; if true shorter arguments are recycled."
			}, {
				"name": "X",
				"description": "A vector (atomic or list) for <code>parLapply</code> and\n    <code>parSapply</code>, an array for <code>parApply</code>."
			}, {
				"name": "MARGIN",
				"description": "vector specifying the dimensions to use."
			}, {
				"name": "simplify, USE.NAMES",
				"description": "logical; see <code><a rd-options=\"\" href=\"/link/sapply?package=parallel&amp;version=3.3.2\">sapply</a></code>."
			}, {
				"name": "SIMPLIFY",
				"description": "logical; see <code><a rd-options=\"\" href=\"/link/mapply?package=parallel&amp;version=3.3.2\">mapply</a></code>."
			}, {
				"name": ".scheduling",
				"description": "should tasks be statically allocated to nodes or\n    dynamic load-balancing used?"
			}]
		}]
	}
}, {
	"splines": {
		"functions": [{
			"name": "splineDesign",
			"args": [{
				"name": "knots",
				"description": "a numeric vector of knot positions (which will be sorted\n    increasingly if needed)."
			}, {
				"name": "x",
				"description": "a numeric vector of values at which to evaluate the B-spline\n    functions or derivatives.  Unless <code>outer.ok</code> is true, the\n    values in <code>x</code> must be between the &#x201C;inner&#x201D; knots\n    <code>knots[ord]</code> and <code>knots[ length(knots) - (ord-1)]</code>."
			}, {
				"name": "ord",
				"description": "a positive integer giving the order of the spline function.\n    This is the number of coefficients in each piecewise polynomial\n    segment, thus a cubic spline has order 4.  Defaults to 4."
			}, {
				"name": "derivs",
				"description": "an integer vector with values between <code>0</code> and\n    <code>ord - 1</code>, conceptually recycled to the length of <code>x</code>.\n    The derivative of the given order is evaluated at the <code>x</code>\n    positions.  Defaults to zero (or a vector of zeroes of the same\n    length as <code>x</code>)."
			}, {
				"name": "outer.ok",
				"description": "logical indicating if <code>x</code> should be allowed\n    outside the <em>inner</em> knots, see the <code>x</code> argument."
			}, {
				"name": "sparse",
				"description": "logical indicating if the result should inherit from class\n    <code>&quot;<a rd-options=\"Matrix:sparseMatrix-class\" href=\"/link/sparseMatrix?package=splines&amp;version=3.3.2&amp;to=Matrix%3AsparseMatrix-class\">sparseMatrix</a>&quot;</code> (from package \\href{https://CRAN.R-project.org/package=#1}{\\pkg{#1}}Matrix<a href=\"https://CRAN.R-project.org/package=Matrix\"><span class=\"pkg\">Matrix</span></a>)."
			}]
		}, {
			"name": "polySpline",
			"args": [{
				"name": "object",
				"description": "An object that inherits from class <code>spline</code>."
			}, {
				"name": "...",
				"description": "Optional additional arguments.  At present no additional\n     arguments are used."
			}]
		}, {
			"name": "backSpline",
			"args": [{
				"name": "object",
				"description": "an object that inherits from class <code>nbSpline</code> or\n    <code>npolySpline</code>.  That is, the object must represent a natural\n    interpolation spline but it can be either in the B-spline\n    representation or the piecewise polynomial one.  The spline is\n    checked to see if it represents a monotone function."
			}]
		}, {
			"name": "predict.bSpline",
			"args": [{
				"name": "object",
				"description": "An object that inherits from the <code>bSpline</code> or the\n    <code>polySpline</code> class."
			}, {
				"name": "x",
				"description": "A numeric vector of <code>x</code> values at which to evaluate the\n    spline.  If this argument is missing a suitable set of <code>x</code>\n    values is generated as a sequence of <code>nseq</code> segments spanning\n    the range of the knots."
			}, {
				"name": "nseg",
				"description": "A positive integer giving the number of segments in a set\n    of equally-spaced <code>x</code> values spanning the range of the knots\n    in <code>object</code>.  This value is only used if <code>x</code> is missing."
			}, {
				"name": "deriv",
				"description": "An integer between 0 and <code>splineOrder(object) - 1</code>\n    specifying the derivative to evaluate."
			}, {
				"name": "...",
				"description": "further arguments passed to or from other methods."
			}]
		}, {
			"name": "asVector",
			"args": [{
				"name": "object",
				"description": "An object."
			}]
		}, {
			"name": "interpSpline",
			"args": [{
				"name": "obj1",
				"description": "either a numeric vector of <code>x</code> values or a formula."
			}, {
				"name": "obj2",
				"description": "if <code>obj1</code> is numeric this should be a numeric vector\n   of the same length.  If <code>obj1</code> is a formula this can be an\n   optional data frame in which to evaluate the names in the formula."
			}, {
				"name": "bSpline",
				"description": "if <code>TRUE</code> the b-spline representation is returned,\n   otherwise the piecewise polynomial representation is returned.\n   Defaults to <code>FALSE</code>."
			}, {
				"name": "period",
				"description": "an optional positive numeric value giving a period for a\n   periodic interpolation spline."
			}, {
				"name": "na.action",
				"description": "a optional function which indicates what should happen\n   when the data contain <code>NA</code>s.  The default action\n   (<code>na.omit</code>) is to omit any incomplete observations.  The\n   alternative action <code>na.fail</code> causes <code>interpSpline</code> to print\n   an error message and terminate if there are any incomplete\n   observations."
			}, {
				"name": "sparse",
				"description": "logical passed to the underlying\n   <code><a rd-options=\"\" href=\"/link/splineDesign?package=splines&amp;version=3.3.2\">splineDesign</a></code>.  If true, saves memory and is faster when\n   there are more than a few hundred points."
			}]
		}, {
			"name": "bs",
			"args": [{
				"name": "x",
				"description": "the predictor variable.  Missing values are allowed."
			}, {
				"name": "df",
				"description": "degrees of freedom; one can specify <code>df</code> rather than\n    <code>knots</code>; <code>bs()</code> then chooses <code>df-degree</code> (minus one\n    if there is an intercept) knots at suitable quantiles of <code>x</code>\n    (which will ignore missing values).  The default, <code>NULL</code>,\n    corresponds to <em>no</em> inner knots, i.e., <code>degree - intercept</code>."
			}, {
				"name": "knots",
				"description": "the <em>internal</em> breakpoints that define the\n    spline.  The default is <code>NULL</code>, which results in a basis for\n    ordinary polynomial regression.  Typical values are the mean or\n    median for one knot, quantiles for more knots.  See also\n    <code>Boundary.knots</code>."
			}, {
				"name": "degree",
				"description": "degree of the piecewise polynomial---default is <code>3</code> for\n    cubic splines."
			}, {
				"name": "intercept",
				"description": "if <code>TRUE</code>, an intercept is included in the\n    basis; default is <code>FALSE</code>."
			}, {
				"name": "Boundary.knots",
				"description": "boundary points at which to anchor the B-spline\n    basis (default the range of the non-<code><a rd-options=\"\" href=\"/link/NA?package=splines&amp;version=3.3.2\">NA</a></code> data).  If both\n    <code>knots</code> and <code>Boundary.knots</code> are supplied, the basis\n    parameters do not depend on <code>x</code>.  Data can extend beyond\n    <code>Boundary.knots</code>."
			}]
		}, {
			"name": "ns",
			"args": [{
				"name": "x",
				"description": "the predictor variable.  Missing values are allowed."
			}, {
				"name": "df",
				"description": "degrees of freedom. One can supply <code>df</code> rather than\n    knots; <code>ns()</code> then chooses <code>df - 1 - intercept</code> knots at\n    suitably chosen quantiles of <code>x</code> (which will ignore missing\n    values).  The default, <code>df = 1</code>, corresponds to <em>no</em> knots."
			}, {
				"name": "knots",
				"description": "breakpoints that define the spline.  The default is no\n    knots; together with the natural boundary conditions this results in\n    a basis for linear regression on <code>x</code>.  Typical values are the\n    mean or median for one knot, quantiles for more knots.  See also\n    <code>Boundary.knots</code>."
			}, {
				"name": "intercept",
				"description": "if <code>TRUE</code>, an intercept is included in the\n    basis; default is <code>FALSE</code>."
			}, {
				"name": "Boundary.knots",
				"description": "boundary points at which to impose the natural\n    boundary conditions and anchor the B-spline basis (default the range\n    of the data).  If both <code>knots</code> and <code>Boundary.knots</code> are\n    supplied, the basis parameters do not depend on <code>x</code>. Data can\n    extend beyond <code>Boundary.knots</code>"
			}]
		}, {
			"name": "predict.bs",
			"args": [{
				"name": "object",
				"description": "the result of a call to <code><a rd-options=\"\" href=\"/link/bs?package=splines&amp;version=3.3.2\">bs</a></code> or\n    <code><a rd-options=\"\" href=\"/link/ns?package=splines&amp;version=3.3.2\">ns</a></code> having attributes describing <code>knots</code>,\n    <code>degree</code>, etc."
			}, {
				"name": "newx",
				"description": "the <code>x</code> values at which evaluations are required."
			}, {
				"name": "...",
				"description": "Optional additional arguments.  At present no additional\n    arguments are used."
			}]
		}, {
			"name": "splineKnots",
			"args": [{
				"name": "object",
				"description": "an object that inherits from class <code>&quot;spline&quot;</code>."
			}]
		}, {
			"name": "splines-package",
			"args": []
		}, {
			"name": "periodicSpline",
			"args": [{
				"name": "obj1",
				"description": "either a numeric vector of <code>x</code> values or a formula."
			}, {
				"name": "obj2",
				"description": "if <code>obj1</code> is numeric this should be a numeric vector\n   of the same length.  If <code>obj1</code> is a formula this can be an\n   optional data frame in which to evaluate the names in the formula."
			}, {
				"name": "knots",
				"description": "optional numeric vector of knot positions."
			}, {
				"name": "period",
				"description": "positive numeric value giving the period for the\n   periodic spline.  Defaults to <code>2 * pi</code>."
			}, {
				"name": "ord",
				"description": "integer giving the order of the spline, at least 2.  Defaults\n   to 4.  See <code><a rd-options=\"\" href=\"/link/splineOrder?package=splines&amp;version=3.3.2\">splineOrder</a></code> for a definition of the order of\n   a spline."
			}]
		}, {
			"name": "splineOrder",
			"args": [{
				"name": "object",
				"description": "An object that inherits from class <code>&quot;spline&quot;</code>."
			}]
		}, {
			"name": "xyVector",
			"args": [{
				"name": "x",
				"description": "a numeric vector"
			}, {
				"name": "y",
				"description": "a numeric vector of the same length as <code>x</code>"
			}]
		}]
	}
}, {
	"stats": {
		"functions": [{
			"name": "alias",
			"args": [{
				"name": "object",
				"description": "A fitted model object, for example from <code>lm</code> or\n    <code>aov</code>, or a formula for <code>alias.formula</code>."
			}, {
				"name": "data",
				"description": "Optionally, a data frame to search for the objects\n    in the formula."
			}, {
				"name": "complete",
				"description": "Should information on complete aliasing be included?"
			}, {
				"name": "partial",
				"description": "Should information on partial aliasing be included?"
			}, {
				"name": "partial.pattern",
				"description": "Should partial aliasing be presented in a\n    schematic way? If this is done, the results are presented in a\n    more compact way, usually giving the deciles of the coefficients."
			}, {
				"name": "...",
				"description": "further arguments passed to or from other methods."
			}]
		}, {
			"name": "acf2AR",
			"args": [{
				"name": "acf",
				"description": "An autocorrelation or autocovariance sequence."
			}]
		}, {
			"name": "anova.lm",
			"args": [{
				"name": "object, ...",
				"description": "objects of class <code>lm</code>, usually, a result of a\n    call to <code><a rd-options=\"\" href=\"/link/lm?package=stats&amp;version=3.3.2\">lm</a></code>."
			}, {
				"name": "test",
				"description": "a character string specifying the test statistic to be\n    used. Can be one of <code>&quot;F&quot;</code>, <code>&quot;Chisq&quot;</code> or <code>&quot;Cp&quot;</code>,\n    with partial matching allowed, or <code>NULL</code> for no test."
			}, {
				"name": "scale",
				"description": "numeric. An estimate of the noise variance\n    $\\sigma^2$. If zero this will be estimated from the\n    largest model considered."
			}]
		}, {
			"name": "anova.glm",
			"args": [{
				"name": "object, ...",
				"description": "objects of class <code>glm</code>, typically\n    the result of a call to <code><a rd-options=\"\" href=\"/link/glm?package=stats&amp;version=3.3.2\">glm</a></code>, or a list of\n    <code>objects</code> for the <code>&quot;glmlist&quot;</code> method."
			}, {
				"name": "dispersion",
				"description": "the dispersion parameter for the fitting family.\n    By default it is obtained from the object(s)."
			}, {
				"name": "test",
				"description": "a character string, (partially) matching one of <code>&quot;Chisq&quot;</code>,\n  <code>&quot;LRT&quot;</code>, <code>&quot;Rao&quot;</code>,\n    <code>&quot;F&quot;</code> or <code>&quot;Cp&quot;</code>. See <code><a rd-options=\"\" href=\"/link/stat.anova?package=stats&amp;version=3.3.2\">stat.anova</a></code>."
			}]
		}, {
			"name": "add1",
			"args": [{
				"name": "object",
				"description": "a fitted model object."
			}, {
				"name": "scope",
				"description": "a formula giving the terms to be considered for adding or\n    dropping."
			}, {
				"name": "scale",
				"description": "an estimate of the residual mean square to be\n    used in computing $Cp$. Ignored if <code>0</code> or <code>NULL</code>."
			}, {
				"name": "test",
				"description": "should the results include a test statistic relative to the\n    original model?  The F test is only appropriate for <code><a rd-options=\"\" href=\"/link/lm?package=stats&amp;version=3.3.2\">lm</a></code> and\n    <code><a rd-options=\"\" href=\"/link/aov?package=stats&amp;version=3.3.2\">aov</a></code> models or perhaps for <code><a rd-options=\"\" href=\"/link/glm?package=stats&amp;version=3.3.2\">glm</a></code> fits with\n    estimated dispersion.\n    The $Chisq$ test can be an exact test\n    (<code>lm</code> models with known scale) or a likelihood-ratio test or a\n    test of the reduction in scaled deviance depending on the method.\n    For <code><a rd-options=\"\" href=\"/link/glm?package=stats&amp;version=3.3.2\">glm</a></code> fits, you can also choose <code>&quot;LRT&quot;</code> and\n    <code>&quot;Rao&quot;</code> for likelihood ratio tests and Rao&apos;s efficient score test.\n    The former is synonymous with <code>&quot;Chisq&quot;</code> (although both have\n    an asymptotic chi-square distribution).\n    Values can be abbreviated."
			}, {
				"name": "k",
				"description": "the penalty constant in AIC / $Cp$."
			}, {
				"name": "trace",
				"description": "if <code>TRUE</code>, print out progress reports."
			}, {
				"name": "x",
				"description": "a model matrix containing columns for the fitted model and all\n    terms in the upper scope.  Useful if <code>add1</code> is to be called\n    repeatedly.  <b>Warning:</b> no checks are done on its validity."
			}, {
				"name": "all.cols",
				"description": "(Provided for compatibility with S.)  Logical to specify\n    whether all columns of the design matrix should be used.  If\n    <code>FALSE</code> then non-estimable columns are dropped, but the result\n    is not usually statistically meaningful."
			}, {
				"name": "...",
				"description": "further arguments passed to or from other methods."
			}]
		}, {
			"name": "aggregate",
			"args": [{
				"name": "x",
				"description": "an R object."
			}, {
				"name": "by",
				"description": "a list of grouping elements, each as long as the variables\n    in the data frame <code>x</code>.  The elements are coerced to factors\n    before use."
			}, {
				"name": "FUN",
				"description": "a function to compute the summary statistics which can be\n    applied to all data subsets."
			}, {
				"name": "simplify",
				"description": "a logical indicating whether results should be\n    simplified to a vector or matrix if possible."
			}, {
				"name": "drop",
				"description": "a logical indicating whether to drop unused combinations\n    of grouping values."
			}, {
				"name": "formula",
				"description": "a <a rd-options=\"\" href=\"/link/formula?package=stats&amp;version=3.3.2\">formula</a>, such as <code>y ~ x</code> or\n    <code>cbind(y1, y2) ~ x1 + x2</code>, where the <code>y</code> variables are\n    numeric data to be split into groups according to the grouping\n    <code>x</code> variables (usually factors)."
			}, {
				"name": "data",
				"description": "a data frame (or list) from which the variables in formula\n    should be taken."
			}, {
				"name": "subset",
				"description": "an optional vector specifying a subset of observations\n    to be used."
			}, {
				"name": "na.action",
				"description": "a function which indicates what should happen when\n    the data contain <code>NA</code> values. The default is to ignore missing\n    values in the given variables."
			}, {
				"name": "nfrequency",
				"description": "new number of observations per unit of time; must\n    be a divisor of the frequency of <code>x</code>."
			}, {
				"name": "ndeltat",
				"description": "new fraction of the sampling period between\n    successive observations; must be a divisor of the sampling\n    interval of <code>x</code>."
			}, {
				"name": "ts.eps",
				"description": "tolerance used to decide if <code>nfrequency</code> is a\n    sub-multiple of the original frequency."
			}, {
				"name": "...",
				"description": "further arguments passed to or used by methods."
			}]
		}, {
			"name": "AIC",
			"args": [{
				"name": "object",
				"description": "a fitted model object for which there exists a\n    <code>logLik</code> method to extract the corresponding log-likelihood, or\n    an object inheriting from class <code>logLik</code>."
			}, {
				"name": "...",
				"description": "optionally more fitted model objects."
			}, {
				"name": "k",
				"description": "numeric, the <em>penalty</em> per parameter to be used; the\n    default <code>k = 2</code> is the classical AIC."
			}]
		}, {
			"name": "anova",
			"args": [{
				"name": "object",
				"description": "an object containing the results returned by a model\n    fitting function (e.g., <code>lm</code> or <code>glm</code>)."
			}, {
				"name": "...",
				"description": "additional objects of the same type."
			}]
		}, {
			"name": "acf",
			"args": [{
				"name": "x, y",
				"description": "a univariate or multivariate (not <code>ccf</code>) numeric time\n    series object or a numeric vector or matrix, or an <code>&quot;acf&quot;</code> object."
			}, {
				"name": "lag.max",
				"description": "maximum lag at which to calculate the acf.\n    Default is $10*log10(N/m)$ where $N$ is the\n    number of observations and $m$ the number of series.  Will\n    be automatically limited to one less than the number of observations\n    in the series."
			}, {
				"name": "type",
				"description": "character string giving the type of acf to be computed.\n    Allowed values are\n    <code>&quot;correlation&quot;</code> (the default), <code>&quot;covariance&quot;</code> or\n    <code>&quot;partial&quot;</code>.  Will be partially matched."
			}, {
				"name": "plot",
				"description": "logical. If <code>TRUE</code> (the default) the acf is plotted."
			}, {
				"name": "na.action",
				"description": "function to be called to handle missing\n    values. <code>na.pass</code> can be used."
			}, {
				"name": "demean",
				"description": "logical.  Should the covariances be about the sample\n    means?"
			}, {
				"name": "...",
				"description": "further arguments to be passed to <code>plot.acf</code>."
			}, {
				"name": "i",
				"description": "a set of lags (time differences) to retain."
			}, {
				"name": "j",
				"description": "a set of series (names or numbers) to retain."
			}]
		}, {
			"name": "addmargins",
			"args": [{
				"name": "A",
				"description": "table or array.  The function uses the presence of the\n    <code>&quot;dim&quot;</code> and <code>&quot;dimnames&quot;</code> attributes of <code>A</code>."
			}, {
				"name": "margin",
				"description": "vector of dimensions over which to form margins.  Margins\n    are formed in the order in which dimensions are specified in\n    <code>margin</code>."
			}, {
				"name": "FUN",
				"description": "list of the same length as <code>margin</code>, each element of\n    the list being either a function or a list of functions.  Names of\n    the list elements will appear as levels in dimnames of the result.\n    Unnamed list elements will have names constructed:  the name\n    of a function or a constructed name based on the position in the table."
			}, {
				"name": "quiet",
				"description": "logical which suppresses the message telling the order in\n    which the margins were computed."
			}]
		}, {
			"name": "ar",
			"args": [{
				"name": "x",
				"description": "A univariate or multivariate time series."
			}, {
				"name": "aic",
				"description": "Logical flag.  If <code>TRUE</code> then the Akaike Information\n    Criterion is used to choose the order of the autoregressive\n    model. If <code>FALSE</code>, the model of order <code>order.max</code> is\n    fitted."
			}, {
				"name": "order.max",
				"description": "Maximum order (or order) of model to fit. Defaults\n    to the smaller of $N-1$ and $10*log10(N)$\n    where $N$ is the number of observations\n    except for <code>method = &quot;mle&quot;</code> where it is the minimum of this\n    quantity and 12."
			}, {
				"name": "method",
				"description": "Character string giving the method used to fit the\n    model.  Must be one of the strings in the default argument\n    (the first few characters are sufficient).  Defaults to\n    <code>&quot;yule-walker&quot;</code>."
			}, {
				"name": "na.action",
				"description": "function to be called to handle missing values."
			}, {
				"name": "demean",
				"description": "should a mean be estimated during fitting?"
			}, {
				"name": "series",
				"description": "names for the series.  Defaults to\n    <code>deparse(substitute(x))</code>."
			}, {
				"name": "var.method",
				"description": "the method to estimate the innovations variance\n    (see &#x2018;Details&#x2019;)."
			}, {
				"name": "...",
				"description": "additional arguments for specific methods."
			}, {
				"name": "object",
				"description": "a fit from <code>ar</code>."
			}, {
				"name": "newdata",
				"description": "data to which to apply the prediction."
			}, {
				"name": "n.ahead",
				"description": "number of steps ahead at which to predict."
			}, {
				"name": "se.fit",
				"description": "logical: return estimated standard errors of the\n    prediction error?"
			}]
		}, {
			"name": "approxfun",
			"args": [{
				"name": "x, y",
				"description": "numeric vectors giving the coordinates of the points to be\n    interpolated.  Alternatively a single plotting structure can be\n    specified: see <code><a rd-options=\"\" href=\"/link/xy.coords?package=stats&amp;version=3.3.2\">xy.coords</a></code>."
			}, {
				"name": "xout",
				"description": "an optional set of numeric values specifying where\n    interpolation is to take place."
			}, {
				"name": "method",
				"description": "specifies the interpolation method to be used.  Choices\n    are <code>&quot;linear&quot;</code> or <code>&quot;constant&quot;</code>."
			}, {
				"name": "n",
				"description": "If <code>xout</code> is not specified, interpolation takes place at\n    <code>n</code> equally spaced points spanning the interval [<code>min(x)</code>,\n    <code>max(x)</code>]."
			}, {
				"name": "yleft",
				"description": "the value to be returned when input <code>x</code> values are\n    less than <code>min(x)</code>. The default is defined by the value\n    of <code>rule</code> given below."
			}, {
				"name": "yright",
				"description": "the value to be returned when input <code>x</code> values are\n    greater than <code>max(x)</code>. The default is defined by the value\n    of <code>rule</code> given below."
			}, {
				"name": "rule",
				"description": "an integer (of length 1 or 2) describing how interpolation\n    is to take place outside the interval [<code>min(x)</code>, <code>max(x)</code>].\n    If <code>rule</code> is <code>1</code> then <code>NA</code>s are returned for such\n    points and if it is <code>2</code>, the value at the closest data extreme\n    is used.  Use, e.g., <code>rule = 2:1</code>, if the left and right side\n    extrapolation should differ."
			}, {
				"name": "f",
				"description": "for <code>method = &quot;constant&quot;</code> a number between 0 and 1\n    inclusive, indicating a compromise between left- and \n    right-continuous step functions. If <code>y0</code> and <code>y1</code> are\n    the values to the left and right of the point then the value is\n    <code>y0</code> if <code>f == 0</code>, <code>y1</code> if <code>f == 1</code>, and\n    <code> y0*(1-f)+y1*f</code> for intermediate values. In this way the result is\n    right-continuous for <code>f == 0</code> and left-continuous for <code>f\n    == 1</code>, even for non-finite <code>y</code> values."
			}, {
				"name": "ties",
				"description": "Handling of tied <code>x</code> values.  Either a function\n    with a single vector argument returning a single number result or\n    the string <code>&quot;ordered&quot;</code>."
			}]
		}, {
			"name": "ARMAacf",
			"args": [{
				"name": "ar",
				"description": "numeric vector of AR coefficients"
			}, {
				"name": "ma",
				"description": "numeric vector of MA coefficients"
			}, {
				"name": "lag.max",
				"description": "integer.  Maximum lag required.  Defaults to\n    <code>max(p, q+1)</code>, where <code>p, q</code> are the numbers of AR and MA\n    terms respectively."
			}, {
				"name": "pacf",
				"description": "logical.  Should the partial autocorrelations be returned?"
			}]
		}, {
			"name": "ar.ols",
			"args": [{
				"name": "x",
				"description": "A univariate or multivariate time series."
			}, {
				"name": "aic",
				"description": "Logical flag.  If <code>TRUE</code> then the Akaike Information\n    Criterion is used to choose the order of the autoregressive\n    model. If <code>FALSE</code>, the model of order <code>order.max</code> is\n    fitted."
			}, {
				"name": "order.max",
				"description": "Maximum order (or order) of model to fit. Defaults\n    to $10*log10(N)$ where $N$ is the number\n    of observations."
			}, {
				"name": "na.action",
				"description": "function to be called to handle missing values."
			}, {
				"name": "demean",
				"description": "should the AR model be for <code>x</code> minus its mean?"
			}, {
				"name": "intercept",
				"description": "should a separate intercept term be fitted?"
			}, {
				"name": "series",
				"description": "names for the series.  Defaults to\n    <code>deparse(substitute(x))</code>."
			}, {
				"name": "...",
				"description": "further arguments to be passed to or from methods."
			}]
		}, {
			"name": "aov",
			"args": [{
				"name": "formula",
				"description": "A formula specifying the model."
			}, {
				"name": "data",
				"description": "A data frame in which the variables specified in the\n    formula will be found. If missing, the variables are searched for in\n    the standard way."
			}, {
				"name": "projections",
				"description": "Logical flag: should the projections be returned?"
			}, {
				"name": "qr",
				"description": "Logical flag: should the QR decomposition be returned?"
			}, {
				"name": "contrasts",
				"description": "A list of contrasts to be used for some of the factors\n    in the formula. These are not used for any <code>Error</code> term, and\n    supplying contrasts for factors only in the <code>Error</code> term will give\n    a warning."
			}, {
				"name": "...",
				"description": "Arguments to be passed to <code>lm</code>, such as <code>subset</code>\n    or <code>na.action</code>.  See &#x2018;Details&#x2019; about <code>weights</code>."
			}]
		}, {
			"name": "arima",
			"args": [{
				"name": "x",
				"description": "a univariate time series"
			}, {
				"name": "order",
				"description": "A specification of the non-seasonal part of the ARIMA\n    model: the three integer components $(p, d, q)$ are the AR order, the\n    degree of differencing, and the MA order."
			}, {
				"name": "seasonal",
				"description": "A specification of the seasonal part of the ARIMA\n    model, plus the period (which defaults to <code>frequency(x)</code>).\n    This should be a list with components <code>order</code> and\n    <code>period</code>, but a specification of just a numeric vector of\n    length 3 will be turned into a suitable list with the specification\n    as the <code>order</code>."
			}, {
				"name": "xreg",
				"description": "Optionally, a vector or matrix of external regressors,\n    which must have the same number of rows as <code>x</code>."
			}, {
				"name": "include.mean",
				"description": "Should the ARMA model include a mean/intercept term?  The\n    default is <code>TRUE</code> for undifferenced series, and it is ignored\n    for ARIMA models with differencing."
			}, {
				"name": "transform.pars",
				"description": "logical; if true, the AR parameters are\n    transformed to ensure that they remain in the region of\n    stationarity.  Not used for <code>method = &quot;CSS&quot;</code>.  For\n    <code>method = &quot;ML&quot;</code>, it has been advantageous to set\n    <code>transform.pars = FALSE</code> in some cases, see also <code>fixed</code>."
			}, {
				"name": "fixed",
				"description": "optional numeric vector of the same length as the total\n    number of parameters.  If supplied, only <code>NA</code> entries in\n    <code>fixed</code> will be varied.  <code>transform.pars = TRUE</code>\n    will be overridden (with a warning) if any AR parameters are fixed.\n    It may be wise to set <code>transform.pars = FALSE</code> when fixing\n    MA parameters, especially near non-invertibility."
			}, {
				"name": "init",
				"description": "optional numeric vector of initial parameter\n    values.  Missing values will be filled in, by zeroes except for\n    regression coefficients.  Values already specified in <code>fixed</code>\n    will be ignored."
			}, {
				"name": "method",
				"description": "fitting method: maximum likelihood or minimize\n    conditional sum-of-squares.  The default (unless there are missing\n    values) is to use conditional-sum-of-squares to find starting\n    values, then maximum likelihood.  Can be abbreviated."
			}, {
				"name": "n.cond",
				"description": "only used if fitting by conditional-sum-of-squares: the\n    number of initial observations to ignore.  It will be ignored if\n    less than the maximum lag of an AR term."
			}, {
				"name": "SSinit",
				"description": "a string specifying the algorithm to compute the\n    state-space initialization of the likelihood; see\n    <code><a rd-options=\"\" href=\"/link/KalmanLike?package=stats&amp;version=3.3.2\">KalmanLike</a></code> for details.   Can be abbreviated."
			}, {
				"name": "optim.method",
				"description": "The value passed as the <code>method</code> argument to\n    <code><a rd-options=\"\" href=\"/link/optim?package=stats&amp;version=3.3.2\">optim</a></code>."
			}, {
				"name": "optim.control",
				"description": "List of control parameters for <code><a rd-options=\"\" href=\"/link/optim?package=stats&amp;version=3.3.2\">optim</a></code>."
			}, {
				"name": "kappa",
				"description": "the prior variance (as a multiple of the innovations\n    variance) for the past observations in a differenced model.  Do not\n    reduce this."
			}]
		}, {
			"name": "arima0",
			"args": [{
				"name": "x",
				"description": "a univariate time series"
			}, {
				"name": "order",
				"description": "A specification of the non-seasonal part of the ARIMA\n    model: the three components $(p, d, q)$ are the AR order, the\n    degree of differencing, and the MA order."
			}, {
				"name": "seasonal",
				"description": "A specification of the seasonal part of the ARIMA\n    model, plus the period (which defaults to <code>frequency(x)</code>).\n    This should be a list with components <code>order</code> and\n    <code>period</code>, but a specification of just a numeric vector of\n    length 3 will be turned into a suitable list with the specification\n    as the <code>order</code>."
			}, {
				"name": "xreg",
				"description": "Optionally, a vector or matrix of external regressors,\n    which must have the same number of rows as <code>x</code>."
			}, {
				"name": "include.mean",
				"description": "Should the ARIMA model include\n    a mean term? The default is <code>TRUE</code> for undifferenced series,\n    <code>FALSE</code> for differenced ones (where a mean would not affect\n    the fit nor predictions)."
			}, {
				"name": "delta",
				"description": "A value to indicate at which point &#x2018;fast\n      recursions&#x2019; should be used.  See the &#x2018;Details&#x2019; section."
			}, {
				"name": "transform.pars",
				"description": "Logical.  If true, the AR parameters are\n    transformed to ensure that they remain in the region of\n    stationarity.  Not used for <code>method = &quot;CSS&quot;</code>."
			}, {
				"name": "fixed",
				"description": "optional numeric vector of the same length as the total\n    number of parameters.  If supplied, only <code>NA</code> entries in\n    <code>fixed</code> will be varied.  <code>transform.pars = TRUE</code>\n    will be overridden (with a warning) if any ARMA parameters are\n    fixed."
			}, {
				"name": "init",
				"description": "optional numeric vector of initial parameter\n    values.  Missing values will be filled in, by zeroes except for\n    regression coefficients.  Values already specified in <code>fixed</code>\n    will be ignored."
			}, {
				"name": "method",
				"description": "Fitting method: maximum likelihood or minimize\n    conditional sum-of-squares.  Can be abbreviated."
			}, {
				"name": "n.cond",
				"description": "Only used if fitting by conditional-sum-of-squares: the\n    number of initial observations to ignore.  It will be ignored if\n    less than the maximum lag of an AR term."
			}, {
				"name": "optim.control",
				"description": "List of control parameters for <code><a rd-options=\"\" href=\"/link/optim?package=stats&amp;version=3.3.2\">optim</a></code>."
			}, {
				"name": "object",
				"description": "The result of an <code>arima0</code> fit."
			}, {
				"name": "newxreg",
				"description": "New values of <code>xreg</code> to be used for\n    prediction. Must have at least <code>n.ahead</code> rows."
			}, {
				"name": "n.ahead",
				"description": "The number of steps ahead for which prediction is required."
			}, {
				"name": "se.fit",
				"description": "Logical: should standard errors of prediction be returned?"
			}, {
				"name": "...",
				"description": "arguments passed to or from other methods."
			}]
		}, {
			"name": "ansari.test",
			"args": [{
				"name": "x",
				"description": "numeric vector of data values."
			}, {
				"name": "y",
				"description": "numeric vector of data values."
			}, {
				"name": "alternative",
				"description": "indicates the alternative hypothesis and must be\n    one of <code>&quot;two.sided&quot;</code>, <code>&quot;greater&quot;</code> or <code>&quot;less&quot;</code>.  You\n    can specify just the initial letter."
			}, {
				"name": "exact",
				"description": "a logical indicating whether an exact p-value\n    should be computed."
			}, {
				"name": "conf.int",
				"description": "a logical,indicating whether a confidence interval\n    should be computed."
			}, {
				"name": "conf.level",
				"description": "confidence level of the interval."
			}, {
				"name": "formula",
				"description": "a formula of the form <code>lhs ~ rhs</code> where <code>lhs</code>\n    is a numeric variable giving the data values and <code>rhs</code> a factor\n    with two levels giving the corresponding groups."
			}, {
				"name": "data",
				"description": "an optional matrix or data frame (or similar: see\n    <code><a rd-options=\"\" href=\"/link/model.frame?package=stats&amp;version=3.3.2\">model.frame</a></code>) containing the variables in the\n    formula <code>formula</code>.  By default the variables are taken from\n    <code>environment(formula)</code>."
			}, {
				"name": "subset",
				"description": "an optional vector specifying a subset of observations\n    to be used."
			}, {
				"name": "na.action",
				"description": "a function which indicates what should happen when\n    the data contain <code>NA</code>s.  Defaults to\n    <code>getOption(&quot;na.action&quot;)</code>."
			}, {
				"name": "...",
				"description": "further arguments to be passed to or from methods."
			}]
		}, {
			"name": "anova.mlm",
			"args": [{
				"name": "object",
				"description": "an object of class <code>&quot;mlm&quot;</code>."
			}, {
				"name": "...",
				"description": "further objects of class <code>&quot;mlm&quot;</code>."
			}, {
				"name": "test",
				"description": "choice of test statistic (see below).  Can be abbreviated."
			}, {
				"name": "Sigma",
				"description": "(only relevant if  <code>test == &quot;Spherical&quot;</code>).  Covariance\n    matrix assumed proportional to <code>Sigma</code>."
			}, {
				"name": "T",
				"description": "transformation matrix.  By default computed from <code>M</code> and\n    <code>X</code>."
			}, {
				"name": "M",
				"description": "formula or matrix describing the outer projection (see below)."
			}, {
				"name": "X",
				"description": "formula or matrix describing the inner projection (see below)."
			}, {
				"name": "idata",
				"description": "data frame describing intra-block design."
			}, {
				"name": "tol",
				"description": "tolerance to be used in deciding if the residuals are\n    rank-deficient: see <code><a rd-options=\"\" href=\"/link/qr?package=stats&amp;version=3.3.2\">qr</a></code>."
			}]
		}, {
			"name": "arima.sim",
			"args": [{
				"name": "model",
				"description": "A list with component <code>ar</code> and/or <code>ma</code> giving\n    the AR and MA coefficients respectively.  Optionally a component\n    <code>order</code> can be used.  An empty list gives an ARIMA(0, 0, 0)\n    model, that is white noise."
			}, {
				"name": "n",
				"description": "length of output series, before un-differencing.  A strictly\n    positive integer."
			}, {
				"name": "rand.gen",
				"description": "optional: a function to generate the innovations."
			}, {
				"name": "innov",
				"description": "an optional times series of innovations.  If not\n    provided, <code>rand.gen</code> is used."
			}, {
				"name": "n.start",
				"description": "length of &#x2018;burn-in&#x2019; period.  If <code>NA</code>, the\n    default, a reasonable value is computed."
			}, {
				"name": "start.innov",
				"description": "an optional times series of innovations to be used\n    for the burn-in period.  If supplied there must be at least\n    <code>n.start</code> values (and <code>n.start</code> is by default computed\n    inside the function)."
			}, {
				"name": "...",
				"description": "additional arguments for <code>rand.gen</code>.  Most usefully,\n    the standard deviation of the innovations generated by <code>rnorm</code>\n    can be specified by <code>sd</code>."
			}]
		}, {
			"name": "asOneSidedFormula",
			"args": [{
				"name": "object",
				"description": "a one-sided formula, an expression, a numeric value, or a\n   character string."
			}]
		}, {
			"name": "ARMAtoMA",
			"args": [{
				"name": "ar",
				"description": "numeric vector of AR coefficients"
			}, {
				"name": "ma",
				"description": "numeric vector of MA coefficients"
			}, {
				"name": "lag.max",
				"description": "Largest MA(Inf) coefficient required."
			}]
		}, {
			"name": "ave",
			"args": [{
				"name": "x",
				"description": "A numeric."
			}, {
				"name": "...",
				"description": "Grouping variables, typically factors, all of the same\n    <code>length</code> as <code>x</code>."
			}, {
				"name": "FUN",
				"description": "Function to apply for each factor level combination."
			}]
		}, {
			"name": "binom.test",
			"args": [{
				"name": "x",
				"description": "number of successes, or a vector of length 2 giving the\n    numbers of successes and failures, respectively."
			}, {
				"name": "n",
				"description": "number of trials; ignored if <code>x</code> has length 2."
			}, {
				"name": "p",
				"description": "hypothesized probability of success."
			}, {
				"name": "alternative",
				"description": "indicates the alternative hypothesis and must be\n    one of <code>&quot;two.sided&quot;</code>, <code>&quot;greater&quot;</code> or <code>&quot;less&quot;</code>.\n    You can specify just the initial letter."
			}, {
				"name": "conf.level",
				"description": "confidence level for the returned confidence\n    interval."
			}]
		}, {
			"name": "Beta",
			"args": [{
				"name": "x, q",
				"description": "vector of quantiles."
			}, {
				"name": "p",
				"description": "vector of probabilities."
			}, {
				"name": "n",
				"description": "number of observations. If <code>length(n) &gt; 1</code>, the length\n    is taken to be the number required."
			}, {
				"name": "shape1, shape2",
				"description": "non-negative parameters of the Beta distribution."
			}, {
				"name": "ncp",
				"description": "non-centrality parameter."
			}, {
				"name": "log, log.p",
				"description": "logical; if TRUE, probabilities p are given as log(p)."
			}, {
				"name": "lower.tail",
				"description": "logical; if TRUE (default), probabilities are\n    $P[X \\le x]$, otherwise, $P[X &gt; x]$."
			}]
		}, {
			"name": "Binomial",
			"args": [{
				"name": "x, q",
				"description": "vector of quantiles."
			}, {
				"name": "p",
				"description": "vector of probabilities."
			}, {
				"name": "n",
				"description": "number of observations. If <code>length(n) &gt; 1</code>, the length\n    is taken to be the number required."
			}, {
				"name": "size",
				"description": "number of trials (zero or more)."
			}, {
				"name": "prob",
				"description": "probability of success on each trial."
			}, {
				"name": "log, log.p",
				"description": "logical; if TRUE, probabilities p are given as log(p)."
			}, {
				"name": "lower.tail",
				"description": "logical; if TRUE (default), probabilities are\n    $P[X \\le x]$, otherwise, $P[X &gt; x]$."
			}]
		}, {
			"name": "bartlett.test",
			"args": [{
				"name": "x",
				"description": "a numeric vector of data values, or a list of numeric data\n    vectors representing the respective samples, or fitted linear model\n    objects (inheriting from class <code>&quot;lm&quot;</code>)."
			}, {
				"name": "g",
				"description": "a vector or factor object giving the group for the\n    corresponding elements of <code>x</code>.\n    Ignored if <code>x</code> is a list."
			}, {
				"name": "formula",
				"description": "a formula of the form <code>lhs ~ rhs</code> where <code>lhs</code>\n    gives the data values and <code>rhs</code> the corresponding groups."
			}, {
				"name": "data",
				"description": "an optional matrix or data frame (or similar: see\n    <code><a rd-options=\"\" href=\"/link/model.frame?package=stats&amp;version=3.3.2\">model.frame</a></code>) containing the variables in the\n    formula <code>formula</code>.  By default the variables are taken from\n    <code>environment(formula)</code>."
			}, {
				"name": "subset",
				"description": "an optional vector specifying a subset of observations\n    to be used."
			}, {
				"name": "na.action",
				"description": "a function which indicates what should happen when\n    the data contain <code>NA</code>s.  Defaults to\n    <code>getOption(&quot;na.action&quot;)</code>."
			}, {
				"name": "...",
				"description": "further arguments to be passed to or from methods."
			}]
		}, {
			"name": "bandwidth",
			"args": [{
				"name": "x",
				"description": "numeric vector."
			}, {
				"name": "nb",
				"description": "number of bins to use."
			}, {
				"name": "lower, upper",
				"description": "range over which to minimize.  The default is\n    almost always satisfactory.  <code>hmax</code> is calculated internally\n    from a normal reference bandwidth."
			}, {
				"name": "method",
				"description": "either <code>&quot;ste&quot;</code> (&quot;solve-the-equation&quot;) or\n    <code>&quot;dpi&quot;</code> (&quot;direct plug-in&quot;).   Can be abbreviated."
			}, {
				"name": "tol",
				"description": "for method <code>&quot;ste&quot;</code>, the convergence tolerance for\n    <code><a rd-options=\"\" href=\"/link/uniroot?package=stats&amp;version=3.3.2\">uniroot</a></code>.  The default leads to bandwidth estimates\n    with only slightly more than one digit accuracy, which is sufficient\n    for practical density estimation, but possibly not for theoretical\n    simulation studies."
			}]
		}, {
			"name": "biplot",
			"args": [{
				"name": "x",
				"description": "The <code>biplot</code>, a fitted object. For <code>biplot.default</code>,\n    the first set of points (a two-column matrix), usually associated\n    with observations."
			}, {
				"name": "y",
				"description": "The second set of points (a two-column matrix), usually associated\n    with variables."
			}, {
				"name": "var.axes",
				"description": "If <code>TRUE</code> the second set of points have arrows\n    representing them as (unscaled) axes."
			}, {
				"name": "col",
				"description": "A vector of length 2 giving the colours for the first and\n    second set of points respectively (and the corresponding axes). If a\n    single colour is specified it will be used for both sets.  If\n    missing the default colour is looked for in the\n    <code><a rd-options=\"\" href=\"/link/palette?package=stats&amp;version=3.3.2\">palette</a></code>: if there it and the next colour as used,\n    otherwise the first two colours of the palette are used."
			}, {
				"name": "cex",
				"description": "The character expansion factor used for labelling the\n    points. The labels can be of different sizes for the two sets by\n    supplying a vector of length two."
			}, {
				"name": "xlabs",
				"description": "A vector of character strings to label the first set of\n    points: the default is to use the row dimname of <code>x</code>, or\n    <code>1:n</code> if the dimname is <code>NULL</code>."
			}, {
				"name": "ylabs",
				"description": "A vector of character strings to label the second set of\n    points: the default is to use the row dimname of <code>y</code>, or\n    <code>1:n</code> if the dimname is <code>NULL</code>."
			}, {
				"name": "expand",
				"description": "An expansion factor to apply when plotting the second set\n    of points relative to the first. This can be used to tweak the\n    scaling of the two sets to a physically comparable scale."
			}, {
				"name": "arrow.len",
				"description": "The length of the arrow heads on the axes plotted in\n    <code>var.axes</code> is true. The arrow head can be suppressed by\n    <code>arrow.len = 0</code>."
			}, {
				"name": "xlim, ylim",
				"description": "Limits for the x and y axes in the units of the\n    first set of variables."
			}, {
				"name": "main, sub, xlab, ylab, ...",
				"description": "graphical parameters."
			}]
		}, {
			"name": "as.hclust",
			"args": [{
				"name": "x",
				"description": "Hierarchical clustering object"
			}, {
				"name": "...",
				"description": "further arguments passed to or from other methods."
			}]
		}, {
			"name": "biplot.princomp",
			"args": [{
				"name": "x",
				"description": "an object of class <code>&quot;princomp&quot;</code>."
			}, {
				"name": "choices",
				"description": "length 2 vector specifying the components to plot. Only the default\n    is a biplot in the strict sense."
			}, {
				"name": "scale",
				"description": "The variables are scaled by <code>lambda ^ scale</code> and the\n    observations are scaled by <code>lambda ^ (1-scale)</code> where\n    <code>lambda</code> are the singular values as computed by\n    <code><a rd-options=\"\" href=\"/link/princomp?package=stats&amp;version=3.3.2\">princomp</a></code>. Normally <code>0 <= scale=\"\" <=\"1&lt;/code\">, and a warning\n    will be issued if the specified <code>scale</code> is outside this range.\n  </=></code>"
			}, {
				"name": "pc.biplot",
				"description": "If true, use what Gabriel (1971) refers to as a &quot;principal component\n    biplot&quot;, with <code>lambda = 1</code> and observations scaled up by sqrt(n) and\n    variables scaled down by sqrt(n).  Then inner products between\n    variables approximate covariances and distances between observations\n    approximate Mahalanobis distance."
			}, {
				"name": "...",
				"description": "optional arguments to be passed to\n    <code><a rd-options=\"\" href=\"/link/biplot.default?package=stats&amp;version=3.3.2\">biplot.default</a></code>."
			}]
		}, {
			"name": ".checkMFClasses",
			"args": [{
				"name": "cl",
				"description": "a character vector of class descriptions to match."
			}, {
				"name": "m",
				"description": "a model frame."
			}, {
				"name": "x",
				"description": "any <span style=\"R\">R</span> object."
			}, {
				"name": "ordNotOK",
				"description": "logical: are ordered factors different?"
			}, {
				"name": "Terms",
				"description": "a <code>terms</code> object."
			}]
		}, {
			"name": "Box.test",
			"args": [{
				"name": "x",
				"description": "a numeric vector or univariate time series."
			}, {
				"name": "lag",
				"description": "the statistic will be based on <code>lag</code> autocorrelation\n    coefficients."
			}, {
				"name": "type",
				"description": "test to be performed: partial matching is used."
			}, {
				"name": "fitdf",
				"description": "number of degrees of freedom to be subtracted if <code>x</code>\n    is a series of residuals."
			}]
		}, {
			"name": "Chisquare",
			"args": [{
				"name": "x, q",
				"description": "vector of quantiles."
			}, {
				"name": "p",
				"description": "vector of probabilities."
			}, {
				"name": "n",
				"description": "number of observations. If <code>length(n) &gt; 1</code>, the length\n    is taken to be the number required."
			}, {
				"name": "df",
				"description": "degrees of freedom (non-negative, but can be non-integer)."
			}, {
				"name": "ncp",
				"description": "non-centrality parameter (non-negative)."
			}, {
				"name": "log, log.p",
				"description": "logical; if TRUE, probabilities p are given as log(p)."
			}, {
				"name": "lower.tail",
				"description": "logical; if TRUE (default), probabilities are\n    $P[X \\le x]$, otherwise, $P[X &gt; x]$."
			}]
		}, {
			"name": "case+variable.names",
			"args": [{
				"name": "object",
				"description": "an <span style=\"R\">R</span> object, typically a fitted model."
			}, {
				"name": "full",
				"description": "logical; if <code>TRUE</code>, all names (including zero weights,\n   ...) are returned."
			}, {
				"name": "...",
				"description": "further arguments passed to or from other methods."
			}]
		}, {
			"name": "cancor",
			"args": [{
				"name": "x",
				"description": "numeric matrix ($n * p1$), containing the\n    x coordinates."
			}, {
				"name": "y",
				"description": "numeric matrix ($n * p2$), containing the\n    y coordinates."
			}, {
				"name": "xcenter",
				"description": "logical or numeric vector of length $p1$,\n    describing any centering to be done on the x values before the\n    analysis.  If <code>TRUE</code> (default), subtract the column means.\n    If <code>FALSE</code>, do not adjust the columns.  Otherwise, a vector\n    of values to be subtracted from the columns."
			}, {
				"name": "ycenter",
				"description": "analogous to <code>xcenter</code>, but for the y values."
			}]
		}, {
			"name": "Cauchy",
			"args": [{
				"name": "x, q",
				"description": "vector of quantiles."
			}, {
				"name": "p",
				"description": "vector of probabilities."
			}, {
				"name": "n",
				"description": "number of observations. If <code>length(n) &gt; 1</code>, the length\n    is taken to be the number required."
			}, {
				"name": "location, scale",
				"description": "location and scale parameters."
			}, {
				"name": "log, log.p",
				"description": "logical; if TRUE, probabilities p are given as log(p)."
			}, {
				"name": "lower.tail",
				"description": "logical; if TRUE (default), probabilities are\n    $P[X \\le x]$, otherwise, $P[X &gt; x]$."
			}]
		}, {
			"name": "birthday",
			"args": [{
				"name": "classes",
				"description": "How many distinct categories the people could fall into"
			}, {
				"name": "prob",
				"description": "The desired probability of coincidence"
			}, {
				"name": "n",
				"description": "The number of people"
			}, {
				"name": "coincident",
				"description": "The number of people to fall in the same category"
			}]
		}, {
			"name": "cmdscale",
			"args": [{
				"name": "d",
				"description": "a distance structure such as that returned by <code>dist</code>\n    or a full symmetric matrix containing the dissimilarities."
			}, {
				"name": "k",
				"description": "the maximum dimension of the space which the data are to be\n    represented in; must be in ${1, 2, \\dots, n-1}$."
			}, {
				"name": "eig",
				"description": "indicates whether eigenvalues should be returned."
			}, {
				"name": "add",
				"description": "logical indicating if an additive constant $c*$ should\n    be computed, and added to the non-diagonal dissimilarities such that\n    the modified dissimilarities are Euclidean."
			}, {
				"name": "x.ret",
				"description": "indicates whether the doubly centred symmetric distance\n    matrix should be returned."
			}, {
				"name": "list.",
				"description": "logical indicating if a <code><a rd-options=\"\" href=\"/link/list?package=stats&amp;version=3.3.2\">list</a></code> should be\n    returned or just the $n * k$ matrix, see &#x2018;Value:&#x2019;."
			}]
		}, {
			"name": "chisq.test",
			"args": [{
				"name": "x",
				"description": "a numeric vector or matrix. <code>x</code> and <code>y</code> can also\n    both be factors."
			}, {
				"name": "y",
				"description": "a numeric vector; ignored if <code>x</code> is a matrix.  If\n    <code>x</code> is a factor, <code>y</code> should be a factor of the same length."
			}, {
				"name": "correct",
				"description": "a logical indicating whether to apply continuity\n    correction when computing the test statistic for 2 by 2 tables: one\n    half is subtracted from all $|O - E|$ differences; however, the\n    correction will not be bigger than the differences themselves.  No correction\n    is done if <code>simulate.p.value = TRUE</code>."
			}, {
				"name": "p",
				"description": "a vector of probabilities of the same length of <code>x</code>.\n    An error is given if any entry of <code>p</code> is negative."
			}, {
				"name": "rescale.p",
				"description": "a logical scalar; if TRUE then <code>p</code> is rescaled\n    (if necessary) to sum to 1.  If <code>rescale.p</code> is FALSE, and\n    <code>p</code> does not sum to 1, an error is given."
			}, {
				"name": "simulate.p.value",
				"description": "a logical indicating whether to compute\n    p-values by Monte Carlo simulation."
			}, {
				"name": "B",
				"description": "an integer specifying the number of replicates used in the\n    Monte Carlo test."
			}]
		}, {
			"name": "contrast",
			"args": [{
				"name": "n",
				"description": "a vector of levels for a factor, or the number of levels."
			}, {
				"name": "contrasts",
				"description": "a logical indicating whether contrasts should be\n    computed."
			}, {
				"name": "sparse",
				"description": "logical indicating if the result should be sparse\n    (of class <code><a rd-options=\"Matrix:dgCMatrix-class\" href=\"/link/dgCMatrix?package=stats&amp;version=3.3.2&amp;to=Matrix%3AdgCMatrix-class\">dgCMatrix</a></code>), using\n    package \\href{https://CRAN.R-project.org/package=#1}{\\pkg{#1}}Matrix<a href=\"https://CRAN.R-project.org/package=Matrix\"><span class=\"pkg\">Matrix</span></a>."
			}, {
				"name": "scores",
				"description": "the set of values over which orthogonal polynomials are\n    to be computed."
			}, {
				"name": "base",
				"description": "an integer specifying which group is considered the\n    baseline group. Ignored if <code>contrasts</code> is <code>FALSE</code>."
			}]
		}, {
			"name": "coef",
			"args": [{
				"name": "object",
				"description": "an object for which the extraction of model coefficients is\n    meaningful."
			}, {
				"name": "...",
				"description": "other arguments."
			}]
		}, {
			"name": "contrasts",
			"args": [{
				"name": "x",
				"description": "a factor or a logical variable."
			}, {
				"name": "contrasts",
				"description": "logical.  See &#x2018;Details&#x2019;."
			}, {
				"name": "sparse",
				"description": "logical indicating if the result should be sparse\n    (of class <code><a rd-options=\"Matrix:dgCMatrix-class\" href=\"/link/dgCMatrix?package=stats&amp;version=3.3.2&amp;to=Matrix%3AdgCMatrix-class\">dgCMatrix</a></code>), using\n    package \\href{https://CRAN.R-project.org/package=#1}{\\pkg{#1}}Matrix<a href=\"https://CRAN.R-project.org/package=Matrix\"><span class=\"pkg\">Matrix</span></a>."
			}, {
				"name": "how.many",
				"description": "How many contrasts should be made. Defaults to one\n    less than the number of levels of <code>x</code>.  This need not be the\n    same as the number of columns of <code>value</code>."
			}, {
				"name": "value",
				"description": "either a numeric matrix (or a sparse or dense matrix of a\n    class extending <code><a rd-options=\"Matrix:dMatrix-class\" href=\"/link/dMatrix?package=stats&amp;version=3.3.2&amp;to=Matrix%3AdMatrix-class\">dMatrix</a></code> from\n    package \\href{https://CRAN.R-project.org/package=#1}{\\pkg{#1}}Matrix<a href=\"https://CRAN.R-project.org/package=Matrix\"><span class=\"pkg\">Matrix</span></a>)  whose columns give coefficients for\n    contrasts in the levels of <code>x</code>, or the (quoted) name of a\n    function which computes such matrices."
			}]
		}, {
			"name": "convolve",
			"args": [{
				"name": "x, y",
				"description": "numeric sequences <em>of the same length</em> to be\n    convolved."
			}, {
				"name": "conj",
				"description": "logical; if <code>TRUE</code>, take the complex <em>conjugate</em>\n    before back-transforming (default, and used for usual convolution)."
			}, {
				"name": "type",
				"description": "character; partially matched to <code>&quot;circular&quot;</code>, <code>&quot;open&quot;</code>,\n    <code>&quot;filter&quot;</code>.  For <code>&quot;circular&quot;</code>, the\n    two sequences are treated as <em>circular</em>, i.e., periodic.\n\n    For <code>&quot;open&quot;</code> and <code>&quot;filter&quot;</code>, the sequences are padded with\n    <code>0</code>s (from left and right) first; <code>&quot;filter&quot;</code> returns the\n    middle sub-vector of <code>&quot;open&quot;</code>, namely, the result of running a\n    weighted mean of <code>x</code> with weights <code>y</code>."
			}]
		}, {
			"name": "complete.cases",
			"args": [{
				"name": "...",
				"description": "a sequence of vectors, matrices and data frames."
			}]
		}, {
			"name": "cor",
			"args": [{
				"name": "x",
				"description": "a numeric vector, matrix or data frame."
			}, {
				"name": "y",
				"description": "<code>NULL</code> (default) or a vector, matrix or data frame with\n    compatible dimensions to <code>x</code>.   The default is equivalent to\n    <code>y = x</code> (but more efficient)."
			}, {
				"name": "na.rm",
				"description": "logical. Should missing values be removed?"
			}, {
				"name": "use",
				"description": "an optional character string giving a\n    method for computing covariances in the presence\n    of missing values.  This must be (an abbreviation of) one of the strings\n    <code>&quot;everything&quot;</code>, <code>&quot;all.obs&quot;</code>, <code>&quot;complete.obs&quot;</code>,\n    <code>&quot;na.or.complete&quot;</code>, or <code>&quot;pairwise.complete.obs&quot;</code>."
			}, {
				"name": "method",
				"description": "a character string indicating which correlation\n    coefficient (or covariance) is to be computed.  One of\n    <code>&quot;pearson&quot;</code> (default), <code>&quot;kendall&quot;</code>, or <code>&quot;spearman&quot;</code>:\n    can be abbreviated."
			}, {
				"name": "V",
				"description": "symmetric numeric matrix, usually positive definite such as a\n    covariance matrix."
			}]
		}, {
			"name": "cophenetic",
			"args": [{
				"name": "x",
				"description": "an R object representing a hierarchical clustering.\n    For the default method, an object of class <code>&quot;<a rd-options=\"\" href=\"/link/hclust?package=stats&amp;version=3.3.2\">hclust</a>&quot;</code> or\n    with a method for <code><a rd-options=\"\" href=\"/link/as.hclust?package=stats&amp;version=3.3.2\">as.hclust</a>()</code> such as\n    <code>&quot;<a rd-options=\"cluster\" href=\"/link/agnes?package=stats&amp;version=3.3.2&amp;to=cluster\">agnes</a>&quot;</code> in package \\href{https://CRAN.R-project.org/package=#1}{\\pkg{#1}}cluster<a href=\"https://CRAN.R-project.org/package=cluster\"><span class=\"pkg\">cluster</span></a>."
			}]
		}, {
			"name": "cor.test",
			"args": [{
				"name": "x, y",
				"description": "numeric vectors of data values.  <code>x</code> and <code>y</code>\n    must have the same length."
			}, {
				"name": "alternative",
				"description": "indicates the alternative hypothesis and must be\n    one of <code>&quot;two.sided&quot;</code>, <code>&quot;greater&quot;</code> or <code>&quot;less&quot;</code>.  You\n    can specify just the initial letter.  <code>&quot;greater&quot;</code> corresponds\n    to positive association, <code>&quot;less&quot;</code> to negative association."
			}, {
				"name": "method",
				"description": "a character string indicating which correlation\n    coefficient is to be  used for the test.  One of <code>&quot;pearson&quot;</code>,\n    <code>&quot;kendall&quot;</code>, or <code>&quot;spearman&quot;</code>, can be abbreviated."
			}, {
				"name": "exact",
				"description": "a logical indicating whether an exact p-value should be\n    computed.  Used for Kendall&apos;s $tau$ and\n    Spearman&apos;s $rho$.\n    See &#x2018;Details&#x2019; for the meaning of <code>NULL</code> (the default)."
			}, {
				"name": "conf.level",
				"description": "confidence level for the returned confidence\n    interval.  Currently only used for the Pearson product moment\n    correlation coefficient if there are at least 4 complete pairs of\n    observations."
			}, {
				"name": "continuity",
				"description": "logical: if true, a continuity correction is used\n    for Kendall&apos;s $tau$ and Spearman&apos;s $rho$ when\n    not computed exactly."
			}, {
				"name": "formula",
				"description": "a formula of the form <code>~ u + v</code>, where each of\n    <code>u</code> and <code>v</code> are numeric variables giving the data values\n    for one sample.  The samples must be of the same length."
			}, {
				"name": "data",
				"description": "an optional matrix or data frame (or similar: see\n    <code><a rd-options=\"\" href=\"/link/model.frame?package=stats&amp;version=3.3.2\">model.frame</a></code>) containing the variables in the\n    formula <code>formula</code>.  By default the variables are taken from\n    <code>environment(formula)</code>."
			}, {
				"name": "subset",
				"description": "an optional vector specifying a subset of observations\n    to be used."
			}, {
				"name": "na.action",
				"description": "a function which indicates what should happen when\n    the data contain <code>NA</code>s.  Defaults to\n    <code>getOption(&quot;na.action&quot;)</code>."
			}, {
				"name": "...",
				"description": "further arguments to be passed to or from methods."
			}]
		}, {
			"name": "constrOptim",
			"args": [{
				"name": "theta",
				"description": "numeric (vector) starting value (of length $p$): must\n    be in the feasible region."
			}, {
				"name": "f",
				"description": "function to minimise (see below)."
			}, {
				"name": "grad",
				"description": "gradient of <code>f</code> (a <code><a rd-options=\"\" href=\"/link/function?package=stats&amp;version=3.3.2\">function</a></code> as well),\n    or <code>NULL</code> (see below)."
			}, {
				"name": "ui",
				"description": "constraint matrix ($k x p$), see below."
			}, {
				"name": "ci",
				"description": "constraint vector of length $k$ (see below)."
			}, {
				"name": "mu",
				"description": "(Small) tuning parameter."
			}, {
				"name": "control, method, hessian",
				"description": "passed to <code><a rd-options=\"\" href=\"/link/optim?package=stats&amp;version=3.3.2\">optim</a></code>."
			}, {
				"name": "outer.iterations",
				"description": "iterations of the barrier algorithm."
			}, {
				"name": "outer.eps",
				"description": "non-negative number; the relative convergence\n    tolerance of the barrier algorithm."
			}, {
				"name": "...",
				"description": "Other named arguments to be passed to <code>f</code> and <code>grad</code>:\n    needs to be passed through <code><a rd-options=\"\" href=\"/link/optim?package=stats&amp;version=3.3.2\">optim</a></code> so should not match its\n    argument names."
			}]
		}, {
			"name": "confint",
			"args": [{
				"name": "object",
				"description": "a fitted model object."
			}, {
				"name": "parm",
				"description": "a specification of which parameters are to be given\n    confidence intervals, either a vector of numbers or a vector of\n    names.  If missing, all parameters are considered."
			}, {
				"name": "level",
				"description": "the confidence level required."
			}, {
				"name": "...",
				"description": "additional argument(s) for methods."
			}]
		}, {
			"name": "delete.response",
			"args": [{
				"name": "termobj",
				"description": "A <code>terms</code> object"
			}, {
				"name": "termlabels",
				"description": "character vector giving the right-hand side of a\n    model formula.  Cannot be zero-length."
			}, {
				"name": "response",
				"description": "character string, symbol or call giving the left-hand side of\n    a model formula, or <code>NULL</code>."
			}, {
				"name": "intercept",
				"description": "logical: should the formula have an intercept?"
			}, {
				"name": "dropx",
				"description": "vector of positions of variables to drop from the\n    right-hand side of the model."
			}, {
				"name": "keep.response",
				"description": "Keep the response in the resulting object?"
			}]
		}, {
			"name": "decompose",
			"args": [{
				"name": "x",
				"description": "A time series."
			}, {
				"name": "type",
				"description": "The type of seasonal component. Can be abbreviated."
			}, {
				"name": "filter",
				"description": "A vector of filter coefficients in reverse time order (as for\n    AR or MA coefficients), used for filtering out the seasonal\n    component.  If <code>NULL</code>, a moving average with symmetric window is\n  performed."
			}]
		}, {
			"name": "cutree",
			"args": [{
				"name": "tree",
				"description": "a tree as produced by <code><a rd-options=\"\" href=\"/link/hclust?package=stats&amp;version=3.3.2\">hclust</a></code>. <code>cutree()</code>\n   only expects a list with components <code>merge</code>, <code>height</code>, and\n   <code>labels</code>, of appropriate content each."
			}, {
				"name": "k",
				"description": "an integer scalar or vector with the desired number of groups"
			}, {
				"name": "h",
				"description": "numeric scalar or vector with heights where the tree should\n   be cut."
			}]
		}, {
			"name": "dendrapply",
			"args": [{
				"name": "X",
				"description": "an object of class <code>&quot;<a rd-options=\"\" href=\"/link/dendrogram?package=stats&amp;version=3.3.2\">dendrogram</a>&quot;</code>."
			}, {
				"name": "FUN",
				"description": "an <span style=\"R\">R</span> function to be applied to each dendrogram node,\n    typically working on its <code><a rd-options=\"\" href=\"/link/attributes?package=stats&amp;version=3.3.2\">attributes</a></code> alone, returning an\n    altered version of the same node."
			}, {
				"name": "...",
				"description": "potential further arguments passed to <code>FUN</code>."
			}]
		}, {
			"name": "dendrogram",
			"args": [{
				"name": "object",
				"description": "any <span style=\"R\">R</span> object that can be made into one of class\n    <code>&quot;dendrogram&quot;</code>."
			}, {
				"name": "x, y",
				"description": "object(s) of class <code>&quot;dendrogram&quot;</code>."
			}, {
				"name": "hang",
				"description": "numeric scalar indicating how the <em>height</em> of leaves\n    should be computed from the heights of their parents; see\n    <code><a rd-options=\"\" href=\"/link/plot.hclust?package=stats&amp;version=3.3.2\">plot.hclust</a></code>."
			}, {
				"name": "check",
				"description": "logical indicating if <code>object</code> should be checked for\n    validity.  This check is not necessary when <code>x</code> is known to be\n    valid such as when it is the direct result of <code>hclust()</code>.  The\n    default is <code>check=TRUE</code>, e.g.\\ifelse{latex}{\\out{~}}{ } for protecting against memory\n    explosion with invalid inputs."
			}, {
				"name": "type",
				"description": "type of plot."
			}, {
				"name": "center",
				"description": "logical; if <code>TRUE</code>, nodes are plotted centered with\n    respect to the leaves in the branch.  Otherwise (default), plot them\n    in the middle of all direct child nodes."
			}, {
				"name": "edge.root",
				"description": "logical; if true, draw an edge to the root node."
			}, {
				"name": "nodePar",
				"description": "a <code>list</code> of plotting parameters to use for the\n    nodes (see <code><a rd-options=\"\" href=\"/link/points?package=stats&amp;version=3.3.2\">points</a></code>) or <code>NULL</code> by default which\n    does not draw symbols at the nodes.  The list may contain components\n    named <code>pch</code>, <code>cex</code>, <code>col</code>, <code>xpd</code>,\n    and/or <code>bg</code> each of\n    which can have length two for specifying separate attributes for\n    <em>inner</em> nodes and <em>leaves</em>.  Note that the default of\n    <code>pch</code> is <code>1:2</code>, so you may want to use <code>pch = NA</code> if\n    you specify <code>nodePar</code>."
			}, {
				"name": "edgePar",
				"description": "a <code>list</code> of plotting parameters to use for the\n    edge <code><a rd-options=\"\" href=\"/link/segments?package=stats&amp;version=3.3.2\">segments</a></code> and labels (if there&apos;s an\n    <code>edgetext</code>).  The list may contain components\n    named <code>col</code>, <code>lty</code> and <code>lwd</code> (for the segments),\n    <code>p.col</code>, <code>p.lwd</code>, and <code>p.lty</code> (for the\n    <code><a rd-options=\"\" href=\"/link/polygon?package=stats&amp;version=3.3.2\">polygon</a></code> around the text) and <code>t.col</code> for the text\n    color.  As with <code>nodePar</code>, each can have length two for\n    differentiating leaves and inner nodes."
			}, {
				"name": "leaflab",
				"description": "a string specifying how leaves are labeled.  The\n    default <code>&quot;perpendicular&quot;</code> write text vertically (by default).\n    <code>&quot;textlike&quot;</code> writes text horizontally (in a rectangle), and \n    <code>&quot;none&quot;</code> suppresses leaf labels."
			}, {
				"name": "dLeaf",
				"description": "a number specifying the <b>d</b>istance in user\n    coordinates between the tip of a leaf and its label.  If <code>NULL</code>\n    as per default, 3/4 of a letter width or height is used."
			}, {
				"name": "horiz",
				"description": "logical indicating if the dendrogram should be drawn\n    <em>horizontally</em> or not."
			}, {
				"name": "frame.plot",
				"description": "logical indicating if a box around the plot should\n    be drawn, see <code><a rd-options=\"\" href=\"/link/plot.default?package=stats&amp;version=3.3.2\">plot.default</a></code>."
			}, {
				"name": "h",
				"description": "height at which the tree is cut."
			}, {
				"name": "height",
				"description": "height at which the two dendrograms should be merged.  If not\n    specified (or <code>NULL</code>), the default is ten percent larger than\n    the (larger of the) two component heights."
			}, {
				"name": "adjust",
				"description": "a string determining if the leaf values should be\n    adjusted.  The default, <code>&quot;auto&quot;</code>, checks if the (first) two\n    dendrograms both start at <code>1</code>; if they do, code&quot;add.max&quot; is\n    chosen, which adds the maximum of the previous dendrogram leaf\n    values to each leaf of the &#x201C;next&#x201D; dendrogram.  Specifying\n    <code>adjust</code> to another value skips the check and hence is a tad\n    more efficient."
			}, {
				"name": "xlim, ylim",
				"description": "optional x- and y-limits of the plot, passed to\n    <code><a rd-options=\"\" href=\"/link/plot.default?package=stats&amp;version=3.3.2\">plot.default</a></code>.  The defaults for these show the full\n    dendrogram."
			}, {
				"name": "..., xlab, ylab, xaxt, yaxt",
				"description": "graphical parameters, or arguments for\n    other methods."
			}, {
				"name": "digits",
				"description": "integer specifying the precision for printing, see\n    <code><a rd-options=\"\" href=\"/link/print.default?package=stats&amp;version=3.3.2\">print.default</a></code>."
			}, {
				"name": "max.level, digits.d, give.attr, wid, nest.lev, indent.str",
				"description": "arguments\n    to <code>str</code>, see <code><a rd-options=\"\" href=\"/link/str.default?package=stats&amp;version=3.3.2\">str.default</a>()</code>.  Note that\n    <code>give.attr = FALSE</code> still shows <code>height</code> and <code>members</code>\n    attributes for each node."
			}, {
				"name": "last.str, stem",
				"description": "strings used for <code>str()</code> specifying how the\n    last branch (at each level) should start and the <em>stem</em>\n    to use for each dendrogram branch.  In some environments, using\n    <code>last.str = &quot;&apos;&quot;</code> will provide much nicer looking output, than\n    the historical default <code>last.str = &quot;`&quot;</code>."
			}]
		}, {
			"name": "deviance",
			"args": [{
				"name": "object",
				"description": "an object for which the deviance is desired."
			}, {
				"name": "...",
				"description": "additional optional argument."
			}]
		}, {
			"name": "deriv",
			"args": [{
				"name": "expr",
				"description": "a <code><a rd-options=\"\" href=\"/link/expression?package=stats&amp;version=3.3.2\">expression</a></code> or <code><a rd-options=\"\" href=\"/link/call?package=stats&amp;version=3.3.2\">call</a></code> or\n    (except <code>D</code>) a formula with no lhs."
			}, {
				"name": "name,namevec",
				"description": "character vector, giving the variable names (only\n    one for <code>D()</code>) with respect to which derivatives will be\n    computed."
			}, {
				"name": "function.arg",
				"description": "if specified and non-<code>NULL</code>, a character\n    vector of arguments for a function return, or a function (with empty\n    body) or <code>TRUE</code>, the latter indicating that a function with\n    argument names <code>namevec</code> should be used."
			}, {
				"name": "tag",
				"description": "character; the prefix to be used for the locally created\n    variables in result."
			}, {
				"name": "hessian",
				"description": "a logical value indicating whether the second derivatives\n    should be calculated and incorporated in the return value."
			}, {
				"name": "...",
				"description": "arguments to be passed to or from methods."
			}]
		}, {
			"name": "cpgram",
			"args": [{
				"name": "ts",
				"description": "a univariate time series"
			}, {
				"name": "taper",
				"description": "proportion tapered in forming the periodogram"
			}, {
				"name": "main",
				"description": "main title"
			}, {
				"name": "ci.col",
				"description": "colour for confidence band."
			}]
		}, {
			"name": "cov.wt",
			"args": [{
				"name": "x",
				"description": "a matrix or data frame.  As usual, rows are observations and\n    columns are variables."
			}, {
				"name": "wt",
				"description": "a non-negative and non-zero vector of weights for each\n    observation.  Its length must equal the number of rows of <code>x</code>."
			}, {
				"name": "cor",
				"description": "a logical indicating whether the estimated correlation\n    weighted matrix will be returned as well."
			}, {
				"name": "center",
				"description": "either a logical or a numeric vector specifying the\n    centers to be used when computing covariances.  If <code>TRUE</code>, the\n    (weighted) mean of each variable is used, if <code>FALSE</code>, zero is\n    used.  If <code>center</code> is numeric, its length must equal the number\n    of columns of <code>x</code>."
			}, {
				"name": "method",
				"description": "string specifying how the result is scaled, see\n    &#x2018;Details&#x2019; below.  Can be abbreviated."
			}]
		}, {
			"name": "density",
			"args": [{
				"name": "x",
				"description": "the data from which the estimate is to be computed."
			}, {
				"name": "bw",
				"description": "the smoothing bandwidth to be used.  The kernels are scaled\n    such that this is the standard deviation of the smoothing kernel.\n    (Note this differs from the reference books cited below, and from S-PLUS.)\n\n    <code>bw</code> can also be a character string giving a rule to choose the\n    bandwidth.  See <code><a rd-options=\"\" href=\"/link/bw.nrd?package=stats&amp;version=3.3.2\">bw.nrd</a></code>.  The default,\n    <code>&quot;nrd0&quot;</code>, has remained the default for historical and\n    compatibility reasons, rather than as a general recommendation,\n    where e.g., <code>&quot;SJ&quot;</code> would rather fit, see also Venables and\n    Ripley (2002).\n\n    The specified (or computed) value of <code>bw</code> is multiplied by\n    <code>adjust</code>."
			}, {
				"name": "adjust",
				"description": "the bandwidth used is actually <code>adjust*bw</code>.\n    This makes it easy to specify values like &#x2018;half the default&#x2019;\n    bandwidth."
			}, {
				"name": "kernel, window",
				"description": "a character string giving the smoothing kernel\n    to be used. This must partially match one of <code>&quot;gaussian&quot;</code>,\n    <code>&quot;rectangular&quot;</code>, <code>&quot;triangular&quot;</code>, <code>&quot;epanechnikov&quot;</code>,\n    <code>&quot;biweight&quot;</code>, <code>&quot;cosine&quot;</code> or <code>&quot;optcosine&quot;</code>, with default\n    <code>&quot;gaussian&quot;</code>, and may be abbreviated to a unique prefix (single\n    letter).\n\n    <code>&quot;cosine&quot;</code> is smoother than <code>&quot;optcosine&quot;</code>, which is the\n    usual &#x2018;cosine&#x2019; kernel in the literature and almost MSE-efficient.\n    However, <code>&quot;cosine&quot;</code> is the version used by S."
			}, {
				"name": "weights",
				"description": "numeric vector of non-negative observation weights,\n    hence of same length as <code>x</code>. The default <code>NULL</code> is\n    equivalent to <code>weights = rep(1/nx, nx)</code> where <code>nx</code> is the\n    length of (the finite entries of) <code>x[]</code>."
			}, {
				"name": "width",
				"description": "this exists for compatibility with S; if given, and\n    <code>bw</code> is not, will set <code>bw</code> to <code>width</code> if this is a\n    character string, or to a kernel-dependent multiple of <code>width</code>\n    if this is numeric."
			}, {
				"name": "give.Rkern",
				"description": "logical; if true, <em>no</em> density is estimated, and\n    the &#x2018;canonical bandwidth&#x2019; of the chosen <code>kernel</code> is returned\n    instead."
			}, {
				"name": "n",
				"description": "the number of equally spaced points at which the density is\n    to be estimated.  When <code>n &gt; 512</code>, it is rounded up to a power\n    of 2 during the calculations (as <code><a rd-options=\"\" href=\"/link/fft?package=stats&amp;version=3.3.2\">fft</a></code> is used) and the\n    final result is interpolated by <code><a rd-options=\"\" href=\"/link/approx?package=stats&amp;version=3.3.2\">approx</a></code>.  So it almost\n    always makes sense to specify <code>n</code> as a power of two."
			}, {
				"name": "from,to",
				"description": "the left and right-most points of the grid at which the\n    density is to be estimated; the defaults are <code>cut * bw</code> outside\n    of <code>range(x)</code>."
			}, {
				"name": "cut",
				"description": "by default, the values of <code>from</code> and <code>to</code> are\n    <code>cut</code> bandwidths beyond the extremes of the data.  This allows\n    the estimated density to drop to approximately zero at the extremes."
			}, {
				"name": "na.rm",
				"description": "logical; if <code>TRUE</code>, missing values are removed\n    from <code>x</code>. If <code>FALSE</code> any missing values cause an error."
			}, {
				"name": "...",
				"description": "further arguments for (non-default) methods."
			}]
		}, {
			"name": "ecdf",
			"args": [{
				"name": "x, object",
				"description": "numeric vector of the observations for <code>ecdf</code>;  for\n    the methods, an object inheriting from class <code>&quot;ecdf&quot;</code>."
			}, {
				"name": "...",
				"description": "arguments to be passed to subsequent methods, e.g.,\n    <code><a rd-options=\"\" href=\"/link/plot.stepfun?package=stats&amp;version=3.3.2\">plot.stepfun</a></code> for the <code>plot</code> method."
			}, {
				"name": "ylab",
				"description": "label for the y-axis."
			}, {
				"name": "verticals",
				"description": "see <code><a rd-options=\"\" href=\"/link/plot.stepfun?package=stats&amp;version=3.3.2\">plot.stepfun</a></code>."
			}, {
				"name": "col.01line",
				"description": "numeric or character specifying the color of the\n    horizontal lines at y = 0 and 1, see <code><a rd-options=\"\" href=\"/link/colors?package=stats&amp;version=3.3.2\">colors</a></code>."
			}, {
				"name": "pch",
				"description": "plotting character."
			}, {
				"name": "digits",
				"description": "number of significant digits to use, see\n    <code><a rd-options=\"\" href=\"/link/print?package=stats&amp;version=3.3.2\">print</a></code>."
			}]
		}, {
			"name": "expand.model.frame",
			"args": [{
				"name": "model",
				"description": "a fitted model"
			}, {
				"name": "extras",
				"description": "one-sided formula or vector of character strings\n    describing new variables to be added"
			}, {
				"name": "envir",
				"description": "an environment to evaluate things in"
			}, {
				"name": "na.expand",
				"description": "logical; see below"
			}]
		}, {
			"name": "eff.aovlist",
			"args": [{
				"name": "aovlist",
				"description": "The result of a call to <code>aov</code> with an <code>Error</code> term."
			}]
		}, {
			"name": "embed",
			"args": [{
				"name": "x",
				"description": "a numeric vector, matrix, or time series."
			}, {
				"name": "dimension",
				"description": "a scalar representing the embedding dimension."
			}]
		}, {
			"name": "diffinv",
			"args": [{
				"name": "x",
				"description": "a numeric vector, matrix, or time series."
			}, {
				"name": "lag",
				"description": "a scalar lag parameter."
			}, {
				"name": "differences",
				"description": "an integer representing the order of the\n    difference."
			}, {
				"name": "xi",
				"description": "a numeric vector, matrix, or time series containing the\n    initial values for the integrals.  If missing, zeros are used."
			}, {
				"name": "...",
				"description": "arguments passed to or from other methods."
			}]
		}, {
			"name": "effects",
			"args": [{
				"name": "object",
				"description": "an <span style=\"R\">R</span> object; typically, the result of a model fitting function\n   such as <code><a rd-options=\"\" href=\"/link/lm?package=stats&amp;version=3.3.2\">lm</a></code>."
			}, {
				"name": "set.sign",
				"description": "logical. If <code>TRUE</code>, the sign of the effects\n   corresponding to coefficients in the model will be set to agree with the\n   signs of the corresponding coefficients, otherwise the sign is\n   arbitrary."
			}, {
				"name": "...",
				"description": "arguments passed to or from other methods."
			}]
		}, {
			"name": "dummy.coef",
			"args": [{
				"name": "object",
				"description": "a linear model fit."
			}, {
				"name": "use.na",
				"description": "logical flag for coefficients in a singular model. If\n    <code>use.na</code> is true, undetermined coefficients will be missing; if\n    false they will get one possible value."
			}, {
				"name": "...",
				"description": "arguments passed to or from other methods."
			}]
		}, {
			"name": "df.residual",
			"args": [{
				"name": "object",
				"description": "an object for which the degrees-of-freedom are desired."
			}, {
				"name": "...",
				"description": "additional optional arguments."
			}]
		}, {
			"name": "dist",
			"args": [{
				"name": "x",
				"description": "a numeric matrix, data frame or <code>&quot;dist&quot;</code> object."
			}, {
				"name": "method",
				"description": "the distance measure to be used. This must be one of\n    <code>&quot;euclidean&quot;</code>, <code>&quot;maximum&quot;</code>, <code>&quot;manhattan&quot;</code>,\n    <code>&quot;canberra&quot;</code>, <code>&quot;binary&quot;</code> or <code>&quot;minkowski&quot;</code>.\n    Any unambiguous substring can be given."
			}, {
				"name": "diag",
				"description": "logical value indicating whether the diagonal of the\n    distance matrix should be printed by <code>print.dist</code>."
			}, {
				"name": "upper",
				"description": "logical value indicating whether the upper triangle of the\n    distance matrix should be printed by <code>print.dist</code>."
			}, {
				"name": "p",
				"description": "The power of the Minkowski distance."
			}, {
				"name": "m",
				"description": "An object with distance information to be converted to a\n    <code>&quot;dist&quot;</code> object.  For the default method, a <code>&quot;dist&quot;</code>\n    object, or a matrix (of distances) or an object which can be coerced\n    to such a matrix using <code><a rd-options=\"\" href=\"/link/as.matrix?package=stats&amp;version=3.3.2\">as.matrix</a>()</code>.  (Only the lower\n    triangle of the matrix is used, the rest is ignored)."
			}, {
				"name": "digits, justify",
				"description": "passed to <code><a rd-options=\"\" href=\"/link/format?package=stats&amp;version=3.3.2\">format</a></code> inside of\n    <code>print()</code>."
			}, {
				"name": "right, ...",
				"description": "further arguments, passed to other methods."
			}]
		}, {
			"name": "Distributions",
			"args": []
		}, {
			"name": "fft",
			"args": [{
				"name": "z",
				"description": "a real or complex array containing the values to be\n    transformed."
			}, {
				"name": "inverse",
				"description": "if <code>TRUE</code>, the unnormalized inverse transform is\n    computed (the inverse has a <code>+</code> in the exponent of $e$,\n    but here, we do <em>not</em> divide by <code>1/length(x)</code>)."
			}]
		}, {
			"name": "formula.nls",
			"args": [{
				"name": "x",
				"description": "an object inheriting from class <code>&quot;nls&quot;</code>, representing\n   a nonlinear least squares fit."
			}, {
				"name": "...",
				"description": "further arguments passed to or from other methods."
			}]
		}, {
			"name": "formula",
			"args": [{
				"name": "x, object",
				"description": "<span style=\"R\">R</span> object."
			}, {
				"name": "...",
				"description": "further arguments passed to or from other methods."
			}, {
				"name": "env",
				"description": "the environment to associate with the result, if not\n    already a formula."
			}, {
				"name": "showEnv",
				"description": "logical indicating if the environment should be printed\n    as well."
			}]
		}, {
			"name": "filter",
			"args": [{
				"name": "x",
				"description": "a univariate or multivariate time series."
			}, {
				"name": "filter",
				"description": "a vector of filter coefficients in reverse time order\n    (as for AR or MA coefficients)."
			}, {
				"name": "method",
				"description": "Either <code>&quot;convolution&quot;</code> or <code>&quot;recursive&quot;</code> (and\n    can be abbreviated). If <code>&quot;convolution&quot;</code> a moving average is\n    used: if <code>&quot;recursive&quot;</code> an autoregression is used."
			}, {
				"name": "sides",
				"description": "for convolution filters only. If <code>sides = 1</code> the\n    filter coefficients are for past values only; if <code>sides = 2</code>\n    they are centred around lag 0.  In this case the length of the\n    filter should be odd, but if it is even, more of the filter\n    is forward in time than backward."
			}, {
				"name": "circular",
				"description": "for convolution filters only.  If <code>TRUE</code>, wrap\n    the filter around the ends of the series, otherwise assume\n    external values are missing (<code>NA</code>)."
			}, {
				"name": "init",
				"description": "for recursive filters only. Specifies the initial values\n    of the time series just prior to the start value, in reverse\n    time order. The default is a set of zeros."
			}]
		}, {
			"name": "integrate",
			"args": [{
				"name": "f",
				"description": "an <span style=\"R\">R</span> function taking a numeric first argument and returning\n    a numeric vector of the same length.  Returning a non-finite element will\n    generate an error."
			}, {
				"name": "lower, upper",
				"description": "the limits of integration.  Can be infinite."
			}, {
				"name": "...",
				"description": "additional arguments to be passed to <code>f</code>."
			}, {
				"name": "subdivisions",
				"description": "the maximum number of subintervals."
			}, {
				"name": "rel.tol",
				"description": "relative accuracy requested."
			}, {
				"name": "abs.tol",
				"description": "absolute accuracy requested."
			}, {
				"name": "stop.on.error",
				"description": "logical. If true (the default) an error stops the\n    function.  If false some errors will give a result with a warning in\n    the <code>message</code> component."
			}, {
				"name": "keep.xy",
				"description": "unused.  For compatibility with S."
			}, {
				"name": "aux",
				"description": "unused.  For compatibility with S."
			}]
		}, {
			"name": "interaction.plot",
			"args": [{
				"name": "x.factor",
				"description": "a factor whose levels will form the x axis."
			}, {
				"name": "trace.factor",
				"description": "another factor whose levels will form the traces."
			}, {
				"name": "response",
				"description": "a numeric variable giving the response"
			}, {
				"name": "fun",
				"description": "the function to compute the summary. Should return a single\n    real value."
			}, {
				"name": "type",
				"description": "the type of plot (see <code><a rd-options=\"\" href=\"/link/plot.default?package=stats&amp;version=3.3.2\">plot.default</a></code>): lines\n    or points or both."
			}, {
				"name": "legend",
				"description": "logical. Should a legend be included?"
			}, {
				"name": "trace.label",
				"description": "overall label for the legend."
			}, {
				"name": "fixed",
				"description": "logical.  Should the legend be in the order of the levels\n    of <code>trace.factor</code> or in the order of the traces at their right-hand ends?"
			}, {
				"name": "xlab,ylab",
				"description": "the x and y label of the plot each with a sensible default."
			}, {
				"name": "ylim",
				"description": "numeric of length 2 giving the y limits for the plot."
			}, {
				"name": "lty",
				"description": "line type for the lines drawn, with sensible default."
			}, {
				"name": "col",
				"description": "the color to be used for plotting."
			}, {
				"name": "pch",
				"description": "a vector of plotting symbols or characters, with sensible\n    default."
			}, {
				"name": "xpd",
				"description": "determines clipping behaviour for the <code><a rd-options=\"\" href=\"/link/legend?package=stats&amp;version=3.3.2\">legend</a></code>\n    used, see <code><a rd-options=\"\" href=\"/link/par?package=stats&amp;version=3.3.2\">par</a>(xpd)</code>.  Per default, the legend is\n    <em>not</em> clipped at the figure border."
			}, {
				"name": "leg.bg, leg.bty",
				"description": "arguments passed to <code><a rd-options=\"\" href=\"/link/legend?package=stats&amp;version=3.3.2\">legend</a>()</code>."
			}, {
				"name": "xtick",
				"description": "logical. Should tick marks be used on the x axis?"
			}, {
				"name": "xaxt, axes, ...",
				"description": "graphics parameters to be passed to the plotting routines."
			}]
		}, {
			"name": "family",
			"args": [{
				"name": "link",
				"description": "a specification for the model link function.  This can be\n    a name/expression, a literal character string, a length-one character\n    vector or an object of class\n    <code>&quot;<a rd-options=\"=make.link\" href=\"/link/link-glm?package=stats&amp;version=3.3.2&amp;to=%3Dmake.link\">link-glm</a>&quot;</code> (such as generated by\n    <code><a rd-options=\"\" href=\"/link/make.link?package=stats&amp;version=3.3.2\">make.link</a></code>) provided it is not specified\n    <em>via</em> one of the standard names given next.\n\n    The <code>gaussian</code> family accepts the links (as names)\n    <code>identity</code>, <code>log</code> and <code>inverse</code>;\n    the <code>binomial</code> family the links <code>logit</code>,\n    <code>probit</code>, <code>cauchit</code>, (corresponding to logistic,\n    normal and Cauchy CDFs respectively) <code>log</code> and\n    <code>cloglog</code> (complementary log-log);\n    the <code>Gamma</code> family the links <code>inverse</code>, <code>identity</code>\n     and <code>log</code>;\n    the <code>poisson</code> family the links <code>log</code>, <code>identity</code>,\n    and <code>sqrt</code> and the <code>inverse.gaussian</code> family the links\n    <code>1/mu^2</code>, <code>inverse</code>, <code>identity</code>\n    and <code>log</code>.\n\n    The <code>quasi</code> family accepts the links <code>logit</code>, <code>probit</code>,\n    <code>cloglog</code>,  <code>identity</code>, <code>inverse</code>,\n    <code>log</code>, <code>1/mu^2</code> and <code>sqrt</code>, and\n    the function <code><a rd-options=\"\" href=\"/link/power?package=stats&amp;version=3.3.2\">power</a></code> can be used to create a\n    power link function."
			}, {
				"name": "variance",
				"description": "for all families other than <code>quasi</code>, the variance\n    function is determined by the family.  The <code>quasi</code> family will\n    accept the literal character string (or unquoted as a name/expression)\n    specifications <code>&quot;constant&quot;</code>, <code>&quot;mu(1-mu)&quot;</code>, <code>&quot;mu&quot;</code>,\n    <code>&quot;mu^2&quot;</code> and <code>&quot;mu^3&quot;</code>, a length-one character vector\n    taking one of those values, or a list containing components\n    <code>varfun</code>, <code>validmu</code>, <code>dev.resids</code>, <code>initialize</code>\n    and <code>name</code>."
			}, {
				"name": "object",
				"description": "the function <code>family</code> accesses the <code>family</code>\n    objects which are stored within objects created by modelling\n    functions (e.g., <code>glm</code>)."
			}, {
				"name": "...",
				"description": "further arguments passed to methods."
			}]
		}, {
			"name": "FDist",
			"args": [{
				"name": "x, q",
				"description": "vector of quantiles."
			}, {
				"name": "p",
				"description": "vector of probabilities."
			}, {
				"name": "n",
				"description": "number of observations. If <code>length(n) &gt; 1</code>, the length\n    is taken to be the number required."
			}, {
				"name": "df1, df2",
				"description": "degrees of freedom.  <code>Inf</code> is allowed."
			}, {
				"name": "ncp",
				"description": "non-centrality parameter. If omitted the central F is assumed."
			}, {
				"name": "log, log.p",
				"description": "logical; if TRUE, probabilities p are given as log(p)."
			}, {
				"name": "lower.tail",
				"description": "logical; if TRUE (default), probabilities are\n    $P[X \\le x]$, otherwise, $P[X &gt; x]$."
			}]
		}, {
			"name": "influence.measures",
			"args": [{
				"name": "model",
				"description": "an <span style=\"R\">R</span> object, typically returned by <code><a rd-options=\"\" href=\"/link/lm?package=stats&amp;version=3.3.2\">lm</a></code> or\n    <code><a rd-options=\"\" href=\"/link/glm?package=stats&amp;version=3.3.2\">glm</a></code>."
			}, {
				"name": "infl",
				"description": "influence structure as returned by\n    <code><a rd-options=\"\" href=\"/link/lm.influence?package=stats&amp;version=3.3.2\">lm.influence</a></code> or <code><a rd-options=\"\" href=\"/link/influence?package=stats&amp;version=3.3.2\">influence</a></code> (the latter\n    only for the <code>glm</code> method of <code>rstudent</code> and\n    <code>cooks.distance</code>)."
			}, {
				"name": "res",
				"description": "(possibly weighted) residuals, with proper default."
			}, {
				"name": "sd",
				"description": "standard deviation to use, see default."
			}, {
				"name": "dispersion",
				"description": "dispersion (for <code><a rd-options=\"\" href=\"/link/glm?package=stats&amp;version=3.3.2\">glm</a></code> objects) to use,\n    see default."
			}, {
				"name": "hat",
				"description": "hat values $H[i,i]$, see default."
			}, {
				"name": "type",
				"description": "type of residuals for <code>glm</code> method for <code>rstandard</code>.\n    Can be abbreviated."
			}, {
				"name": "x",
				"description": "the $X$ or design matrix."
			}, {
				"name": "intercept",
				"description": "should an intercept column be prepended to <code>x</code>?"
			}, {
				"name": "...",
				"description": "further arguments passed to or from other methods."
			}]
		}, {
			"name": "identify.hclust",
			"args": [{
				"name": "x",
				"description": "an object of the type produced by <code>hclust</code>."
			}, {
				"name": "FUN",
				"description": "(optional) function to be applied to the index numbers of\n    the data points in a cluster (see &#x2018;Details&#x2019; below)."
			}, {
				"name": "N",
				"description": "the maximum number of clusters to be identified."
			}, {
				"name": "MAXCLUSTER",
				"description": "the maximum number of clusters that can be produced\n    by a cut (limits the effective vertical range of the pointer)."
			}, {
				"name": "DEV.FUN",
				"description": "(optional) integer scalar. If specified, the\n    corresponding graphics device is made active before <code>FUN</code> is\n    applied."
			}, {
				"name": "...",
				"description": "further arguments to <code>FUN</code>."
			}]
		}, {
			"name": "isoreg",
			"args": [{
				"name": "x, y",
				"description": "coordinate vectors of the regression points.  Alternatively a single\n    plotting structure can be specified: see <code><a rd-options=\"\" href=\"/link/xy.coords?package=stats&amp;version=3.3.2\">xy.coords</a></code>."
			}]
		}, {
			"name": "kmeans",
			"args": [{
				"name": "x",
				"description": "numeric matrix of data, or an object that can be coerced to\n    such a matrix (such as a numeric vector or a data frame with all\n    numeric columns)."
			}, {
				"name": "centers",
				"description": "either the number of clusters, say $k$, or a set of\n    initial (distinct) cluster centres.  If a number, a random set of\n    (distinct) rows in <code>x</code> is chosen as the initial centres."
			}, {
				"name": "iter.max",
				"description": "the maximum number of iterations allowed."
			}, {
				"name": "nstart",
				"description": "if <code>centers</code> is a number, how many random sets\n    should be chosen?"
			}, {
				"name": "algorithm",
				"description": "character: may be abbreviated.  Note that\n    <code>&quot;Lloyd&quot;</code> and <code>&quot;Forgy&quot;</code> are alternative names for one\n    algorithm."
			}, {
				"name": "object",
				"description": "an <span style=\"R\">R</span> object of class <code>&quot;kmeans&quot;</code>, typically the\n    result <code>ob</code> of <code>ob <- kmeans(..)<=\"\" code=\"\">.</-></code>"
			}, {
				"name": "method",
				"description": "character: may be abbreviated. <code>&quot;centers&quot;</code> causes\n    <code>fitted</code> to return cluster centers (one for each input point) and\n    <code>&quot;classes&quot;</code> causes <code>fitted</code> to return a vector of class\n    assignments."
			}, {
				"name": "trace",
				"description": "logical or integer number, currently only used in the\n    default method (<code>&quot;Hartigan-Wong&quot;</code>): if positive (or true),\n    tracing information on the progress of the algorithm is\n    produced.  Higher values may produce more tracing information."
			}, {
				"name": "...",
				"description": "not used."
			}]
		}, {
			"name": "lm.summaries",
			"args": [{
				"name": "object, x",
				"description": "an object inheriting from class <code>lm</code>, usually\n    the result of a call to <code><a rd-options=\"\" href=\"/link/lm?package=stats&amp;version=3.3.2\">lm</a></code> or <code><a rd-options=\"\" href=\"/link/aov?package=stats&amp;version=3.3.2\">aov</a></code>."
			}, {
				"name": "...",
				"description": "further arguments passed to or from other methods."
			}, {
				"name": "type",
				"description": "the type of residuals which should be returned.  Can be abbreviated."
			}]
		}, {
			"name": "KalmanLike",
			"args": [{
				"name": "y",
				"description": "a univariate time series."
			}, {
				"name": "mod",
				"description": "a list describing the state-space model: see &#x2018;Details&#x2019;."
			}, {
				"name": "nit",
				"description": "the time at which the initialization is computed.\n    <code>nit = 0L</code> implies that the initialization is for a one-step\n    prediction, so <code>Pn</code> should not be computed at the first step."
			}, {
				"name": "update",
				"description": "if <code>TRUE</code> the update <code>mod</code> object will be\n    returned as attribute <code>&quot;mod&quot;</code> of the result."
			}, {
				"name": "n.ahead",
				"description": "the number of steps ahead for which prediction is\n    required."
			}, {
				"name": "phi, theta",
				"description": "numeric vectors of length $\\ge 0$ giving AR\n    and MA parameters."
			}, {
				"name": "Delta",
				"description": "vector of differencing coefficients, so an ARMA model is\n    fitted to <code>y[t] - Delta[1]*y[t-1] - ...</code>."
			}, {
				"name": "kappa",
				"description": "the prior variance (as a multiple of the innovations\n    variance) for the past observations in a differenced model."
			}, {
				"name": "SSinit",
				"description": "a string specifying the algorithm to compute the\n    <code>Pn</code> part of the state-space initialization; see\n    &#x2018;Details&#x2019;."
			}, {
				"name": "tol",
				"description": "tolerance eventually passed to <code><a rd-options=\"\" href=\"/link/solve.default?package=stats&amp;version=3.3.2\">solve.default</a></code>\n    when <code>SSinit = &quot;Rossignol2011&quot;</code>."
			}]
		}, {
			"name": "kruskal.test",
			"args": [{
				"name": "x",
				"description": "a numeric vector of data values, or a list of numeric data\n    vectors.  Non-numeric elements of a list will be coerced, with a\n    warning."
			}, {
				"name": "g",
				"description": "a vector or factor object giving the group for the\n    corresponding elements of <code>x</code>.  Ignored with a warning if\n    <code>x</code> is a list."
			}, {
				"name": "formula",
				"description": "a formula of the form <code>response ~ group</code> where\n    <code>response</code> gives the data values and <code>group</code> a vector or\n    factor of the corresponding groups."
			}, {
				"name": "data",
				"description": "an optional matrix or data frame (or similar: see\n    <code><a rd-options=\"\" href=\"/link/model.frame?package=stats&amp;version=3.3.2\">model.frame</a></code>) containing the variables in the\n    formula <code>formula</code>.  By default the variables are taken from\n    <code>environment(formula)</code>."
			}, {
				"name": "subset",
				"description": "an optional vector specifying a subset of observations\n    to be used."
			}, {
				"name": "na.action",
				"description": "a function which indicates what should happen when\n    the data contain <code>NA</code>s.  Defaults to\n    <code>getOption(&quot;na.action&quot;)</code>."
			}, {
				"name": "...",
				"description": "further arguments to be passed to or from methods."
			}]
		}, {
			"name": "lm.fit",
			"args": [{
				"name": "x",
				"description": "design matrix of dimension <code>n * p</code>."
			}, {
				"name": "y",
				"description": "vector of observations of length <code>n</code>, or a matrix with\n    <code>n</code> rows."
			}, {
				"name": "w",
				"description": "vector of weights (length <code>n</code>) to be used in the fitting\n    process for the <code>wfit</code> functions.  Weighted least squares is\n    used with weights <code>w</code>, i.e., <code>sum(w * e^2)</code> is minimized."
			}, {
				"name": "offset",
				"description": "numeric of length <code>n</code>).  This can be used to\n    specify an <em>a priori</em> known component to be included in the\n    linear predictor during fitting."
			}, {
				"name": "method",
				"description": "currently, only <code>method = &quot;qr&quot;</code> is supported."
			}, {
				"name": "tol",
				"description": "tolerance for the <code><a rd-options=\"\" href=\"/link/qr?package=stats&amp;version=3.3.2\">qr</a></code> decomposition.  Default\n    is 1e-7."
			}, {
				"name": "singular.ok",
				"description": "logical. If <code>FALSE</code>, a singular model is an\n    error."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "make.link",
			"args": [{
				"name": "link",
				"description": "character; one of <code>&quot;logit&quot;</code>,\n    <code>&quot;probit&quot;</code>, <code>&quot;cauchit&quot;</code>, <code>&quot;cloglog&quot;</code>, <code>&quot;identity&quot;</code>,\n    <code>&quot;log&quot;</code>,  <code>&quot;sqrt&quot;</code>,  <code>&quot;1/mu^2&quot;</code>, <code>&quot;inverse&quot;</code>."
			}]
		}, {
			"name": "Geometric",
			"args": [{
				"name": "x, q",
				"description": "vector of quantiles representing the number of failures in\n    a sequence of Bernoulli trials before success occurs."
			}, {
				"name": "p",
				"description": "vector of probabilities."
			}, {
				"name": "n",
				"description": "number of observations. If <code>length(n) &gt; 1</code>, the length\n    is taken to be the number required."
			}, {
				"name": "prob",
				"description": "probability of success in each trial. <code>0 &lt; prob <= 1<=\"\" code=\"\">.</=></code>"
			}, {
				"name": "log, log.p",
				"description": "logical; if TRUE, probabilities p are given as log(p)."
			}, {
				"name": "lower.tail",
				"description": "logical; if TRUE (default), probabilities are\n    $P[X \\le x]$, otherwise, $P[X &gt; x]$."
			}]
		}, {
			"name": "makepredictcall",
			"args": [{
				"name": "var",
				"description": "A variable."
			}, {
				"name": "call",
				"description": "The term in the formula, as a call."
			}]
		}, {
			"name": "getInitial",
			"args": [{
				"name": "object",
				"description": "a formula or a <code>selfStart</code> model that defines a\n    nonlinear regression model"
			}, {
				"name": "data",
				"description": "a data frame in which the expressions in the formula or\n    arguments to the <code>selfStart</code> model can be evaluated"
			}, {
				"name": "...",
				"description": "optional additional arguments"
			}]
		}, {
			"name": "kernapply",
			"args": [{
				"name": "x",
				"description": "an input vector, matrix, time series or kernel to be smoothed."
			}, {
				"name": "k",
				"description": "smoothing <code>&quot;tskernel&quot;</code> object."
			}, {
				"name": "circular",
				"description": "a logical indicating whether the input sequence to be\n    smoothed is treated as circular, i.e., periodic."
			}, {
				"name": "...",
				"description": "arguments passed to or from other methods."
			}]
		}, {
			"name": "logLik",
			"args": [{
				"name": "object",
				"description": "any object from which a log-likelihood value, or a\n   contribution to a log-likelihood value, can be extracted."
			}, {
				"name": "...",
				"description": "some methods for this generic function require additional\n   arguments."
			}, {
				"name": "REML",
				"description": "an optional logical value.  If <code>TRUE</code> the restricted\n    log-likelihood is returned, else, if <code>FALSE</code>, the\n    log-likelihood is returned.  Defaults to <code>FALSE</code>."
			}]
		}, {
			"name": "kernel",
			"args": [{
				"name": "coef",
				"description": "the upper half of the smoothing kernel coefficients\n    (including coefficient zero) <em>or</em> the name of a kernel\n    (currently <code>&quot;daniell&quot;</code>, <code>&quot;dirichlet&quot;</code>, <code>&quot;fejer&quot;</code> or\n    <code>&quot;modified.daniell&quot;</code>."
			}, {
				"name": "m",
				"description": "the kernel dimension(s) if <code>coef</code> is a name.  When <code>m</code>\n    has length larger than one, it means the convolution of\n    kernels of dimension <code>m[j]</code>, for <code>j in 1:length(m)</code>.\n    Currently this is supported only for the named &quot;*daniell&quot; kernels."
			}, {
				"name": "name",
				"description": "the name the kernel will be called."
			}, {
				"name": "r",
				"description": "the kernel order for a Fejer kernel."
			}, {
				"name": "k, x",
				"description": "a <code>&quot;tskernel&quot;</code> object."
			}, {
				"name": "type, xlab, ylab, main, ...",
				"description": "arguments passed to\n    <code><a rd-options=\"\" href=\"/link/plot.default?package=stats&amp;version=3.3.2\">plot.default</a></code>."
			}]
		}, {
			"name": "mantelhaen.test",
			"args": [{
				"name": "x",
				"description": "either a 3-dimensional contingency table in array form where\n    each dimension is at least 2 and the last dimension corresponds to\n    the strata, or a factor object with at least 2 levels."
			}, {
				"name": "y",
				"description": "a factor object with at least 2 levels; ignored if <code>x</code>\n    is an array."
			}, {
				"name": "z",
				"description": "a factor object with at least 2 levels identifying to which\n    stratum the corresponding elements in <code>x</code> and <code>y</code> belong;\n    ignored if <code>x</code> is an array."
			}, {
				"name": "alternative",
				"description": "indicates the alternative hypothesis and must be\n    one of <code>&quot;two.sided&quot;</code>, <code>&quot;greater&quot;</code> or <code>&quot;less&quot;</code>.\n    You can specify just the initial letter.\n    Only used in the 2 by 2 by $K$ case."
			}, {
				"name": "correct",
				"description": "a logical indicating whether to apply continuity\n    correction when computing the test statistic.\n    Only used in the 2 by 2 by $K$ case."
			}, {
				"name": "exact",
				"description": "a logical indicating whether the Mantel-Haenszel test or\n    the exact conditional test (given the strata margins) should be\n    computed.\n    Only used in the 2 by 2 by $K$ case."
			}, {
				"name": "conf.level",
				"description": "confidence level for the returned confidence\n    interval.\n    Only used in the 2 by 2 by $K$ case."
			}]
		}, {
			"name": "manova",
			"args": [{
				"name": "...",
				"description": "Arguments to be passed to <code><a rd-options=\"\" href=\"/link/aov?package=stats&amp;version=3.3.2\">aov</a></code>."
			}]
		}, {
			"name": "loglin",
			"args": [{
				"name": "table",
				"description": "a contingency table to be fit, typically the output from\n    <code>table</code>."
			}, {
				"name": "margin",
				"description": "a list of vectors with the marginal totals to be fit.\n\n    (Hierarchical) log-linear models can be specified in terms of these\n    marginal totals which give the &#x2018;maximal&#x2019; factor subsets contained\n    in the model.  For example, in a three-factor model,\n    <code>list(c(1, 2), c(1, 3))</code> specifies a model which contains\n    parameters for the grand mean, each factor, and the 1-2 and 1-3\n    interactions, respectively (but no 2-3 or 1-2-3 interaction), i.e.,\n    a model where factors 2 and 3 are independent conditional on factor\n    1 (sometimes represented as &#x2018;[12][13]&#x2019;).\n\n    The names of factors (i.e., <code>names(dimnames(table))</code>) may be\n    used rather than numeric indices."
			}, {
				"name": "start",
				"description": "a starting estimate for the fitted table.  This optional\n    argument is important for incomplete tables with structural zeros\n    in <code>table</code> which should be preserved in the fit.  In this\n    case, the corresponding entries in <code>start</code> should be zero and\n    the others can be taken as one."
			}, {
				"name": "fit",
				"description": "a logical indicating whether the fitted values should be\n    returned."
			}, {
				"name": "eps",
				"description": "maximum deviation allowed between observed and fitted\n    margins."
			}, {
				"name": "iter",
				"description": "maximum number of iterations."
			}, {
				"name": "param",
				"description": "a logical indicating whether the parameter values should\n    be returned."
			}, {
				"name": "print",
				"description": "a logical.  If <code>TRUE</code>, the number of iterations and\n    the final deviation are printed."
			}]
		}, {
			"name": "mood.test",
			"args": [{
				"name": "x, y",
				"description": "numeric vectors of data values."
			}, {
				"name": "alternative",
				"description": "indicates the alternative hypothesis and must be\n    one of <code>&quot;two.sided&quot;</code> (default), <code>&quot;greater&quot;</code> or\n    <code>&quot;less&quot;</code> all of which can be abbreviated."
			}, {
				"name": "formula",
				"description": "a formula of the form <code>lhs ~ rhs</code> where <code>lhs</code>\n    is a numeric variable giving the data values and <code>rhs</code> a factor\n    with two levels giving the corresponding groups."
			}, {
				"name": "data",
				"description": "an optional matrix or data frame (or similar: see\n    <code><a rd-options=\"\" href=\"/link/model.frame?package=stats&amp;version=3.3.2\">model.frame</a></code>) containing the variables in the\n    formula <code>formula</code>.  By default the variables are taken from\n    <code>environment(formula)</code>."
			}, {
				"name": "subset",
				"description": "an optional vector specifying a subset of observations\n    to be used."
			}, {
				"name": "na.action",
				"description": "a function which indicates what should happen when\n    the data contain <code>NA</code>s.  Defaults to\n    <code>getOption(&quot;na.action&quot;)</code>."
			}, {
				"name": "...",
				"description": "further arguments to be passed to or from methods."
			}]
		}, {
			"name": "monthplot",
			"args": [{
				"name": "x",
				"description": "Time series or related object."
			}, {
				"name": "labels",
				"description": "Labels to use for each &#x2018;season&#x2019;."
			}, {
				"name": "ylab",
				"description": "y label."
			}, {
				"name": "times",
				"description": "Time of each observation."
			}, {
				"name": "phase",
				"description": "Indicator for each &#x2018;season&#x2019;."
			}, {
				"name": "base",
				"description": "Function to use for reference line for subseries."
			}, {
				"name": "choice",
				"description": "Which series of an <code>stl</code> or <code>StructTS</code> object?"
			}, {
				"name": "...",
				"description": "Arguments to be passed to the default method or\n    graphical parameters."
			}, {
				"name": "axes",
				"description": "Should axes be drawn (ignored if <code>add = TRUE</code>)?"
			}, {
				"name": "type",
				"description": "Type of plot.  The default is to join the points with\n    lines, and <code>&quot;h&quot;</code> is for histogram-like vertical lines."
			}, {
				"name": "box",
				"description": "Should a box be drawn (ignored if <code>add = TRUE</code>?"
			}, {
				"name": "add",
				"description": "Should thus just add on an existing plot."
			}, {
				"name": "col, lty, lwd",
				"description": "Graphics parameters for the series."
			}, {
				"name": "col.base, lty.base, lwd.base",
				"description": "Graphics parameters for the\n    segments used for the reference lines."
			}]
		}, {
			"name": "nls.control",
			"args": [{
				"name": "maxiter",
				"description": "A positive integer specifying the maximum number of\n    iterations allowed."
			}, {
				"name": "tol",
				"description": "A positive numeric value specifying the tolerance level for\n    the relative offset convergence criterion."
			}, {
				"name": "minFactor",
				"description": "A positive numeric value specifying the minimum\n    step-size factor allowed on any step in the iteration.  The\n    increment is calculated with a Gauss-Newton algorithm and\n    successively halved until the residual sum of squares has been\n    decreased or until the step-size factor has been reduced below this\n    limit."
			}, {
				"name": "printEval",
				"description": "a logical specifying whether the number of evaluations\n    (steps in the gradient direction taken each iteration) is printed."
			}, {
				"name": "warnOnly",
				"description": "a logical specifying whether <code><a rd-options=\"\" href=\"/link/nls?package=stats&amp;version=3.3.2\">nls</a>()</code> should\n    return instead of signalling an error in the case of termination\n    before convergence.\n    Termination before convergence happens upon completion of <code>maxiter</code>\n    iterations, in the case of a singular gradient, and in the case that the\n    step-size factor is reduced below <code>minFactor</code>."
			}]
		}, {
			"name": "NLSstAsymptotic",
			"args": [{
				"name": "xy",
				"description": "a <code>sortedXyData</code> object"
			}]
		}, {
			"name": "pairwise.prop.test",
			"args": [{
				"name": "x",
				"description": "Vector of counts of successes or a matrix with 2 columns\n   giving the counts of successes and failures, respectively."
			}, {
				"name": "n",
				"description": "Vector of counts of trials; ignored if <code>x</code> is a matrix."
			}, {
				"name": "p.adjust.method",
				"description": "Method for adjusting p values\n   (see <code><a rd-options=\"\" href=\"/link/p.adjust?package=stats&amp;version=3.3.2\">p.adjust</a></code>).  Can be abbreviated."
			}, {
				"name": "...",
				"description": "Additional arguments to pass to <code>prop.test</code>"
			}]
		}, {
			"name": "pairwise.t.test",
			"args": [{
				"name": "x",
				"description": "response vector."
			}, {
				"name": "g",
				"description": "grouping vector or factor."
			}, {
				"name": "p.adjust.method",
				"description": "Method for adjusting p values (see <code><a rd-options=\"\" href=\"/link/p.adjust?package=stats&amp;version=3.3.2\">p.adjust</a></code>)."
			}, {
				"name": "pool.sd",
				"description": "switch to allow/disallow the use of a pooled SD"
			}, {
				"name": "paired",
				"description": "a logical indicating whether you want paired\n    t-tests."
			}, {
				"name": "alternative",
				"description": "a character string specifying the alternative\n    hypothesis, must be one of <code>&quot;two.sided&quot;</code> (default),\n    <code>&quot;greater&quot;</code> or <code>&quot;less&quot;</code>.  Can be abbreviated."
			}, {
				"name": "...",
				"description": "additional arguments to pass to <code>t.test</code>."
			}]
		}, {
			"name": "fitted",
			"args": [{
				"name": "object",
				"description": "an object for which the extraction of model fitted values is\n    meaningful."
			}, {
				"name": "...",
				"description": "other arguments."
			}]
		}, {
			"name": "fisher.test",
			"args": [{
				"name": "x",
				"description": "either a two-dimensional contingency table in matrix form,\n    or a factor object."
			}, {
				"name": "y",
				"description": "a factor object; ignored if <code>x</code> is a matrix."
			}, {
				"name": "workspace",
				"description": "an integer specifying the size of the workspace\n    used in the network algorithm.  In units of 4 bytes.  Only used for\n    non-simulated p-values larger than $2 by 2$ tables."
			}, {
				"name": "hybrid",
				"description": "a logical. Only used for larger than $2 by 2$\n    tables, in which cases it indicates whether the exact probabilities\n    (default) or a hybrid approximation thereof should be computed.\n    See &#x2018;Details&#x2019;."
			}, {
				"name": "control",
				"description": "a list with named components for low level algorithm\n    control.  At present the only one used is <code>&quot;mult&quot;</code>, a positive\n    integer $\\ge 2$ with default 30 used only for larger than\n    $2 by 2$ tables.  This says how many times as much\n    space should be allocated to paths as to keys: see file\n    &#x2018;<span class=\"file\">fexact.c</span>&#x2019; in the sources of this package."
			}, {
				"name": "or",
				"description": "the hypothesized odds ratio.  Only used in the\n    $2 by 2$ case."
			}, {
				"name": "alternative",
				"description": "indicates the alternative hypothesis and must be\n    one of <code>&quot;two.sided&quot;</code>, <code>&quot;greater&quot;</code> or <code>&quot;less&quot;</code>.\n    You can specify just the initial letter.  Only used in the\n    $2 by 2$ case."
			}, {
				"name": "conf.int",
				"description": "logical indicating if a confidence interval for the\n    odds ratio in a $2 by 2$ table should be\n    computed (and returned)."
			}, {
				"name": "conf.level",
				"description": "confidence level for the returned confidence\n    interval.  Only used in the $2 by 2$ case and if\n    <code>conf.int = TRUE</code>."
			}, {
				"name": "simulate.p.value",
				"description": "a logical indicating whether to compute\n    p-values by Monte Carlo simulation, in larger than $2 by 2$ tables."
			}, {
				"name": "B",
				"description": "an integer specifying the number of replicates used in the\n    Monte Carlo test."
			}]
		}, {
			"name": "ftable.formula",
			"args": [{
				"name": "formula",
				"description": "a formula object with both left and right hand sides\n    specifying the column and row variables of the flat table."
			}, {
				"name": "data",
				"description": "a data frame, list or environment (or similar: see\n    <code><a rd-options=\"\" href=\"/link/model.frame?package=stats&amp;version=3.3.2\">model.frame</a></code>) containing the variables\n    to be cross-tabulated, or a contingency table (see below)."
			}, {
				"name": "subset",
				"description": "an optional vector specifying a subset of observations\n    to be used.\n    Ignored if <code>data</code> is a contingency table."
			}, {
				"name": "na.action",
				"description": "a function which indicates what should happen when\n    the data contain <code>NA</code>s.\n    Ignored if <code>data</code> is a contingency table."
			}, {
				"name": "...",
				"description": "further arguments to the default ftable method may also\n    be passed as arguments, see <code><a rd-options=\"\" href=\"/link/ftable.default?package=stats&amp;version=3.3.2\">ftable.default</a></code>."
			}]
		}, {
			"name": "friedman.test",
			"args": [{
				"name": "y",
				"description": "either a numeric vector of data values, or a data matrix."
			}, {
				"name": "groups",
				"description": "a vector giving the group for the corresponding\n    elements of <code>y</code> if this is a vector;  ignored if <code>y</code>\n    is a matrix.  If not a factor object, it is coerced to one."
			}, {
				"name": "blocks",
				"description": "a vector giving the block for the corresponding\n    elements of <code>y</code> if this is a vector;  ignored if <code>y</code>\n    is a matrix.  If not a factor object, it is coerced to one."
			}, {
				"name": "formula",
				"description": "a formula of the form <code>a ~ b | c</code>, where <code>a</code>,\n    <code>b</code> and <code>c</code> give the data values and corresponding groups\n    and blocks, respectively."
			}, {
				"name": "data",
				"description": "an optional matrix or data frame (or similar: see\n    <code><a rd-options=\"\" href=\"/link/model.frame?package=stats&amp;version=3.3.2\">model.frame</a></code>) containing the variables in the\n    formula <code>formula</code>.  By default the variables are taken from\n    <code>environment(formula)</code>."
			}, {
				"name": "subset",
				"description": "an optional vector specifying a subset of observations\n    to be used."
			}, {
				"name": "na.action",
				"description": "a function which indicates what should happen when\n    the data contain <code>NA</code>s.  Defaults to\n    <code>getOption(&quot;na.action&quot;)</code>."
			}, {
				"name": "...",
				"description": "further arguments to be passed to or from methods."
			}]
		}, {
			"name": "is.empty.model",
			"args": [{
				"name": "x",
				"description": "A <code>terms</code> object or an object with a <code>terms</code> method."
			}]
		}, {
			"name": "lag",
			"args": [{
				"name": "x",
				"description": "A vector or matrix or univariate or multivariate time series"
			}, {
				"name": "k",
				"description": "The number of lags (in units of observations)."
			}, {
				"name": "...",
				"description": "further arguments to be passed to or from methods."
			}]
		}, {
			"name": "IQR",
			"args": [{
				"name": "x",
				"description": "a numeric vector."
			}, {
				"name": "na.rm",
				"description": "logical. Should missing values be removed?"
			}, {
				"name": "type",
				"description": "an integer selecting one of the many quantile algorithms,\n    see <code><a rd-options=\"\" href=\"/link/quantile?package=stats&amp;version=3.3.2\">quantile</a></code>."
			}]
		}, {
			"name": "lag.plot",
			"args": [{
				"name": "x",
				"description": "time-series (univariate or multivariate)"
			}, {
				"name": "lags",
				"description": "number of lag plots desired, see arg <code>set.lags</code>."
			}, {
				"name": "layout",
				"description": "the layout of multiple plots, basically the <code>mfrow</code>\n    <code><a rd-options=\"\" href=\"/link/par?package=stats&amp;version=3.3.2\">par</a>()</code> argument.  The default uses about a square\n    layout (see <code><a rd-options=\"\" href=\"/link/n2mfrow?package=stats&amp;version=3.3.2\">n2mfrow</a></code> such that all plots are on one page."
			}, {
				"name": "set.lags",
				"description": "vector of positive integers allowing specification of\n    the set of lags used; defaults to <code>1:lags</code>."
			}, {
				"name": "main",
				"description": "character with a main header title to be done on the top\n    of each page."
			}, {
				"name": "asp",
				"description": "Aspect ratio to be fixed, see <code><a rd-options=\"\" href=\"/link/plot.default?package=stats&amp;version=3.3.2\">plot.default</a></code>."
			}, {
				"name": "diag",
				"description": "logical indicating if the x=y diagonal should be drawn."
			}, {
				"name": "diag.col",
				"description": "color to be used for the diagonal <code>if(diag)</code>."
			}, {
				"name": "type",
				"description": "plot type to be used, but see <code><a rd-options=\"\" href=\"/link/plot.ts?package=stats&amp;version=3.3.2\">plot.ts</a></code> about\n    its restricted meaning."
			}, {
				"name": "oma",
				"description": "outer margins, see <code><a rd-options=\"\" href=\"/link/par?package=stats&amp;version=3.3.2\">par</a></code>."
			}, {
				"name": "ask",
				"description": "logical or <code>NULL</code>; if true, the user is asked to\n    confirm before a new page is started."
			}, {
				"name": "do.lines",
				"description": "logical indicating if lines should be drawn."
			}, {
				"name": "labels",
				"description": "logical indicating if labels should be used."
			}, {
				"name": "...",
				"description": "Further arguments to <code><a rd-options=\"\" href=\"/link/plot.ts?package=stats&amp;version=3.3.2\">plot.ts</a></code>.  Several\n    graphical parameters are set in this function and so cannot be\n    changed: these include <code>xlab</code>, <code>ylab</code>, <code>mgp</code>,\n    <code>col.lab</code> and <code>font.lab</code>: this also applies to the\n    arguments <code>xy.labels</code> and <code>xy.lines</code>."
			}]
		}, {
			"name": "loadings",
			"args": [{
				"name": "x",
				"description": "an object of class <code>&quot;<a rd-options=\"\" href=\"/link/factanal?package=stats&amp;version=3.3.2\">factanal</a>&quot;</code> or\n    <code>&quot;<a rd-options=\"\" href=\"/link/princomp?package=stats&amp;version=3.3.2\">princomp</a>&quot;</code> or the <code>loadings</code> component of such an\n    object."
			}, {
				"name": "digits",
				"description": "number of decimal places to use in printing uniquenesses\n    and loadings."
			}, {
				"name": "cutoff",
				"description": "loadings smaller than this (in absolute value) are suppressed."
			}, {
				"name": "sort",
				"description": "logical. If true, the variables are sorted by their\n    importance on each factor.  Each variable with any loading larger\n    than 0.5 (in modulus) is assigned to the factor with the largest\n    loading, and the variables are printed in the order of the factor\n    they are assigned to, then those unassigned."
			}, {
				"name": "...",
				"description": "further arguments for other methods,\n    ignored for <code>loadings</code>."
			}]
		}, {
			"name": "loess.control",
			"args": [{
				"name": "surface",
				"description": "should the fitted surface be computed exactly\n   (<code>&quot;direct&quot;</code>) or via interpolation from a kd tree?  Can be abbreviated."
			}, {
				"name": "statistics",
				"description": "should the statistics be computed exactly,\n   approximately or not at all?  Exact computation can be very slow.\n   Can be abbreviated."
			}, {
				"name": "trace.hat",
				"description": "Only for the (default) case <code>(surface =\n     &quot;interpolate&quot;, statistics = &quot;approximate&quot;)</code>: should the trace of\n   the smoother matrix be computed exactly or approximately?  It is recommended to use the approximation\n   for more than about 1000 data points.  Can be abbreviated."
			}, {
				"name": "cell",
				"description": "if interpolation is used this controls the accuracy of the\n   approximation via the maximum number of points in a  cell in the kd\n   tree. Cells with more than <code>floor(n*span*cell)</code> points are subdivided."
			}, {
				"name": "iterations",
				"description": "the number of iterations used in robust fitting,\n   i.e. only if <code>family</code> is <code>&quot;symmetric&quot;</code>."
			}, {
				"name": "iterTrace",
				"description": "logical (or integer) determining if tracing\n   information during the robust iterations (<code>iterations</code>$&gt;= 2$) is produced."
			}, {
				"name": "...",
				"description": "further arguments which are ignored."
			}]
		}, {}, {
			"name": "Poisson",
			"args": [{
				"name": "x",
				"description": "vector of (non-negative integer) quantiles."
			}, {
				"name": "q",
				"description": "vector of quantiles."
			}, {
				"name": "p",
				"description": "vector of probabilities."
			}, {
				"name": "n",
				"description": "number of random values to return."
			}, {
				"name": "lambda",
				"description": "vector of (non-negative) means."
			}, {
				"name": "log, log.p",
				"description": "logical; if TRUE, probabilities p are given as log(p)."
			}, {
				"name": "lower.tail",
				"description": "logical; if TRUE (default), probabilities are\n    $P[X \\le x]$, otherwise, $P[X &gt; x]$."
			}]
		}, {
			"name": "plot.spec",
			"args": [{
				"name": "x",
				"description": "an object of class <code>&quot;spec&quot;</code>."
			}, {
				"name": "add",
				"description": "logical.  If <code>TRUE</code>, add to already existing plot.\n    Only valid for <code>plot.type = &quot;marginal&quot;</code>."
			}, {
				"name": "ci",
				"description": "coverage probability for confidence interval.  Plotting of\n    the confidence bar/limits is omitted unless <code>ci</code> is strictly\n    positive."
			}, {
				"name": "log",
				"description": "If <code>&quot;dB&quot;</code>, plot on log10 (decibel) scale (as S-PLUS),\n    otherwise use conventional log scale or linear scale.  Logical\n    values are also accepted.  The default is <code>&quot;yes&quot;</code> unless\n    <code>options(ts.S.compat = TRUE)</code> has been set, when it is\n    <code>&quot;dB&quot;</code>.  Only valid for <code>plot.type = &quot;marginal&quot;</code>."
			}, {
				"name": "xlab",
				"description": "the x label of the plot."
			}, {
				"name": "ylab",
				"description": "the y label of the plot.  If missing a suitable label will\n    be constructed."
			}, {
				"name": "type",
				"description": "the type of plot to be drawn, defaults to lines."
			}, {
				"name": "ci.col",
				"description": "colour for plotting confidence bar or confidence\n    intervals for coherency and phase."
			}, {
				"name": "ci.lty",
				"description": "line type for confidence intervals for coherency and\n    phase."
			}, {
				"name": "main",
				"description": "overall title for the plot. If missing, a suitable title\n    is constructed."
			}, {
				"name": "sub",
				"description": "a sub title for the plot.  Only used for <code>plot.type =\n      &quot;marginal&quot;</code>.  If missing, a description of the smoothing is used."
			}, {
				"name": "plot.type",
				"description": "For multivariate time series, the type of plot\n    required.  Only the first character is needed."
			}, {
				"name": "ylim, ...",
				"description": "Graphical parameters."
			}]
		}, {
			"name": "predict.HoltWinters",
			"args": [{
				"name": "object",
				"description": "An object of class <code>HoltWinters</code>."
			}, {
				"name": "n.ahead",
				"description": "Number of future periods to predict."
			}, {
				"name": "prediction.interval",
				"description": "logical. If <code>TRUE</code>, the lower and\n    upper bounds of the corresponding prediction intervals are computed."
			}, {
				"name": "level",
				"description": "Confidence level for the prediction interval."
			}, {
				"name": "...",
				"description": "arguments passed to or from other methods."
			}]
		}, {
			"name": "predict.glm",
			"args": [{
				"name": "object",
				"description": "a fitted object of class inheriting from <code>&quot;glm&quot;</code>."
			}, {
				"name": "newdata",
				"description": "optionally, a data frame in which to look for variables with\n    which to predict.  If omitted, the fitted linear predictors are used."
			}, {
				"name": "type",
				"description": "the type of prediction required.  The default is on the\n    scale of the linear predictors; the alternative <code>&quot;response&quot;</code>\n    is on the scale of the response variable.  Thus for a default\n    binomial model the default predictions are of log-odds (probabilities\n    on logit scale) and <code>type = &quot;response&quot;</code> gives the predicted\n    probabilities.  The <code>&quot;terms&quot;</code> option returns a matrix giving the\n    fitted values of each term in the model formula on the linear predictor\n    scale.\n\n    The value of this argument can be abbreviated."
			}, {
				"name": "se.fit",
				"description": "logical switch indicating if standard errors are required."
			}, {
				"name": "dispersion",
				"description": "the dispersion of the GLM fit to be assumed in\n    computing the standard errors.  If omitted, that returned by\n    <code>summary</code> applied to the object is used."
			}, {
				"name": "terms",
				"description": "with <code>type = &quot;terms&quot;</code> by default all terms are returned.\n    A character vector specifies which terms are to be returned"
			}, {
				"name": "na.action",
				"description": "function determining what should be done with missing\n    values in <code>newdata</code>.  The default is to predict <code>NA</code>."
			}, {
				"name": "...",
				"description": "further arguments passed to or from other methods."
			}]
		}, {
			"name": "poisson.test",
			"args": [{
				"name": "x",
				"description": "number of events. A vector of length one or two."
			}, {
				"name": "T",
				"description": "time base for event count. A vector of length one or two."
			}, {
				"name": "r",
				"description": "hypothesized rate or rate ratio"
			}, {
				"name": "alternative",
				"description": "indicates the alternative hypothesis and must be\n    one of <code>&quot;two.sided&quot;</code>, <code>&quot;greater&quot;</code> or <code>&quot;less&quot;</code>.\n    You can specify just the initial letter."
			}, {
				"name": "conf.level",
				"description": "confidence level for the returned confidence\n    interval."
			}]
		}, {
			"name": "prop.test",
			"args": [{
				"name": "x",
				"description": "a vector of counts of successes, a one-dimensional table with\n    two entries, or a two-dimensional table (or matrix) with 2 columns,\n    giving the counts of successes and failures, respectively."
			}, {
				"name": "n",
				"description": "a vector of counts of trials; ignored if <code>x</code> is a\n    matrix or a table."
			}, {
				"name": "p",
				"description": "a vector of probabilities of success.  The length of\n    <code>p</code> must be the same as the number of groups specified by\n    <code>x</code>, and its elements must be greater than 0 and less than 1."
			}, {
				"name": "alternative",
				"description": "a character string specifying the alternative\n    hypothesis, must be one of <code>&quot;two.sided&quot;</code> (default),\n    <code>&quot;greater&quot;</code> or <code>&quot;less&quot;</code>.  You can specify just the initial\n    letter.  Only used for testing the null that a single proportion\n    equals a given value, or that two proportions are equal; ignored\n    otherwise."
			}, {
				"name": "conf.level",
				"description": "confidence level of the returned confidence\n    interval.  Must be a single number between 0 and 1.  Only used\n    when testing the null that a single proportion equals a given\n    value, or that two proportions are equal; ignored otherwise."
			}, {
				"name": "correct",
				"description": "a logical indicating whether Yates&apos; continuity\n    correction should be applied where possible."
			}]
		}, {
			"name": "proj",
			"args": [{
				"name": "object",
				"description": "An object of class <code>&quot;lm&quot;</code> or a class inheriting from\n   it, or an object with a similar structure including in particular\n   components <code>qr</code> and <code>effects</code>."
			}, {
				"name": "onedf",
				"description": "A logical flag. If <code>TRUE</code>, a projection is returned for all\n   the columns of the model matrix. If <code>FALSE</code>, the single-column\n   projections are collapsed by terms of the model (as represented in\n   the analysis of variance table)."
			}, {
				"name": "unweighted.scale",
				"description": "If the fit producing <code>object</code> used\n   weights, this determines if the projections correspond to weighted or\n   unweighted observations."
			}, {
				"name": "...",
				"description": "Swallow and ignore any other arguments."
			}]
		}, {
			"name": "se.contrast",
			"args": [{
				"name": "object",
				"description": "A suitable fit, usually from <code>aov</code>."
			}, {
				"name": "contrast.obj",
				"description": "The contrasts for which standard errors are\n   requested.  This can be specified via a list or via a matrix.  A\n   single contrast can be specified by a list of logical vectors giving\n   the cells to be contrasted.  Multiple contrasts should be specified\n   by a matrix, each column of which is a numerical contrast vector\n   (summing to zero)."
			}, {
				"name": "coef",
				"description": "used when <code>contrast.obj</code> is a list; it should be a\n   vector of the same length as the list with zero sum.  The default\n   value is the first Helmert contrast, which contrasts the first and\n   second cell means specified by the list."
			}, {
				"name": "data",
				"description": "The data frame used to evaluate <code>contrast.obj</code>."
			}, {
				"name": "...",
				"description": "further arguments passed to or from other methods."
			}]
		}, {
			"name": "model.matrix",
			"args": [{
				"name": "object",
				"description": "an object of an appropriate class.  For the default\n    method, a model <a rd-options=\"\" href=\"/link/formula?package=stats&amp;version=3.3.2\">formula</a> or a <code><a rd-options=\"\" href=\"/link/terms?package=stats&amp;version=3.3.2\">terms</a></code> object."
			}, {
				"name": "data",
				"description": "a data frame created with <code><a rd-options=\"\" href=\"/link/model.frame?package=stats&amp;version=3.3.2\">model.frame</a></code>.  If\n    another sort of object, <code>model.frame</code> is called first."
			}, {
				"name": "contrasts.arg",
				"description": "A list, whose entries are values (numeric\n    matrices or character strings naming functions) to be used\n    as replacement values for the <code><a rd-options=\"\" href=\"/link/contrasts?package=stats&amp;version=3.3.2\">contrasts</a></code>\n    replacement function and whose names are the names of\n    columns of <code>data</code> containing <code><a rd-options=\"\" href=\"/link/factor?package=stats&amp;version=3.3.2\">factor</a></code>s."
			}, {
				"name": "xlev",
				"description": "to be used as argument of <code><a rd-options=\"\" href=\"/link/model.frame?package=stats&amp;version=3.3.2\">model.frame</a></code> if\n    <code>data</code> is such that <code>model.frame</code> is called."
			}, {
				"name": "...",
				"description": "further arguments passed to or from other methods."
			}]
		}, {
			"name": "selfStart",
			"args": [{
				"name": "model",
				"description": "a function object defining a nonlinear model or\n    a nonlinear formula object of the form <code>~expression</code>."
			}, {
				"name": "initial",
				"description": "a function object, taking three arguments: <code>mCall</code>,\n   <code>data</code>, and <code>LHS</code>, representing, respectively, a matched\n   call to the function <code>model</code>, a data frame in\n   which to interpret the variables in <code>mCall</code>, and the expression\n   from the left-hand side of the model formula in the call to <code>nls</code>.\n   This function should return initial values for the parameters in\n   <code>model</code>."
			}, {
				"name": "parameters",
				"description": "a character vector specifying the terms on the right\n    hand side of <code>model</code> for which initial estimates should be\n    calculated.  Passed as the <code>namevec</code> argument to the\n    <code>deriv</code> function."
			}, {
				"name": "template",
				"description": "an optional prototype for the calling sequence of the\n    returned object, passed as the <code>function.arg</code> argument to the\n    <code>deriv</code> function.  By default, a template is generated with the\n    covariates in <code>model</code> coming first and the parameters in\n    <code>model</code> coming last in the calling sequence."
			}]
		}, {
			"name": "plot.isoreg",
			"args": [{
				"name": "x",
				"description": "an <code><a rd-options=\"\" href=\"/link/isoreg?package=stats&amp;version=3.3.2\">isoreg</a></code> object."
			}, {
				"name": "plot.type",
				"description": "character indicating which type of plot is desired.\n    The first (default) only draws the data and the fit, where the\n    others add a plot of the cumulative data and fit.  Can be abbreviated."
			}, {
				"name": "main",
				"description": "main title of plot, see <code><a rd-options=\"\" href=\"/link/title?package=stats&amp;version=3.3.2\">title</a></code>."
			}, {
				"name": "main2",
				"description": "title for second (cumulative) plot."
			}, {
				"name": "xlab, ylab",
				"description": "x- and y- axis annotation."
			}, {
				"name": "par.fit",
				"description": "a <code><a rd-options=\"\" href=\"/link/list?package=stats&amp;version=3.3.2\">list</a></code> of arguments (for\n    <code><a rd-options=\"\" href=\"/link/points?package=stats&amp;version=3.3.2\">points</a></code> and <code><a rd-options=\"\" href=\"/link/lines?package=stats&amp;version=3.3.2\">lines</a></code>) for drawing the fit."
			}, {
				"name": "mar, mgp",
				"description": "graphical parameters, see <code><a rd-options=\"\" href=\"/link/par?package=stats&amp;version=3.3.2\">par</a></code>, mainly\n    for the case of two plots."
			}, {
				"name": "grid",
				"description": "logical indicating if grid lines should be drawn.  If\n    true, <code><a rd-options=\"\" href=\"/link/grid?package=stats&amp;version=3.3.2\">grid</a>()</code> is used for the first plot, where as\n    vertical lines are drawn at &#x2018;touching&#x2019; points for the\n    cumulative plot."
			}, {
				"name": "do.points",
				"description": "for <code>lines()</code>: logical indicating if the step\n    points should be drawn as well (and as they are drawn in <code>plot()</code>)."
			}, {
				"name": "col, lwd, cex, pch",
				"description": "graphical arguments for <code>lines()</code>,\n    where <code>cex</code> and <code>pch</code> are only used when <code>do.points</code>\n    is <code>TRUE</code>."
			}, {
				"name": "...",
				"description": "further arguments passed to and from methods."
			}]
		}, {
			"name": "plot.HoltWinters",
			"args": [{
				"name": "x",
				"description": "Object of class <code>&quot;HoltWinters&quot;</code>"
			}, {
				"name": "predicted.values",
				"description": "Predicted values as returned by <code>predict.HoltWinters</code>"
			}, {
				"name": "intervals",
				"description": "If <code>TRUE</code>, the prediction intervals are plotted (default)."
			}, {
				"name": "separator",
				"description": "If <code>TRUE</code>, a separating line between fitted and predicted values is plotted (default)."
			}, {
				"name": "col, lty",
				"description": "Color/line type of original data (default: black solid)."
			}, {
				"name": "col.predicted, lty.predicted",
				"description": "Color/line type of\n    fitted and predicted values (default: red solid)."
			}, {
				"name": "col.intervals, lty.intervals",
				"description": "Color/line type of prediction\n    intervals (default: blue solid)."
			}, {
				"name": "col.separator, lty.separator",
				"description": "Color/line type of\n    observed/predicted values separator (default: black dashed)."
			}, {
				"name": "ylab",
				"description": "Label of the y-axis."
			}, {
				"name": "main",
				"description": "Main title."
			}, {
				"name": "ylim",
				"description": "Limits of the y-axis. If <code>NULL</code>, the range is chosen\n    such that the plot contains the original series, the fitted values,\n    and the predicted values if any."
			}, {
				"name": "...",
				"description": "Other graphics parameters."
			}]
		}, {
			"name": "NLSstLfAsymptote",
			"args": [{
				"name": "xy",
				"description": "a <code>sortedXyData</code> object"
			}]
		}, {
			"name": "model.tables",
			"args": [{
				"name": "x",
				"description": "a model object, usually produced by <code>aov</code>"
			}, {
				"name": "type",
				"description": "type of table: currently only <code>&quot;effects&quot;</code> and\n    <code>&quot;means&quot;</code> are implemented.  Can be abbreviated."
			}, {
				"name": "se",
				"description": "should standard errors be computed?"
			}, {
				"name": "cterms",
				"description": "A character vector giving the names of the terms for\n    which tables should be computed. The default is all tables."
			}, {
				"name": "...",
				"description": "further arguments passed to or from other methods."
			}]
		}, {
			"name": "NLSstClosestX",
			"args": [{
				"name": "xy",
				"description": "a <code>sortedXyData</code> object"
			}, {
				"name": "yval",
				"description": "a numeric value on the <code>y</code> scale"
			}]
		}, {
			"name": "power.prop.test",
			"args": [{
				"name": "n",
				"description": "number of observations (per group)"
			}, {
				"name": "p1",
				"description": "probability in one group"
			}, {
				"name": "p2",
				"description": "probability in other group"
			}, {
				"name": "sig.level",
				"description": "significance level (Type I error probability)"
			}, {
				"name": "power",
				"description": "power of test (1 minus Type II error probability)"
			}, {
				"name": "alternative",
				"description": "one- or two-sided test.  Can be abbreviated."
			}, {
				"name": "strict",
				"description": "use strict interpretation in two-sided case"
			}, {
				"name": "tol",
				"description": "numerical tolerance used in root finding, the default\n    providing (at least) four significant digits."
			}]
		}, {
			"name": "power",
			"args": [{
				"name": "lambda",
				"description": "a real number."
			}]
		}, {
			"name": "prcomp",
			"args": [{
				"name": "formula",
				"description": "a formula with no response variable, referring only to\n    numeric variables."
			}, {
				"name": "data",
				"description": "an optional data frame (or similar: see\n    <code><a rd-options=\"\" href=\"/link/model.frame?package=stats&amp;version=3.3.2\">model.frame</a></code>) containing the variables in the\n    formula <code>formula</code>.  By default the variables are taken from\n    <code>environment(formula)</code>."
			}, {
				"name": "subset",
				"description": "an optional vector used to select rows (observations) of the\n    data matrix <code>x</code>."
			}, {
				"name": "na.action",
				"description": "a function which indicates what should happen\n    when the data contain <code>NA</code>s.  The default is set by\n    the <code>na.action</code> setting of <code><a rd-options=\"\" href=\"/link/options?package=stats&amp;version=3.3.2\">options</a></code>, and is\n    <code><a rd-options=\"\" href=\"/link/na.fail?package=stats&amp;version=3.3.2\">na.fail</a></code> if that is unset. The &#x2018;factory-fresh&#x2019;\n    default is <code><a rd-options=\"\" href=\"/link/na.omit?package=stats&amp;version=3.3.2\">na.omit</a></code>."
			}, {
				"name": "...",
				"description": "arguments passed to or from other methods. If <code>x</code> is\n    a formula one might specify <code>scale.</code> or <code>tol</code>."
			}, {
				"name": "x",
				"description": "a numeric or complex matrix (or data frame) which provides\n    the data for the principal components analysis."
			}, {
				"name": "retx",
				"description": "a logical value indicating whether the rotated variables\n    should be returned."
			}, {
				"name": "center",
				"description": "a logical value indicating whether the variables\n    should be shifted to be zero centered. Alternately, a vector of\n    length equal the number of columns of <code>x</code> can be supplied.\n    The value is passed to <code>scale</code>."
			}, {
				"name": "scale.",
				"description": "a logical value indicating whether the variables should\n    be scaled to have unit variance before the analysis takes\n    place. The default is <code>FALSE</code> for consistency with S, but\n    in general scaling is advisable.  Alternatively, a vector of length\n    equal the number of columns of <code>x</code> can be supplied.  The\n    value is passed to <code><a rd-options=\"\" href=\"/link/scale?package=stats&amp;version=3.3.2\">scale</a></code>."
			}, {
				"name": "tol",
				"description": "a value indicating the magnitude below which components\n    should be omitted. (Components are omitted if their\n    standard deviations are less than or equal to <code>tol</code> times the\n    standard deviation of the first component.)\n    With the default null setting, no components\n    are omitted.  Other settings for tol could be <code>tol = 0</code> or\n    <code>tol = sqrt(.Machine$double.eps)</code>, which would omit\n    essentially constant components."
			}, {
				"name": "object",
				"description": "Object of class inheriting from <code>&quot;prcomp&quot;</code>"
			}, {
				"name": "newdata",
				"description": "An optional data frame or matrix in which to look for\n    variables with which to predict.  If omitted, the scores are used.\n    If the original fit used a formula or a data frame or a matrix with\n    column names, <code>newdata</code> must contain columns with the same\n    names. Otherwise it must contain the same number of columns, to be\n    used in the same order."
			}]
		}, {}, {}, {}, {}, {}, {}, {}, {}, {
			"name": "plot.lm",
			"args": [{
				"name": "x",
				"description": "<code>lm</code> object, typically result of <code><a rd-options=\"\" href=\"/link/lm?package=stats&amp;version=3.3.2\">lm</a></code> or\n    <code><a rd-options=\"\" href=\"/link/glm?package=stats&amp;version=3.3.2\">glm</a></code>."
			}, {
				"name": "which",
				"description": "if a subset of the plots is required, specify a subset of\n    the numbers <code>1:6</code>, see <code>caption</code> below (and the\n    &#x2018;Details&#x2019;) for the different kinds."
			}, {
				"name": "caption",
				"description": "captions to appear above the plots;\n    <code><a rd-options=\"\" href=\"/link/character?package=stats&amp;version=3.3.2\">character</a></code> vector or <code><a rd-options=\"\" href=\"/link/list?package=stats&amp;version=3.3.2\">list</a></code> of valid\n    graphics annotations, see <code><a rd-options=\"\" href=\"/link/as.graphicsAnnot?package=stats&amp;version=3.3.2\">as.graphicsAnnot</a></code>, of length\n    6, the j-th entry corresponding to <code>which[j]</code>.  Can be set to\n    <code>&quot;&quot;</code> or <code>NA</code> to suppress all captions."
			}, {
				"name": "panel",
				"description": "panel function.  The useful alternative to\n    <code><a rd-options=\"\" href=\"/link/points?package=stats&amp;version=3.3.2\">points</a></code>, <code><a rd-options=\"\" href=\"/link/panel.smooth?package=stats&amp;version=3.3.2\">panel.smooth</a></code> can be chosen\n    by <code>add.smooth = TRUE</code>."
			}, {
				"name": "sub.caption",
				"description": "common title---above the figures if there are more\n    than one; used as <code>sub</code> (s.<code><a rd-options=\"\" href=\"/link/title?package=stats&amp;version=3.3.2\">title</a></code>) otherwise.  If\n    <code>NULL</code>, as by default, a possible abbreviated version of\n    <code>deparse(x$call)</code> is used."
			}, {
				"name": "main",
				"description": "title to each plot---in addition to <code>caption</code>."
			}, {
				"name": "ask",
				"description": "logical; if <code>TRUE</code>, the user is <em>ask</em>ed before\n    each plot, see <code><a rd-options=\"\" href=\"/link/par?package=stats&amp;version=3.3.2\">par</a>(ask=.)</code>."
			}, {
				"name": "...",
				"description": "other parameters to be passed through to plotting\n    functions."
			}, {
				"name": "id.n",
				"description": "number of points to be labelled in each plot, starting\n    with the most extreme."
			}, {
				"name": "labels.id",
				"description": "vector of labels, from which the labels for extreme\n    points will be chosen.  <code>NULL</code> uses observation numbers."
			}, {
				"name": "cex.id",
				"description": "magnification of point labels."
			}, {
				"name": "qqline",
				"description": "logical indicating if a <code><a rd-options=\"\" href=\"/link/qqline?package=stats&amp;version=3.3.2\">qqline</a>()</code> should be\n    added to the normal Q-Q plot."
			}, {
				"name": "cook.levels",
				"description": "levels of Cook&apos;s distance at which to draw contours."
			}, {
				"name": "add.smooth",
				"description": "logical indicating if a smoother should be added to\n    most plots; see also <code>panel</code> above."
			}, {
				"name": "label.pos",
				"description": "positioning of labels, for the left half and right\n    half of the graph respectively, for plots 1-3."
			}, {
				"name": "cex.caption",
				"description": "controls the size of <code>caption</code>."
			}, {
				"name": "cex.oma.main",
				"description": "controls the size of the <code>sub.caption</code> only if\n    that is <em>above</em> the figures when there is more than one."
			}]
		}, {
			"name": "quade.test",
			"args": [{
				"name": "y",
				"description": "either a numeric vector of data values, or a data matrix."
			}, {
				"name": "groups",
				"description": "a vector giving the group for the corresponding elements\n    of <code>y</code> if this is a vector;  ignored if <code>y</code> is a matrix.\n    If not a factor object, it is coerced to one."
			}, {
				"name": "blocks",
				"description": "a vector giving the block for the corresponding elements\n    of <code>y</code> if this is a vector;  ignored if <code>y</code> is a matrix.\n    If not a factor object, it is coerced to one."
			}, {
				"name": "formula",
				"description": "a formula of the form <code>a ~ b | c</code>, where <code>a</code>,\n    <code>b</code> and <code>c</code> give the data values and corresponding groups\n    and blocks, respectively."
			}, {
				"name": "data",
				"description": "an optional matrix or data frame (or similar: see\n    <code><a rd-options=\"\" href=\"/link/model.frame?package=stats&amp;version=3.3.2\">model.frame</a></code>) containing the variables in the\n    formula <code>formula</code>.  By default the variables are taken from\n    <code>environment(formula)</code>."
			}, {
				"name": "subset",
				"description": "an optional vector specifying a subset of observations\n    to be used."
			}, {
				"name": "na.action",
				"description": "a function which indicates what should happen when\n    the data contain <code>NA</code>s.  Defaults to\n    <code>getOption(&quot;na.action&quot;)</code>."
			}, {
				"name": "...",
				"description": "further arguments to be passed to or from methods."
			}]
		}, {}, {}, {}, {}, {}, {
			"name": "summary.manova",
			"args": [{
				"name": "object",
				"description": "An object of class <code>&quot;manova&quot;</code> or an <code>aov</code>\n    object with multiple responses."
			}, {
				"name": "test",
				"description": "The name of the test statistic to be used.  Partial\n    matching is used so the name can be abbreviated."
			}, {
				"name": "intercept",
				"description": "logical.  If <code>TRUE</code>, the intercept term is\n    included in the table."
			}, {
				"name": "tol",
				"description": "tolerance to be used in deciding if the residuals are\n    rank-deficient: see <code><a rd-options=\"\" href=\"/link/qr?package=stats&amp;version=3.3.2\">qr</a></code>."
			}, {
				"name": "...",
				"description": "further arguments passed to or from other methods."
			}]
		}, {}, {
			"name": "step",
			"args": [{
				"name": "object",
				"description": "an object representing a model of an appropriate class (mainly\n    <code>&quot;lm&quot;</code> and <code>&quot;glm&quot;</code>).\n    This is used as the initial model in the stepwise search."
			}, {
				"name": "scope",
				"description": "defines the range of models examined in the stepwise search.\n    This should be either a single formula, or a list containing\n    components <code>upper</code> and <code>lower</code>, both formulae.  See the\n    details for how to specify the formulae and how they are used."
			}, {
				"name": "scale",
				"description": "used in the definition of the AIC statistic for selecting the models,\n    currently only for <code><a rd-options=\"\" href=\"/link/lm?package=stats&amp;version=3.3.2\">lm</a></code>, <code><a rd-options=\"\" href=\"/link/aov?package=stats&amp;version=3.3.2\">aov</a></code> and\n    <code><a rd-options=\"\" href=\"/link/glm?package=stats&amp;version=3.3.2\">glm</a></code> models.  The default value, <code>0</code>, indicates\n    the scale should be estimated: see <code><a rd-options=\"\" href=\"/link/extractAIC?package=stats&amp;version=3.3.2\">extractAIC</a></code>."
			}, {
				"name": "direction",
				"description": "the mode of stepwise search, can be one of <code>&quot;both&quot;</code>,\n    <code>&quot;backward&quot;</code>, or <code>&quot;forward&quot;</code>, with a default of <code>&quot;both&quot;</code>.\n    If the <code>scope</code> argument is missing the default for\n    <code>direction</code> is <code>&quot;backward&quot;</code>.  Values can be abbreviated."
			}, {
				"name": "trace",
				"description": "if positive, information is printed during the running of <code>step</code>.\n    Larger values may give more detailed information."
			}, {
				"name": "keep",
				"description": "a filter function whose input is a fitted model object and the\n    associated <code>AIC</code> statistic, and whose output is arbitrary.\n    Typically <code>keep</code> will select a subset of the components of\n    the object and return them. The default is not to keep anything."
			}, {
				"name": "steps",
				"description": "the maximum number of steps to be considered.  The default is 1000\n    (essentially as many as required).  It is typically used to stop the\n    process early."
			}, {
				"name": "k",
				"description": "the multiple of the number of degrees of freedom used for the penalty.\n    Only <code>k = 2</code> gives the genuine AIC: <code>k = log(n)</code> is sometimes\n    referred to as BIC or SBC."
			}, {
				"name": "...",
				"description": "any additional arguments to <code><a rd-options=\"\" href=\"/link/extractAIC?package=stats&amp;version=3.3.2\">extractAIC</a></code>."
			}]
		}, {}, {
			"name": "line",
			"args": [{
				"name": "x, y",
				"description": "the arguments can be any way of specifying x-y pairs.  See\n    <code><a rd-options=\"\" href=\"/link/xy.coords?package=stats&amp;version=3.3.2\">xy.coords</a></code>."
			}]
		}, {}, {}, {
			"name": "lowess",
			"args": [{
				"name": "x, y",
				"description": "vectors giving the coordinates of the points in the scatter plot.\n    Alternatively a single plotting structure can be specified -- see\n    <code><a rd-options=\"\" href=\"/link/xy.coords?package=stats&amp;version=3.3.2\">xy.coords</a></code>."
			}, {
				"name": "f",
				"description": "the smoother span. This gives the proportion of points in\n    the plot which influence the smooth at each value.\n    Larger values give more smoothness."
			}, {
				"name": "iter",
				"description": "the number of &#x2018;robustifying&#x2019; iterations which should be\n    performed.\n    Using smaller values of <code>iter</code> will make <code>lowess</code> run faster."
			}, {
				"name": "delta",
				"description": "See &#x2018;Details&#x2019;.  Defaults to 1/100th of the range\n    of <code>x</code>."
			}]
		}, {}, {}, {
			"name": "mauchly.test",
			"args": [{
				"name": "object",
				"description": "object of class <code>SSD</code> or <code>mlm</code>."
			}, {
				"name": "Sigma",
				"description": "matrix to be proportional to."
			}, {
				"name": "T",
				"description": "transformation matrix. By default computed from <code>M</code> and\n    <code>X</code>."
			}, {
				"name": "M",
				"description": "formula or matrix describing the outer projection (see below)."
			}, {
				"name": "X",
				"description": "formula or matrix describing the inner projection (see below)."
			}, {
				"name": "idata",
				"description": "data frame describing intra-block design."
			}, {
				"name": "...",
				"description": "arguments to be passed to or from other methods."
			}]
		}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
			"name": "spec.pgram",
			"args": [{
				"name": "x",
				"description": "univariate or multivariate time series."
			}, {
				"name": "spans",
				"description": "vector of odd integers giving the widths of modified\n    Daniell smoothers to be used to smooth the periodogram."
			}, {
				"name": "kernel",
				"description": "alternatively, a kernel smoother of class\n    <code>&quot;tskernel&quot;</code>."
			}, {
				"name": "taper",
				"description": "specifies the proportion of data to taper.  A split\n    cosine bell taper is applied to this proportion of the data at the\n    beginning and end of the series."
			}, {
				"name": "pad",
				"description": "proportion of data to pad. Zeros are added to the end of\n    the series to increase its length by the proportion <code>pad</code>."
			}, {
				"name": "fast",
				"description": "logical; if <code>TRUE</code>, pad the series to a highly composite\n    length."
			}, {
				"name": "demean",
				"description": "logical. If <code>TRUE</code>, subtract the mean of the\n    series."
			}, {
				"name": "detrend",
				"description": "logical. If <code>TRUE</code>, remove a linear trend from\n    the series. This will also remove the mean."
			}, {
				"name": "plot",
				"description": "plot the periodogram?"
			}, {
				"name": "na.action",
				"description": "<code>NA</code> action function."
			}, {
				"name": "...",
				"description": "graphical arguments passed to <code>plot.spec</code>."
			}]
		}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
			"name": "r2dtable",
			"args": [{
				"name": "n",
				"description": "a non-negative numeric giving the number of tables to be\n    drawn."
			}, {
				"name": "r",
				"description": "a non-negative vector of length at least 2 giving the row\n    totals, to be coerced to <code>integer</code>.  Must sum to the same as\n    <code>c</code>."
			}, {
				"name": "c",
				"description": "a non-negative vector of length at least 2 giving the column\n    totals, to be coerced to <code>integer</code>."
			}]
		}, {
			"name": "profile.nls",
			"args": [{
				"name": "fitted",
				"description": "the original fitted model object."
			}, {
				"name": "which",
				"description": "the original model parameters which should be profiled.\n    This can be a numeric or character vector.\n    By default, all non-linear parameters are profiled."
			}, {
				"name": "maxpts",
				"description": "maximum number of points to be used for profiling each\n    parameter."
			}, {
				"name": "alphamax",
				"description": "highest significance level allowed\n    for the profile t-statistics."
			}, {
				"name": "delta.t",
				"description": "suggested change on the scale of the profile\n    t-statistics.  Default value chosen to allow profiling at about\n    10 parameter values."
			}, {
				"name": "...",
				"description": "further arguments passed to or from other methods."
			}]
		}, {
			"name": "sortedXyData",
			"args": [{
				"name": "x",
				"description": "a numeric vector or an expression that will evaluate in\n   <code>data</code> to a numeric vector"
			}, {
				"name": "y",
				"description": "a numeric vector or an expression that will evaluate in\n   <code>data</code> to a numeric vector"
			}, {
				"name": "data",
				"description": "an optional data frame in which to evaluate expressions\n   for <code>x</code> and <code>y</code>, if they are given as expressions"
			}]
		}, {
			"name": "read.ftable",
			"args": [{
				"name": "file",
				"description": "either a character string naming a file or a connection\n    which the data are to be read from or written to.  <code>&quot;&quot;</code>\n    indicates input from the console for reading and output to the\n    console for writing."
			}, {
				"name": "sep",
				"description": "the field separator string.  Values on each line of the file\n    are separated by this string."
			}, {
				"name": "quote",
				"description": "a character string giving the set of quoting characters\n    for <code>read.ftable</code>; to disable quoting altogether, use\n    <code>quote=&quot;&quot;</code>.  For <code>write.table</code>, a logical indicating\n    whether strings in the data will be surrounded by double quotes."
			}, {
				"name": "row.var.names",
				"description": "a character vector with the names of the row\n    variables, in case these cannot be determined automatically."
			}, {
				"name": "col.vars",
				"description": "a list giving the names and levels of the column\n    variables, in case these cannot be determined automatically."
			}, {
				"name": "skip",
				"description": "the number of lines of the data file to skip before\n    beginning to read data."
			}, {
				"name": "x",
				"description": "an object of class <code>&quot;ftable&quot;</code>."
			}, {
				"name": "append",
				"description": "logical.  If <code>TRUE</code> and <code>file</code> is the name of\n    a file (and not a connection or <code>&quot;|cmd&quot;</code>), the output from\n    <code>write.ftable</code> is appended to the file.  If <code>FALSE</code>,\n    the contents of <code>file</code> will be overwritten."
			}, {
				"name": "digits",
				"description": "an integer giving the number of significant digits to\n    use for (the cell entries of) <code>x</code>."
			}, {
				"name": "method",
				"description": "string specifying how the <code>&quot;ftable&quot;</code> object is formatted\n    (and printed if used as in <code>write.ftable()</code> or the <code>print</code>\n    method).  Can be abbreviated.  Available methods are (see the examples):\n    <dl>\n            \n            \n            \n            \n    </dl>"
			}, {
				"name": "lsep",
				"description": "only for <code>method = &quot;compact&quot;</code>, the separation string\n    for row and column labels."
			}, {
				"name": "...",
				"description": "further arguments to be passed to or\n    from methods; for <code>write()</code> and <code>print()</code>, notably\n    arguments such as <code>method</code>, passed to <code>format()</code>."
			}]
		}, {
			"name": "spec.ar",
			"args": [{
				"name": "x",
				"description": "A univariate (not yet:or multivariate) time series or the\n    result of a fit by <code><a rd-options=\"\" href=\"/link/ar?package=stats&amp;version=3.3.2\">ar</a></code>."
			}, {
				"name": "n.freq",
				"description": "The number of points at which to plot."
			}, {
				"name": "order",
				"description": "The order of the AR model to be fitted.  If omitted,\n    the order is chosen by AIC."
			}, {
				"name": "plot",
				"description": "Plot the periodogram?"
			}, {
				"name": "na.action",
				"description": "<code>NA</code> action function."
			}, {
				"name": "method",
				"description": "<code>method</code> for <code><a rd-options=\"\" href=\"/link/ar?package=stats&amp;version=3.3.2\">ar</a></code> fit."
			}, {
				"name": "...",
				"description": "Graphical arguments passed to <code><a rd-options=\"\" href=\"/link/plot.spec?package=stats&amp;version=3.3.2\">plot.spec</a></code>."
			}]
		}, {}, {
			"name": "uniroot",
			"args": [{
				"name": "f",
				"description": "the function for which the root is sought."
			}, {
				"name": "interval",
				"description": "a vector containing the end-points of the interval\n    to be searched for the root."
			}, {
				"name": "...",
				"description": "additional named or unnamed arguments to be passed\n    to <code>f</code>"
			}, {
				"name": "lower, upper",
				"description": "the lower and upper end points of the interval to\n    be searched."
			}, {
				"name": "f.lower, f.upper",
				"description": "the same as <code>f(upper)</code> and\n    <code>f(lower)</code>, respectively.  Passing these values from the caller\n    where they are often known is more economical as soon as <code>f()</code>\n    contains non-trivial computations."
			}, {
				"name": "extendInt",
				"description": "character string specifying if the interval\n    <code>c(lower,upper)</code> should be extended or directly produce an error\n    when <code>f()</code> does not have differing signs at the endpoints.  The\n    default, <code>&quot;no&quot;</code>, keeps the search interval and hence produces\n    an error.  Can be abbreviated."
			}, {
				"name": "check.conv",
				"description": "logical indicating whether a convergence warning of the\n    underlying <code><a rd-options=\"\" href=\"/link/uniroot?package=stats&amp;version=3.3.2\">uniroot</a></code> should be caught as an error and if\n    non-convergence in <code>maxiter</code> iterations should be an error\n    instead of a warning."
			}, {
				"name": "tol",
				"description": "the desired accuracy (convergence tolerance)."
			}, {
				"name": "maxiter",
				"description": "the maximum number of iterations."
			}, {
				"name": "trace",
				"description": "integer number; if positive, tracing information is\n    produced.  Higher values giving more details."
			}]
		}, {
			"name": "Weibull",
			"args": [{
				"name": "x, q",
				"description": "vector of quantiles."
			}, {
				"name": "p",
				"description": "vector of probabilities."
			}, {
				"name": "n",
				"description": "number of observations. If <code>length(n) &gt; 1</code>, the length\n    is taken to be the number required."
			}, {
				"name": "shape, scale",
				"description": "shape and scale parameters, the latter defaulting to 1."
			}, {
				"name": "log, log.p",
				"description": "logical; if TRUE, probabilities p are given as log(p)."
			}, {
				"name": "lower.tail",
				"description": "logical; if TRUE (default), probabilities are\n    $P[X \\le x]$, otherwise, $P[X &gt; x]$."
			}]
		}, {
			"name": "vcov",
			"args": [{
				"name": "object",
				"description": "a fitted model object, typically.  Sometimes also a\n    <code><a rd-options=\"\" href=\"/link/summary?package=stats&amp;version=3.3.2\">summary</a>()</code> object of such a fitted model."
			}, {
				"name": "...",
				"description": "additional arguments for method functions.  For the\n    <code><a rd-options=\"\" href=\"/link/glm?package=stats&amp;version=3.3.2\">glm</a></code> method this can be used to pass a\n    <code>dispersion</code> parameter."
			}]
		}, {}, {
			"name": "stats-package",
			"args": []
		}, {
			"name": "summary.aov",
			"args": [{
				"name": "object",
				"description": "An object of class <code>&quot;aov&quot;</code> or <code>&quot;aovlist&quot;</code>."
			}, {
				"name": "intercept",
				"description": "logical: should intercept terms be included?"
			}, {
				"name": "split",
				"description": "an optional named list, with names corresponding to terms\n    in the model.  Each component is itself a list with integer\n    components giving contrasts whose contributions are to be summed."
			}, {
				"name": "expand.split",
				"description": "logical: should the split apply also to\n    interactions involving the factor?"
			}, {
				"name": "keep.zero.df",
				"description": "logical: should terms with no degrees of freedom\n    be included?"
			}, {
				"name": "...",
				"description": "Arguments to be passed to or from other methods,\n    for <code>summary.aovlist</code> including those for <code>summary.aov</code>."
			}]
		}, {}, {
			"name": "ts.union",
			"args": [{
				"name": "...",
				"description": "two or more univariate or multivariate time series, or\n    objects which can coerced to time series."
			}, {
				"name": "dframe",
				"description": "logical; if <code>TRUE</code> return the result as a data\n    frame."
			}]
		}, {}, {}, {}, {
			"name": "tsSmooth",
			"args": [{
				"name": "object",
				"description": "a time-series fit.  Currently only class\n    <code>&quot;<a rd-options=\"\" href=\"/link/StructTS?package=stats&amp;version=3.3.2\">StructTS</a>&quot;</code> is supported"
			}, {
				"name": "...",
				"description": "possible arguments for future methods."
			}]
		}, {}, {
			"name": "varimax",
			"args": [{
				"name": "x",
				"description": "A loadings matrix, with $p$ rows and $k &lt; p$ columns"
			}, {
				"name": "m",
				"description": "The power used the target for <code>promax</code>.  Values of 2 to\n    4 are recommended."
			}, {
				"name": "normalize",
				"description": "logical. Should Kaiser normalization be performed?\n    If so the rows of <code>x</code> are re-scaled to unit length before\n    rotation, and scaled back afterwards."
			}, {
				"name": "eps",
				"description": "The tolerance for stopping: the relative change in the sum\n    of singular values."
			}]
		}, {
			"name": "var.test",
			"args": [{
				"name": "x, y",
				"description": "numeric vectors of data values, or fitted linear model\n    objects (inheriting from class <code>&quot;lm&quot;</code>)."
			}, {
				"name": "ratio",
				"description": "the hypothesized ratio of the population variances of\n    <code>x</code> and <code>y</code>."
			}, {
				"name": "alternative",
				"description": "a character string specifying the alternative\n    hypothesis, must be one of <code>&quot;two.sided&quot;</code> (default),\n    <code>&quot;greater&quot;</code> or <code>&quot;less&quot;</code>.  You can specify just the initial\n    letter."
			}, {
				"name": "conf.level",
				"description": "confidence level for the returned confidence\n    interval."
			}, {
				"name": "formula",
				"description": "a formula of the form <code>lhs ~ rhs</code> where <code>lhs</code>\n    is a numeric variable giving the data values and <code>rhs</code> a factor\n    with two levels giving the corresponding groups."
			}, {
				"name": "data",
				"description": "an optional matrix or data frame (or similar: see\n    <code><a rd-options=\"\" href=\"/link/model.frame?package=stats&amp;version=3.3.2\">model.frame</a></code>) containing the variables in the\n    formula <code>formula</code>.  By default the variables are taken from\n    <code>environment(formula)</code>."
			}, {
				"name": "subset",
				"description": "an optional vector specifying a subset of observations\n    to be used."
			}, {
				"name": "na.action",
				"description": "a function which indicates what should happen when\n    the data contain <code>NA</code>s.  Defaults to\n    <code>getOption(&quot;na.action&quot;)</code>."
			}, {
				"name": "...",
				"description": "further arguments to be passed to or from methods."
			}]
		}]
	}
}, {
	"stats4": {
		"functions": [{
			"name": "profile.mle-class",
			"args": []
		}, {
			"name": "update-methods",
			"args": [{
				"name": "object",
				"description": "An existing fit."
			}, {
				"name": "...",
				"description": "Additional arguments to the call, or arguments with\n   changed values. Use <code>name = NULL</code> to remove the argument <code>name</code>."
			}, {
				"name": "evaluate",
				"description": "If true evaluate the new call else return the call."
			}]
		}, {
			"name": "summary-methods",
			"args": []
		}, {
			"name": "vcov-methods",
			"args": []
		}, {
			"name": "summary.mle-class",
			"args": []
		}, {
			"name": "plot-methods",
			"args": [{
				"name": "x",
				"description": "an object of class <code>&quot;profile.mle&quot;</code>"
			}, {
				"name": "levels",
				"description": "levels, on the scale of the absolute value of a t\n     statistic, at which to interpolate intervals.  Usually <code>conf</code>\n     is used instead of giving <code>levels</code> explicitly."
			}, {
				"name": "conf",
				"description": "a numeric vector of confidence levels for profile-based\n     confidence intervals on the parameters."
			}, {
				"name": "nseg",
				"description": "an integer value giving the number of segments to use in\n     the spline interpolation of the profile t curves."
			}, {
				"name": "absVal",
				"description": "a logical value indicating whether or not the plots\n     should be on the scale of the absolute value of the profile t.\n     Defaults to <code>TRUE</code>."
			}, {
				"name": "...",
				"description": "other arguments to the <code>plot</code> function can be passed here."
			}]
		}, {
			"name": "show-methods",
			"args": []
		}, {
			"name": "profile-methods",
			"args": [{
				"name": "fitted",
				"description": "Object to be profiled"
			}, {
				"name": "which",
				"description": "Optionally select subset of parameters to profile."
			}, {
				"name": "maxsteps",
				"description": "Maximum number of steps to bracket <code>zmax</code>."
			}, {
				"name": "alpha",
				"description": "Significance level corresponding to <code>zmax</code>, based on\n    a Scheffe-style multiple testing interval.  Ignored\n    if <code>zmax</code> is specified."
			}, {
				"name": "zmax",
				"description": "Cutoff for the profiled value of the signed root-likelihood."
			}, {
				"name": "del",
				"description": "Initial stepsize on root-likelihood scale."
			}, {
				"name": "trace",
				"description": "Logical. Print intermediate results."
			}, {
				"name": "...",
				"description": "Currently unused."
			}]
		}, {
			"name": "logLik-methods",
			"args": []
		}, {
			"name": "mle-class",
			"args": []
		}, {
			"name": "confint-methods",
			"args": []
		}, {
			"name": "coef-methods",
			"args": []
		}, {
			"name": "stats4-package",
			"args": []
		}, {
			"name": "mle",
			"args": [{
				"name": "minuslogl",
				"description": "Function to calculate negative log-likelihood."
			}, {
				"name": "start",
				"description": "Named list. Initial values for optimizer."
			}, {
				"name": "method",
				"description": "Optimization method to use. See <code><a rd-options=\"\" href=\"/link/optim?package=stats4&amp;version=3.3.2\">optim</a></code>."
			}, {
				"name": "fixed",
				"description": "Named list.  Parameter values to keep fixed during\n    optimization."
			}, {
				"name": "nobs",
				"description": "optional integer: the number of observations, to be used for\n    e.g.\\ifelse{latex}{\\out{~}}{ } computing <code><a rd-options=\"\" href=\"/link/BIC?package=stats4&amp;version=3.3.2\">BIC</a></code>."
			}, {
				"name": "...",
				"description": "Further arguments to pass to <code><a rd-options=\"\" href=\"/link/optim?package=stats4&amp;version=3.3.2\">optim</a></code>."
			}]
		}]
	}
}, {
	"tcltk": {
		"functions": [{
			"name": "tkpager",
			"args": [{
				"name": "file",
				"description": "character vector containing the names of the\n          files to be displayed"
			}, {
				"name": "header",
				"description": "headers to use for each file"
			}, {
				"name": "title",
				"description": "common title to use for the window(s). Pasted together\n  with the <code>header</code> to form actual window title."
			}, {
				"name": "delete.file",
				"description": "logical. Should file(s) be deleted after display?"
			}]
		}, {
			"name": "tk_choose.dir",
			"args": [{
				"name": "default",
				"description": "which directory to show initially."
			}, {
				"name": "caption",
				"description": "the caption on the selection dialog."
			}]
		}, {
			"name": "tclServiceMode",
			"args": [{
				"name": "on",
				"description": "(logical) Whether event servicing is turned on."
			}]
		}, {
			"name": "tk_select.list",
			"args": [{
				"name": "choices",
				"description": "a character vector of items."
			}, {
				"name": "preselect",
				"description": "a character vector, or <code>NULL</code>.  If non-null and\n    if the string(s) appear in the list, the item(s) are selected\n    initially."
			}, {
				"name": "multiple",
				"description": "logical: can more than one item be selected?"
			}, {
				"name": "title",
				"description": "optional character string for window title, or\n    <code>NULL</code> for no title."
			}]
		}, {
			"name": "tcltk-defunct",
			"args": [{
				"name": "...",
				"description": "Handled via <code>.Tcl.args</code>"
			}]
		}, {
			"name": "tk_choose.files",
			"args": [{
				"name": "default",
				"description": "which filename to show initially."
			}, {
				"name": "caption",
				"description": "the caption on the file selection dialog."
			}, {
				"name": "multi",
				"description": "whether to allow multiple files to be selected."
			}, {
				"name": "filters",
				"description": "two-column character matrix of filename filters."
			}, {
				"name": "index",
				"description": "unused."
			}]
		}, {
			"name": "tk_messageBox",
			"args": [{
				"name": "type",
				"description": "character. The type of dialog box. It will have the\n    buttons implied by its name.  Can be abbreviated."
			}, {
				"name": "message",
				"description": "character. The information field of the dialog box."
			}, {
				"name": "caption",
				"description": "the caption on the widget displayed."
			}, {
				"name": "default",
				"description": "character. The name of the button to be used as the\n    default."
			}, {
				"name": "...",
				"description": "additional named arguments to be passed to the Tk\n    function of this name.  An example is <code>icon = &quot;warning&quot;</code>."
			}]
		}, {
			"name": "tcltk-package",
			"args": []
		}, {
			"name": "TkCommands",
			"args": [{
				"name": "x",
				"description": "A window object"
			}, {
				"name": "value",
				"description": "For <code>tktitle</code> assignments, a character string."
			}, {
				"name": "...",
				"description": "Handled via <code>.Tcl.args</code>"
			}]
		}, {
			"name": "TclInterface",
			"args": [{
				"name": "objv",
				"description": "a named vector of Tcl objects"
			}, {
				"name": "win",
				"description": "a window structure"
			}, {
				"name": "x",
				"description": "an object"
			}, {
				"name": "i",
				"description": "character or (unquoted) name"
			}, {
				"name": "drop",
				"description": "logical. Indicates whether a single-element vector should\n    be made into a simple Tcl object or a list of length one"
			}, {
				"name": "value",
				"description": "For <code>tclvalue</code> assignments, a character string. For\n    <code>tclObj</code> assignments, an object of class <code>tclObj</code>"
			}, {
				"name": "ID",
				"description": "a window ID"
			}, {
				"name": "parent",
				"description": "a window which becomes the parent of the resulting window"
			}, {
				"name": "path",
				"description": "path to a directory containing Tcl packages"
			}, {
				"name": "package",
				"description": "a Tcl package name"
			}, {
				"name": "warn",
				"description": "logical. Warn if not found?"
			}, {
				"name": "...",
				"description": "Additional arguments. See below."
			}, {
				"name": "init",
				"description": "initialization value"
			}]
		}, {
			"name": "tkProgressBar",
			"args": [{
				"name": "title, label",
				"description": "character strings, giving the window title and the\n    label on the dialog box respectively."
			}, {
				"name": "min, max",
				"description": "(finite) numeric values for the extremes of the\n    progress bar."
			}, {
				"name": "initial, value",
				"description": "initial or new value for the progress bar."
			}, {
				"name": "width",
				"description": "the width of the progress bar in pixels: the dialog box\n    will be 40 pixels wider (plus frame)."
			}, {
				"name": "pb, con",
				"description": "an object of class <code>&quot;tkProgressBar&quot;</code>."
			}, {
				"name": "...",
				"description": "for consistency with the generic."
			}]
		}, {
			"name": "tkStartGUI",
			"args": []
		}, {
			"name": "TkWidgets",
			"args": [{
				"name": "parent",
				"description": "Parent of widget window."
			}, {
				"name": "type",
				"description": "string describing the type of widget desired."
			}, {
				"name": "...",
				"description": "handled via <code><a rd-options=\"\" href=\"/link/.Tcl.args?package=tcltk&amp;version=3.3.2\">.Tcl.args</a></code>."
			}]
		}, {
			"name": "TkWidgetcmds",
			"args": [{
				"name": "widget",
				"description": "The widget this applies to"
			}, {
				"name": "...",
				"description": "Handled via <code>.Tcl.args</code>"
			}]
		}]
	}
}, {
	"tools": {
		"functions": [{
			"name": "assertCondition",
			"args": [{
				"name": "expr",
				"description": "an unevaluated <span style=\"R\">R</span> expression which will be evaluated via\n    <code><a rd-options=\"\" href=\"/link/tryCatch?package=tools&amp;version=3.3.2\">tryCatch</a>(expr, ..)</code>."
			}, {
				"name": "...",
				"description": "<code><a rd-options=\"\" href=\"/link/character?package=tools&amp;version=3.3.2\">character</a></code> strings corresponding to the\n    classes of the conditions that would satisfy the assertion; e.g., <code>&quot;error&quot;</code> or\n    <code>&quot;warning&quot;</code>. If none are specified, any condition will\n    satisfy the assertion.  See the details section."
			}, {
				"name": ".exprString",
				"description": "The string to be printed corresponding to\n    <code>expr</code>. By default, the actual <code>expr</code> will be\n    deparsed.  Will be omitted if the function is supplied with the\n    actual expression to be tested.  If <code>assertCondition()</code> is\n    called from another function, with the actual expression passed as\n    an argument to that function, supply the deparsed version."
			}, {
				"name": "verbose",
				"description": "If <code>TRUE</code>, a message is printed when the\n    condition is satisfied."
			}]
		}, {
			"name": "buildVignettes",
			"args": [{
				"name": "package",
				"description": "a character string naming an installed package.  If\n    given, vignette source files are by default looked for in\n    subdirectory &#x2018;<span class=\"file\">doc</span>&#x2019;."
			}, {
				"name": "dir",
				"description": "a character string specifying the path to a package&apos;s root\n    source directory.  This subdirectory &#x2018;<span class=\"file\">vignettes</span>&#x2019; (or if it\n    does not exist &#x2018;<span class=\"file\">inst/doc</span>&#x2019;) is searched for vignette source\n    files."
			}, {
				"name": "lib.loc",
				"description": "a character vector of directory names of <span style=\"R\">R</span> libraries,\n    or <code>NULL</code>.  The default value of <code>NULL</code> corresponds to all\n    libraries currently known.  The specified library trees are used to\n    search for <code>package</code>."
			}, {
				"name": "quiet",
				"description": "logical. Weave and run\n    <code><a rd-options=\"\" href=\"/link/texi2pdf?package=tools&amp;version=3.3.2\">texi2pdf</a></code> in quiet mode."
			}, {
				"name": "clean",
				"description": "Remove all files generated by the build, even if there\n    were copies there before."
			}, {
				"name": "tangle",
				"description": "logical.  Do tangling as well as weaving."
			}, {
				"name": "subdirs",
				"description": "a character vector of subdirectories of <code>dir</code> in which\n    to look for vignettes. The first which exists is used.  Defaults to\n    <code>&quot;doc&quot;</code> if <code>package</code> is supplied, otherwise <code>&quot;vignettes&quot;</code>."
			}, {
				"name": "output",
				"description": "logical indicating if the output filenames for each\n    vignette should be returned (in component <code>outputs</code>)."
			}, {
				"name": "source",
				"description": "logical indicating if the <em>tangled</em> output\n    filenames for each vignette should be returned (in component <code>sources</code>)."
			}, {
				"name": "check",
				"description": "logical.  If <code>TRUE</code>, check whether all files that\n    have vignette-like filenames have an identifiable vignette engine.\n    This may be a false positive if a file is not a vignette but has a \n    filename matching a pattern defined by one of the vignette engines."
			}]
		}, {
			"name": "checkMD5sums",
			"args": [{
				"name": "package",
				"description": "the name of an installed package"
			}, {
				"name": "dir",
				"description": "the path to the top-level directory of an installed\n    package."
			}]
		}, {
			"name": "checkPoFiles",
			"args": [{
				"name": "f",
				"description": "a character string giving a single filepath."
			}, {
				"name": "strictPlural",
				"description": "whether to compare formats of singular and plural\n    forms in a strict way."
			}, {
				"name": "language",
				"description": "a character string giving a language code."
			}, {
				"name": "dir",
				"description": "a path to a directory in which to check files."
			}]
		}, {
			"name": "buildVignette",
			"args": [{
				"name": "file",
				"description": "character; the vignette source file"
			}, {
				"name": "dir",
				"description": "character; the working directory in which the intermediate and \n                 output files will be produced"
			}, {
				"name": "weave",
				"description": "logical; should weave be run?"
			}, {
				"name": "latex",
				"description": "logical; <a rd-options=\"\" href=\"/link/texi2pdf?package=tools&amp;version=3.3.2\">texi2pdf</a> be run if weaving produces a &#x2018;<span class=\"file\">.tex</span>&#x2019; file?"
			}, {
				"name": "tangle",
				"description": "logical; should tangle be run?"
			}, {
				"name": "quiet",
				"description": "logical; run in quiet mode?"
			}, {
				"name": "clean",
				"description": "logical; whether to remove some newly created, often\n    intermediate, files.  See details below."
			}, {
				"name": "keep",
				"description": "a list of file names to keep in any case when cleaning.  Note\n    that &#x201C;target&#x201D; files are kept anyway."
			}, {
				"name": "engine",
				"description": "<code>NULL</code> or character; name of vignette engine to\n    use.  Overrides any <code>\\VignetteEngine{}</code> markup in the vignette."
			}, {
				"name": "buildPkg",
				"description": "<code>NULL</code> or character; an optional package in which to find\n    the vignette engine."
			}, {
				"name": "encoding",
				"description": "the encoding to assume for the file.  If not specified, it will\n    be inferred from the file contents."
			}, {
				"name": "...",
				"description": "Additional arguments passed to weave and tangle."
			}]
		}, {
			"name": "add_datalist",
			"args": [{
				"name": "pkgpath",
				"description": "The path to a (source) package."
			}, {
				"name": "force",
				"description": "logical: can an existing &#x2018;<span class=\"file\">data/datalist</span>&#x2019; file be\n    over-written?"
			}]
		}, {
			"name": "checkFF",
			"args": [{
				"name": "package",
				"description": "a character string naming an installed package.  If\n    given, the installed R code of the package is checked."
			}, {
				"name": "dir",
				"description": "a character string specifying the path to a package&apos;s root\n    source directory.  This should contain the subdirectory &#x2018;<span class=\"file\">R</span>&#x2019;\n    (for R code).  Only used if <code>package</code> is not given."
			}, {
				"name": "file",
				"description": "the name of a file containing R code to be checked.  Used\n    if neither <code>package</code> nor <code>dir</code> are given."
			}, {
				"name": "lib.loc",
				"description": "a character vector of directory names of <span style=\"R\">R</span> libraries,\n    or <code>NULL</code>.  The default value of <code>NULL</code> corresponds to all\n    libraries currently known.  The specified library trees are used to\n    search for <code>package</code>."
			}, {
				"name": "registration",
				"description": "a logical.  If <code>TRUE</code>, checks\n    the registration information on the call (if available)."
			}, {
				"name": "check_DUP",
				"description": "a logical.  If <code>TRUE</code>, <code>.C</code> and\n    <code>.Fortran</code> calls with <code>DUP = FALSE</code> are reported."
			}, {
				"name": "verbose",
				"description": "a logical.  If <code>TRUE</code>, additional diagnostics are\n    printed (and the result is returned invisibly)."
			}]
		}, {
			"name": "check_packages_in_dir",
			"args": [{
				"name": "dir",
				"description": "a character string giving the path to the directory with\n    the source &#x2018;<span class=\"file\">.tar.gz</span>&#x2019; files to be checked."
			}, {
				"name": "check_args",
				"description": "a character vector with arguments to be passed to\n    <code>R CMD check</code>, or a list of length two of such character\n    vectors to be used for checking packages and reverse dependencies,\n    respectively."
			}, {
				"name": "check_args_db",
				"description": "a named list of character vectors with arguments\n    to be passed to <code>R CMD check</code>, with names the respective\n    package names."
			}, {
				"name": "reverse",
				"description": "a list with names partially matching <code>&quot;repos&quot;</code>,\n    <code>&quot;which&quot;</code>, or <code>&quot;recursive&quot;</code>, giving the repositories to\n    use for locating reverse dependencies (default:\n    <code>getOption(&quot;repos&quot;)</code>), the types of reverse dependencies\n    (default: <code>c(&quot;Depends&quot;, &quot;Imports&quot;, &quot;LinkingTo&quot;)</code>, with\n    shorthands <code>&quot;most&quot;</code> and <code>&quot;all&quot;</code> as for\n    <code><a rd-options=\"\" href=\"/link/package_dependencies?package=tools&amp;version=3.3.2\">package_dependencies</a></code>), and indicating whether to also\n    check reverse dependencies of reverse dependencies and so on\n    (default: <code>FALSE</code>), or <code>NULL</code> (default), in which case no\n    reverse dependencies are checked."
			}, {
				"name": "check_env",
				"description": "a character vector of name=value strings to set\n    environment variables for checking, or a list of length two of such\n    character vectors to be used for checking packages and reverse\n    dependencies, respectively."
			}, {
				"name": "xvfb",
				"description": "a logical indicating whether to perform checking inside a\n    virtual framebuffer X server (Unix only), or a character vector of\n    Xvfb options for doing so."
			}, {
				"name": "Ncpus",
				"description": "the number of parallel processes to use for parallel\n    installation and checking."
			}, {
				"name": "clean",
				"description": "a logical indicating whether to remove the downloaded\n    reverse dependency sources."
			}, {
				"name": "...",
				"description": "currently not used."
			}, {
				"name": "all",
				"description": "a logical indicating whether to also summarize the reverse\n    dependencies checked."
			}, {
				"name": "full",
				"description": "a logical indicating whether to also give details for\n    checks with non-ok results, or summarize check example timings (if\n    available)."
			}, {
				"name": "which",
				"description": "see <code><a rd-options=\"\" href=\"/link/package_dependencies?package=tools&amp;version=3.3.2\">package_dependencies</a></code>."
			}, {
				"name": "old",
				"description": "a character string giving the path to the directory of a\n    previous <code>check_packages_in_dir</code> run."
			}, {
				"name": "outputs",
				"description": "a logical indicating whether to analyze changes in\n    the outputs of the checks performed, or only (default) the status of\n    the checks."
			}, {
				"name": "sources",
				"description": "a logical indicating whether to also investigate the\n    changes in the source files checked (default: <code>FALSE</code>)."
			}]
		}, {
			"name": "charsets",
			"args": []
		}, {
			"name": "bibstyle",
			"args": [{
				"name": "style",
				"description": "A character string naming the style."
			}, {
				"name": "envir",
				"description": "(optional) An environment holding the functions to implement the style."
			}, {
				"name": "...",
				"description": "Named arguments to add to the environment."
			}, {
				"name": ".init",
				"description": "Whether to initialize the environment from the default style <code>&quot;JSS&quot;</code>."
			}, {
				"name": ".default",
				"description": "Whether to set the specified style as the default style."
			}, {
				"name": "all",
				"description": "Whether to return the names of all registered styles."
			}]
		}, {
			"name": "codoc",
			"args": [{
				"name": "package",
				"description": "a character string naming an installed package."
			}, {
				"name": "dir",
				"description": "a character string specifying the path to a package&apos;s root\n    source directory.  This must contain the subdirectories &#x2018;<span class=\"file\">man</span>&#x2019;\n    with <span style=\"R\">R</span> documentation sources (in Rd format) and &#x2018;<span class=\"file\">R</span>&#x2019; with <span style=\"R\">R</span>\n    code.  Only used if <code>package</code> is not given."
			}, {
				"name": "lib.loc",
				"description": "a character vector of directory names of <span style=\"R\">R</span> libraries,\n    or <code>NULL</code>.  The default value of <code>NULL</code> corresponds to all\n    libraries currently known.  The specified library trees are used to\n    search for <code>package</code>."
			}, {
				"name": "use.values",
				"description": "if <code>FALSE</code>, do not use function default values\n    when comparing code and docs.  Otherwise, compare <em>all</em> default\n    values if <code>TRUE</code>, and only the ones documented in the usage\n    otherwise (default)."
			}, {
				"name": "verbose",
				"description": "a logical.  If <code>TRUE</code>, additional diagnostics are\n    printed."
			}]
		}, {
			"name": "compactPDF",
			"args": [{
				"name": "paths",
				"description": "A character vector of paths to PDF files, or a length-one\n    character vector naming a directory, when all &#x2018;<span class=\"file\">.pdf</span>&#x2019; files in\n    that directory will be used."
			}, {
				"name": "qpdf",
				"description": "Character string giving the path to the <code>qpdf</code>\n    command.  If empty, <code>qpdf</code> will not be used."
			}, {
				"name": "gs_cmd",
				"description": "Character string giving the path to the GhostScript\n    executable, if that is to be used.  On Windows this is the path to\n    &#x2018;<span class=\"file\">gswin32c.exe</span>&#x2019; or &#x2018;<span class=\"file\">gswin64c.exe</span>&#x2019;.  If <code>&quot;&quot;</code> (the\n    default), the function will try to find a platform-specific path to\n    GhostScript where required."
			}, {
				"name": "gs_quality",
				"description": "A character string indicating the quality required:\n    the options are <code>&quot;none&quot;</code> (so GhostScript is not used),\n    <code>&quot;printer&quot;</code> (300dpi), <code>&quot;ebook&quot;</code> (150dpi) and\n    <code>&quot;screen&quot;</code> (72dpi).  Can be abbreviated."
			}, {
				"name": "gs_extras",
				"description": "An optional character vector of further options to be\n    passed to GhostScript."
			}, {
				"name": "x",
				"description": "An object of class <code>&quot;compactPDF&quot;</code>."
			}, {
				"name": "ratio, diff",
				"description": "Limits for reporting: files are only reported whose\n    sizes are reduced both by a factor of <code>ratio</code> and by\n    <code>diff</code> bytes."
			}, {
				"name": "...",
				"description": "Further arguments to be passed to or from other methods."
			}]
		}, {
			"name": "checkTnF",
			"args": [{
				"name": "package",
				"description": "a character string naming an installed package.  If\n    given, the installed R code and the examples in the documentation\n    files of the package are checked.  R code installed as an image file\n    cannot be checked."
			}, {
				"name": "dir",
				"description": "a character string specifying the path to a package&apos;s root\n    source directory.  This must contain the subdirectory &#x2018;<span class=\"file\">R</span>&#x2019; (for\n    R code), and should also contain &#x2018;<span class=\"file\">man</span>&#x2019; (for documentation).\n    Only used if <code>package</code> is not given.  If used, the R code files\n    and the examples in the documentation files are checked."
			}, {
				"name": "file",
				"description": "the name of a file containing R code to be checked.  Used\n    if neither <code>package</code> nor <code>dir</code> are given."
			}, {
				"name": "lib.loc",
				"description": "a character vector of directory names of <span style=\"R\">R</span> libraries,\n    or <code>NULL</code>.  The default value of <code>NULL</code> corresponds to all\n    libraries currently known.  The specified library trees are used to\n    search for <code>package</code>."
			}]
		}, {
			"name": "delimMatch",
			"args": [{
				"name": "x",
				"description": "a character vector."
			}, {
				"name": "delim",
				"description": "a character vector of length 2 giving the start and end\n    delimiters.  Future versions might allow for arbitrary regular\n    expressions."
			}, {
				"name": "syntax",
				"description": "currently, always the string <code>&quot;Rd&quot;</code> indicating Rd\n    syntax (i.e., <span class=\"samp\">%</span> starts a comment extending till the end of\n    the line, and <span class=\"samp\">\\</span> escapes).  Future versions might know about\n    other syntax, perhaps via &#x2018;syntax tables&#x2019; allowing to\n    flexibly specify comment, escape, and quote characters."
			}]
		}, {
			"name": "checkRdaFiles",
			"args": [{
				"name": "paths",
				"description": "A character vector of paths to <code>save</code> files.  If\n    this specifies a single directory, it is taken to refer to all\n    &#x2018;<span class=\"file\">.rda</span>&#x2019; and &#x2018;<span class=\"file\">.RData</span>&#x2019; files in that directory."
			}, {
				"name": "compress, compression_level",
				"description": "type and level of compression: see\n    <code><a rd-options=\"\" href=\"/link/save?package=tools&amp;version=3.3.2\">save</a></code>.  Values of <code>compress</code> can be abbreviated."
			}]
		}, {
			"name": "dependsOnPkgs",
			"args": [{
				"name": "pkgs",
				"description": "a character vector of package names."
			}, {
				"name": "dependencies",
				"description": "a character vector listing the types of\n    dependencies, a subset of\n    <code>c(&quot;Depends&quot;, &quot;Imports&quot;, &quot;LinkingTo&quot;, &quot;Suggests&quot;, &quot;Enhances&quot;)</code>.\n    Character string <code>&quot;all&quot;</code> is shorthand for that vector, and\n    <code>&quot;most&quot;</code> currently shorthand for these apart from <code>&quot;Enhances&quot;</code>."
			}, {
				"name": "recursive",
				"description": "logical: should reverse dependencies of reverse\n    dependencies (and so on) be included?"
			}, {
				"name": "lib.loc",
				"description": "a character vector of <span style=\"R\">R</span> library trees, or <code>NULL</code>\n    for all known trees (see <code><a rd-options=\"\" href=\"/link/.libPaths?package=tools&amp;version=3.3.2\">.libPaths</a></code>)."
			}, {
				"name": "installed",
				"description": "a result of calling <code><a rd-options=\"\" href=\"/link/installed.packages?package=tools&amp;version=3.3.2\">installed.packages</a></code>."
			}]
		}, {
			"name": "fileutils",
			"args": [{
				"name": "x",
				"description": "character vector giving file paths."
			}, {
				"name": "compression",
				"description": "logical: should compression extension &#x2018;<span class=\"file\">.gz</span>&#x2019;,\n    &#x2018;<span class=\"file\">.bz2</span>&#x2019; or &#x2018;<span class=\"file\">.xz</span>&#x2019; be removed first?"
			}, {
				"name": "dir",
				"description": "a character string with the path name to a directory."
			}, {
				"name": "exts",
				"description": "a character vector of possible file extensions (excluding\n    the leading dot)."
			}, {
				"name": "all.files",
				"description": "a logical.  If <code>FALSE</code> (default), only visible\n    files are considered; if <code>TRUE</code>, all files are used."
			}, {
				"name": "full.names",
				"description": "a logical indicating whether the full paths of the\n    files found are returned (default), or just the file names."
			}, {
				"name": "type",
				"description": "a character string giving the &#x2018;type&#x2019; of the files\n    to be listed, as characterized by their extensions.  Currently,\n    possible values are <code>&quot;code&quot;</code> (R code), <code>&quot;data&quot;</code> (data\n    sets), <code>&quot;demo&quot;</code> (demos), <code>&quot;docs&quot;</code> (R documentation), and\n    <code>&quot;vignette&quot;</code> (vignettes)."
			}, {
				"name": "OS_subdirs",
				"description": "a character vector with the names of OS-specific\n    subdirectories to possibly include in the listing of R code and\n    documentation files.  By default, the value of the environment\n    variable <span class=\"env\">R_OSTYPE</span>, or if this is empty, the value of\n    <code><a rd-options=\"\" href=\"/link/.Platform?package=tools&amp;version=3.3.2\">.Platform</a>$OS.type</code>, is used."
			}]
		}, {
			"name": "find_gs_cmd",
			"args": [{
				"name": "gs_cmd",
				"description": "The name, full or partial path of a GhostScript executable."
			}]
		}, {
			"name": "checkVignettes",
			"args": [{
				"name": "package",
				"description": "a character string naming an installed package.  If\n    given, Sweave files are searched in subdirectory &#x2018;<span class=\"file\">doc</span>&#x2019;."
			}, {
				"name": "dir",
				"description": "a character string specifying the path to a package&apos;s root\n    source directory.  This subdirectory &#x2018;<span class=\"file\">inst/doc</span>&#x2019; is searched for\n    Sweave files."
			}, {
				"name": "lib.loc",
				"description": "a character vector of directory names of <span style=\"R\">R</span> libraries,\n    or <code>NULL</code>.  The default value of <code>NULL</code> corresponds to all\n    libraries currently known.  The specified library trees are used to\n    search for <code>package</code>."
			}, {
				"name": "tangle",
				"description": "Perform a tangle and <code><a rd-options=\"\" href=\"/link/source?package=tools&amp;version=3.3.2\">source</a></code> the extracted code?"
			}, {
				"name": "weave",
				"description": "Perform a weave?"
			}, {
				"name": "latex",
				"description": "logical: if <code>weave</code> and <code>latex</code>\n    are <code>TRUE</code> and there is no &#x2018;<span class=\"file\">Makefile</span>&#x2019; in the vignettes\n    directory, run the weaved files through <code>pdflatex</code>."
			}, {
				"name": "workdir",
				"description": "Directory used as working directory while checking the\n    vignettes. If <code>&quot;tmp&quot;</code> then a temporary directory is created,\n    this is the default.  If <code>&quot;src&quot;</code> then the directory containing\n    the vignettes itself is used, if <code>&quot;cur&quot;</code> then the current\n    working directory of <span style=\"R\">R</span> is used."
			}, {
				"name": "keepfiles",
				"description": "Delete files in the temporary directory?  This option is\n    ignored when <code>workdir != &quot;tmp&quot;</code>."
			}]
		}, {
			"name": "encoded_text_to_latex",
			"args": [{
				"name": "x",
				"description": "a character vector."
			}, {
				"name": "encoding",
				"description": "the encoding to be assumed.  <code>&quot;latin9&quot;</code> is\n    officially ISO-8859-15 or Latin-9, but known as latin9 to LaTeX&apos;s\n    <code>inputenc</code> package."
			}]
		}, {
			"name": "getDepList",
			"args": [{
				"name": "depMtrx",
				"description": "a dependency matrix as from <code><a rd-options=\"\" href=\"/link/package.dependencies?package=tools&amp;version=3.3.2\">package.dependencies</a>()</code>."
			}, {
				"name": "pkg",
				"description": "the name of the package"
			}, {
				"name": "instPkgs",
				"description": "a matrix specifying all packages installed on the\n    local system, as from <code>installed.packages</code>"
			}, {
				"name": "recursive",
				"description": "whether or not to include indirect dependencies."
			}, {
				"name": "local",
				"description": "whether or not to search only locally"
			}, {
				"name": "reduce",
				"description": "whether or not to collapse all sets of dependencies to a\n    minimal value"
			}, {
				"name": "lib.loc",
				"description": "what libraries to use when looking for installed\n    packages.  <code>NULL</code> indicates all library directories in the\n    current <code>.libPaths()</code>.\n    Note that <code>lib.loc</code> is not used in <code>getDepList()</code> and\n    deprecated there."
			}]
		}, {
			"name": "installFoundDepends",
			"args": [{
				"name": "depPkgList",
				"description": "A <code>Found</code> element from a <code>pkgDependsList</code> object"
			}, {
				"name": "...",
				"description": "Arguments to pass on to <code><a rd-options=\"\" href=\"/link/install.packages?package=tools&amp;version=3.3.2\">install.packages</a></code>"
			}]
		}, {
			"name": "HTMLheader",
			"args": [{
				"name": "title",
				"description": "The title to display and use in the HTML headers.  Should have had any\nHTML escaping already done."
			}, {
				"name": "logo",
				"description": "Whether to display the <span style=\"R\">R</span> logo after the title."
			}, {
				"name": "up",
				"description": "Which page (if any) to link to on the &#x201C;up&#x201D; button."
			}, {
				"name": "top",
				"description": "Which page (if any) to link to on the &#x201C;top&#x201D; button."
			}, {
				"name": "Rhome",
				"description": "A <b>relative</b> path to the R home directory.  See the &#x2018;Details&#x2019;."
			}, {
				"name": "css",
				"description": "The relative URL for the Cascading Style Sheet."
			}, {
				"name": "headerTitle",
				"description": "The title used in the headers."
			}, {
				"name": "outputEncoding",
				"description": "The declared encoding for the whole page."
			}]
		}, {
			"name": "getVignetteInfo",
			"args": [{
				"name": "package",
				"description": "Which package to look in, or <code>NULL</code> for all packages."
			}, {
				"name": "lib.loc",
				"description": "Which library to look in."
			}, {
				"name": "all",
				"description": "Whether to search all installed packages, or just attached packages."
			}]
		}, {
			"name": "makevars",
			"args": []
		}, {
			"name": "md5sum",
			"args": [{
				"name": "files",
				"description": "character. The paths of file(s) whose contents are to be hashed."
			}]
		}, {
			"name": "HTMLlinks",
			"args": [{
				"name": "pkgDir",
				"description": "the top-level directory of an installed package.  The\n    default indicates no package."
			}, {
				"name": "lib.loc",
				"description": "character vector describing the location of <span style=\"R\">R</span> library\n    trees to scan: the default indicates <code><a rd-options=\"\" href=\"/link/.libPaths?package=tools&amp;version=3.3.2\">.libPaths</a>()</code>."
			}, {
				"name": "level",
				"description": "Which level(s) to include."
			}]
		}, {
			"name": "makeLazyLoading",
			"args": [{
				"name": "package",
				"description": "package name string"
			}, {
				"name": "lib.loc",
				"description": "library trees, as in <code>library</code>"
			}, {
				"name": "keep.source",
				"description": "logical; should sources be kept when saving from source"
			}, {
				"name": "compress",
				"description": "logical; whether to compress entries on the database."
			}]
		}, {
			"name": "make_translations_pkg",
			"args": [{
				"name": "srcdir",
				"description": "The <span style=\"R\">R</span> source directory."
			}, {
				"name": "outDir",
				"description": "The directory into which to place the prepared package."
			}, {
				"name": "append",
				"description": "The suffix for the package version number,\n    e.g.\\ifelse{latex}{\\out{~}}{ } <code>3.0.0-1</code> will be the default in <span style=\"R\">R</span> 3.0.0."
			}]
		}, {
			"name": "loadRdMacros",
			"args": [{
				"name": "file",
				"description": "A file in Rd format containing macro definitions."
			}, {
				"name": "macros",
				"description": "<code>TRUE</code> or a previous set of macro definitions, in the format\n    expected by the <code><a rd-options=\"\" href=\"/link/parse_Rd?package=tools&amp;version=3.3.2\">parse_Rd</a></code> <code>macros</code> argument."
			}, {
				"name": "pkgdir",
				"description": "The base directory of a source package or an installed package."
			}]
		}, {
			"name": "Rcmd",
			"args": [{
				"name": "args",
				"description": "a character vector of arguments to <code>R CMD</code>."
			}, {
				"name": "...",
				"description": "arguments to be passed to <code><a rd-options=\"\" href=\"/link/system2?package=tools&amp;version=3.3.2\">system2</a></code>."
			}]
		}, {
			"name": "Rd2HTML",
			"args": [{
				"name": "Rd",
				"description": "a filename or <code>Rd</code> object to use as input."
			}, {
				"name": "out",
				"description": "a filename or connection object to which to write the output."
			}, {
				"name": "package",
				"description": "the package to list in the output."
			}, {
				"name": "defines",
				"description": "string(s) to use in <code>#ifdef</code> tests."
			}, {
				"name": "stages",
				"description": "at which stage (<code>&quot;build&quot;</code>, <code>&quot;install&quot;</code>, or\n    <code>&quot;render&quot;</code>) should <code>\\Sexpr</code> macros be executed? See the\n    notes below."
			}, {
				"name": "outputEncoding",
				"description": "see the &#x2018;Encodings&#x2019; section below."
			}, {
				"name": "dynamic",
				"description": "logical: set links for render-time resolution by\n      dynamic help system."
			}, {
				"name": "no_links",
				"description": "logical: suppress hyperlinks to other help topics.\n      Used by <code>R CMD <a rd-options=\"\" href=\"/link/Rdconv?package=tools&amp;version=3.3.2\">Rdconv</a></code>."
			}, {
				"name": "fragment",
				"description": "logical:  should fragments of Rd files be accepted?  See the\n      notes below."
			}, {
				"name": "stylesheet",
				"description": "character: a URL for a stylesheet to be used in the header\n      of the HTML output page."
			}, {
				"name": "Links, Links2",
				"description": "<code>NULL</code> or a named (by topics) character vector of\n    links, as returned by <code><a rd-options=\"\" href=\"/link/findHTMLlinks?package=tools&amp;version=3.3.2\">findHTMLlinks</a></code>."
			}, {
				"name": "options",
				"description": "An optional named list of options to pass to\n    <code><a rd-options=\"\" href=\"/link/Rd2txt_options?package=tools&amp;version=3.3.2\">Rd2txt_options</a></code>."
			}, {
				"name": "...",
				"description": "additional parameters to pass to <code><a rd-options=\"\" href=\"/link/parse_Rd?package=tools&amp;version=3.3.2\">parse_Rd</a></code> when\n    <code>Rd</code> is a filename."
			}, {
				"name": "writeEncoding",
				"description": "should <code>\\inputencoding</code> lines be written in\n      the file for non-ASCII encodings?"
			}, {
				"name": "commentDontrun",
				"description": "should <code>\\dontrun</code> sections be commented\n      out?"
			}, {
				"name": "commentDonttest",
				"description": "should <code>\\donttest</code> sections be commented out?"
			}]
		}, {
			"name": ".print.via.format",
			"args": [{
				"name": "x",
				"description": "object to be printed."
			}, {
				"name": "...",
				"description": "optional further arguments, passed to <code><a rd-options=\"\" href=\"/link/format?package=tools&amp;version=3.3.2\">format</a></code>."
			}]
		}, {
			"name": "pskill",
			"args": [{
				"name": "pid",
				"description": "positive integers: one or more process IDs as returned by\n    <code><a rd-options=\"\" href=\"/link/Sys.getpid?package=tools&amp;version=3.3.2\">Sys.getpid</a></code>."
			}, {
				"name": "signal",
				"description": "integer, most often one of the symbolic constants."
			}]
		}, {
			"name": "QC",
			"args": [{
				"name": "package",
				"description": "a character string naming an installed package."
			}, {
				"name": "dir",
				"description": "a character string specifying the path to a package&apos;s root\n    source directory.  This should contain the subdirectories &#x2018;<span class=\"file\">R</span>&#x2019;\n    (for R code) and &#x2018;<span class=\"file\">man</span>&#x2019; with <span style=\"R\">R</span> documentation sources (in Rd\n    format).  Only used if <code>package</code> is not given."
			}, {
				"name": "lib.loc",
				"description": "a character vector of directory names of <span style=\"R\">R</span> libraries,\n    or <code>NULL</code>.  The default value of <code>NULL</code> corresponds to all\n    libraries currently known.  The specified library trees are used to\n    search for <code>package</code>."
			}]
		}, {
			"name": "psnice",
			"args": [{
				"name": "pid",
				"description": "positive integers: the process IDs of one of more\n    processes: defaults to the <span style=\"R\">R</span> session process."
			}, {
				"name": "value",
				"description": "The niceness to be set, or <code>NA</code> for an enquiry."
			}]
		}, {
			"name": "parse_Rd",
			"args": [{
				"name": "file",
				"description": "A filename or text-mode connection.  At present filenames\n    work best."
			}, {
				"name": "srcfile",
				"description": "<code>NULL</code>, or a <code>&quot;srcfile&quot;</code> object.  See the\n    &#x2018;Details&#x2019; section."
			}, {
				"name": "encoding",
				"description": "Encoding to be assumed for input strings."
			}, {
				"name": "verbose",
				"description": "Logical indicating whether detailed parsing\n    information should be printed."
			}, {
				"name": "fragment",
				"description": "Logical indicating whether file represents a complete\n    Rd file, or a fragment."
			}, {
				"name": "warningCalls",
				"description": "Logical: should parser warnings include the call?"
			}, {
				"name": "macros",
				"description": "Filename or environment from which to load additional\n    macros, or a logical value.  See the Details below."
			}, {
				"name": "permissive",
				"description": "Logical indicating that unrecognized macros\n    should be treated as text with no warning."
			}, {
				"name": "x",
				"description": "An object of class Rd."
			}, {
				"name": "deparse",
				"description": "If <code>TRUE</code>, attempt to reinstate the escape characters\n    so that the resulting characters will parse to the same object."
			}, {
				"name": "...",
				"description": "Further arguments to be passed to or from other methods."
			}]
		}, {
			"name": "package_dependencies",
			"args": [{
				"name": "packages",
				"description": "a character vector of package names."
			}, {
				"name": "db",
				"description": "character matrix as from <code><a rd-options=\"\" href=\"/link/available.packages?package=tools&amp;version=3.3.2\">available.packages</a>()</code>\n    (with the default <code>NULL</code> the results of this call)\n    or data frame variants thereof.  Alternatively, a package database\n    like the one available from\n    <a href=\"https://cran.r-project.org/web/packages/packages.rds\">https://cran.r-project.org/web/packages/packages.rds</a>."
			}, {
				"name": "which",
				"description": "a character vector listing the types of\n    dependencies, a subset of\n    <code>c(&quot;Depends&quot;, &quot;Imports&quot;, &quot;LinkingTo&quot;, &quot;Suggests&quot;, &quot;Enhances&quot;)</code>.\n    Character string <code>&quot;all&quot;</code> is shorthand for that vector,\n    character string <code>&quot;most&quot;</code> for the same vector without\n    <code>&quot;Enhances&quot;</code>."
			}, {
				"name": "recursive",
				"description": "logical: should (reverse) dependencies of (reverse)\n    dependencies (and so on) be included?"
			}, {
				"name": "reverse",
				"description": "logical: if <code>FALSE</code> (default), regular\n    dependencies are calculated, otherwise reverse dependencies."
			}, {
				"name": "verbose",
				"description": "logical indicating if output should monitor the package\n    search cycles."
			}]
		}, {
			"name": "parseLatex",
			"args": [{
				"name": "text",
				"description": "A character vector containing LaTeX source code."
			}, {
				"name": "filename",
				"description": "A filename to use in syntax error messages."
			}, {
				"name": "verbose",
				"description": "If <code>TRUE</code>, print debug error messages."
			}, {
				"name": "verbatim",
				"description": "A character vector containing the names of LaTeX environments holding verbatim text."
			}, {
				"name": "x",
				"description": "A <code>&quot;LaTeX&quot;</code> object."
			}, {
				"name": "dropBraces",
				"description": "Drop unnecessary braces when displaying a <code>&quot;LaTeX&quot;</code> object."
			}]
		}, {
			"name": "package.dependencies",
			"args": [{
				"name": "x",
				"description": "A matrix of package descriptions as returned by\n    <code><a rd-options=\"\" href=\"/link/available.packages?package=tools&amp;version=3.3.2\">available.packages</a></code>."
			}, {
				"name": "check",
				"description": "If <code>TRUE</code>, return logical vector of check results.\n    If <code>FALSE</code>, return parsed list of dependencies."
			}, {
				"name": "depLevel",
				"description": "Whether to look for <code>Depends</code> or <code>Suggests</code>\n    level dependencies.  Can be abbreviated."
			}]
		}, {
			"name": "testInstalledPackage",
			"args": [{
				"name": "pkg",
				"description": "name of an installed package."
			}, {
				"name": "lib.loc",
				"description": "library path(s) in which to look for the package.  See\n    <code><a rd-options=\"\" href=\"/link/library?package=tools&amp;version=3.3.2\">library</a></code>."
			}, {
				"name": "outDir",
				"description": "the directory into which to write the output files: this\n    should already exist."
			}, {
				"name": "types",
				"description": "type(s) of tests to be done."
			}, {
				"name": "errorsAreFatal",
				"description": "logical: should testing terminate at the first\n    error?"
			}, {
				"name": "srcdir",
				"description": "Optional directory to look for <code>.save</code> files."
			}, {
				"name": "Ropts",
				"description": "Additional options such as <span class=\"option\">-d valgrind</span> to be\n    passed to <code>R CMD BATCH</code> when running examples or tests."
			}, {
				"name": "...",
				"description": "additional arguments use when preparing the files to be\n    run, e.g.\\ifelse{latex}{\\out{~}}{ } <code>commentDontrun</code> and <code>commentDonttest</code>."
			}, {
				"name": "scope",
				"description": "Which set(s) should be tested?  Can be abbreviated."
			}]
		}, {
			"name": "Rdutils",
			"args": [{
				"name": "package",
				"description": "a character string naming an installed package."
			}, {
				"name": "dir",
				"description": "a character string specifying the path to a package&apos;s root\n    source directory.  This should contain the subdirectory &#x2018;<span class=\"file\">man</span>&#x2019;\n    with <span style=\"R\">R</span> documentation sources (in Rd format).  Only used if\n    <code>package</code> is not given."
			}, {
				"name": "lib.loc",
				"description": "a character vector of directory names of <span style=\"R\">R</span> libraries,\n    or <code>NULL</code>.  The default value of <code>NULL</code> corresponds to all\n    libraries currently known.  The specified library trees are used to\n    search for <code>package</code>."
			}]
		}, {
			"name": "read.00Index",
			"args": [{
				"name": "file",
				"description": "the name of a file to read data values from.  If the\n    specified file is <code>&quot;&quot;</code>, then input is taken from the keyboard\n    (in this case input can be terminated by a blank line).\n    Alternatively, <code>file</code> can be a <code><a rd-options=\"\" href=\"/link/connection?package=tools&amp;version=3.3.2\">connection</a></code>, which\n    will be opened if necessary, and if so closed at the end of the\n    function call."
			}]
		}, {
			"name": "Rd2txt_options",
			"args": [{
				"name": "...",
				"description": "A list containing named options, or\n  options passed as individual named arguments.\n  See below for currently defined ones."
			}]
		}, {
			"name": "Rdindex",
			"args": [{
				"name": "RdFiles",
				"description": "a character vector specifying the Rd files to be used\n    for creating the index, either by giving the paths to the files, or\n    the path to a single directory with the sources of a package."
			}, {
				"name": "outFile",
				"description": "a connection, or a character string naming the output\n    file to print to.  <code>&quot;&quot;</code> (the default) indicates output to the\n    console."
			}, {
				"name": "type",
				"description": "a character string giving the documentation type of the Rd\n    files to be included in the index, or <code>NULL</code> (the default).\n    The type of an Rd file is typically specified via the\n    <code>\\docType</code> tag; if <code>type</code> is <code>&quot;data&quot;</code>, Rd files\n    whose <em>only</em> keyword is <code>datasets</code> are included as well."
			}, {
				"name": "width",
				"description": "a positive integer giving the target column for wrapping\n    lines in the output."
			}, {
				"name": "indent",
				"description": "a positive integer specifying the indentation of the\n    second column.  Must not be greater than <code>width/2</code>, and\n    defaults to <code>width/3</code>."
			}]
		}, {
			"name": "SweaveTeXFilter",
			"args": [{
				"name": "ifile",
				"description": "Input file or connection."
			}, {
				"name": "encoding",
				"description": "Text encoding to pass to <code><a rd-options=\"\" href=\"/link/readLines?package=tools&amp;version=3.3.2\">readLines</a></code>."
			}]
		}, {
			"name": "Rdiff",
			"args": [{
				"name": "from, to",
				"description": "filepaths to be compared"
			}, {
				"name": "useDiff",
				"description": "should <code>diff</code> always be used to compare\n    results?"
			}, {
				"name": "forEx",
				"description": "logical: extra pruning for &#x2018;<span class=\"file\">-Ex.Rout</span>&#x2019; files to\n    exclude the header."
			}, {
				"name": "nullPointers",
				"description": "logical: should the displayed addresses of\n    pointers be set to <code>0x00000000</code> before comparison?"
			}, {
				"name": "Log",
				"description": "logical: should the returned value include a log of\n    differences found?"
			}]
		}, {
			"name": "RdTextFilter",
			"args": [{
				"name": "ifile",
				"description": "An input file specified as a filename or connection, or an <code>&quot;Rd&quot;</code> object\n  from <code><a rd-options=\"\" href=\"/link/parse_Rd?package=tools&amp;version=3.3.2\">parse_Rd</a></code>."
			}, {
				"name": "encoding",
				"description": "An encoding name to pass to <code><a rd-options=\"\" href=\"/link/parse_Rd?package=tools&amp;version=3.3.2\">parse_Rd</a></code>."
			}, {
				"name": "keepSpacing",
				"description": "Whether to try to leave the text in the same lines and columns\n  as in the original file."
			}, {
				"name": "drop",
				"description": "Additional sections of the Rd to drop."
			}, {
				"name": "keep",
				"description": "Sections of the Rd file to keep."
			}, {
				"name": "macros",
				"description": "Macro definitions to assume when parsing.  See <code><a rd-options=\"\" href=\"/link/parse_Rd?package=tools&amp;version=3.3.2\">parse_Rd</a></code>."
			}]
		}, {
			"name": "startDynamicHelp",
			"args": [{
				"name": "start",
				"description": "logical: whether to start or shut down the dynamic help\n    system.  If <code>NA</code>, the server is started if not already running."
			}]
		}, {
			"name": "showNonASCII",
			"args": [{
				"name": "x",
				"description": "a character vector."
			}, {
				"name": "file",
				"description": "path to a file."
			}]
		}, {
			"name": "tools-deprecated",
			"args": []
		}, {
			"name": "tools-defunct",
			"args": []
		}, {
			"name": "toRd",
			"args": [{
				"name": "obj",
				"description": "The object to be rendered."
			}, {
				"name": "style",
				"description": "The style to be used in converting a <code><a rd-options=\"\" href=\"/link/bibentry?package=tools&amp;version=3.3.2\">bibentry</a></code> object."
			}, {
				"name": "...",
				"description": "Additional arguments used by methods."
			}]
		}, {
			"name": "update_pkg_po",
			"args": [{
				"name": "pkgdir",
				"description": "The path to the package directory."
			}, {
				"name": "pkg",
				"description": "The package name: if <code>NULL</code> it is read from the package&apos;s\n    &#x2018;<span class=\"file\">DESCRIPTION</span>&#x2019; file."
			}, {
				"name": "version",
				"description": "The package version: if <code>NULL</code> it is read from the\n    package&apos;s &#x2018;<span class=\"file\">DESCRIPTION</span>&#x2019; file."
			}, {
				"name": "copyright, bugs",
				"description": "optional character strings for the\n    <span class=\"samp\">Copyright</span> and <span class=\"samp\">Report-Msgid-Bugs-To</span> details in the\n    template files."
			}]
		}, {
			"name": "tools-package",
			"args": []
		}, {
			"name": "vignetteDepends",
			"args": [{
				"name": "vignette",
				"description": "The path to the vignette source"
			}, {
				"name": "recursive",
				"description": "Whether or not to include indirect dependencies"
			}, {
				"name": "reduce",
				"description": "Whether or not to collapse all sets of dependencies to a\n    minimal value"
			}, {
				"name": "local",
				"description": "Whether or not to search only locally"
			}, {
				"name": "lib.loc",
				"description": "What libraries to search in locally"
			}]
		}, {
			"name": "toTitleCase",
			"args": [{
				"name": "text",
				"description": "a character vector."
			}]
		}, {
			"name": "undoc",
			"args": [{
				"name": "package",
				"description": "a character string naming an installed package."
			}, {
				"name": "dir",
				"description": "a character string specifying the path to a package&apos;s root\n    source directory.  This must contain the subdirectory &#x2018;<span class=\"file\">man</span>&#x2019;\n    with <span style=\"R\">R</span> documentation sources (in Rd format), and at least one of\n    the &#x2018;<span class=\"file\">R</span>&#x2019; or &#x2018;<span class=\"file\">data</span>&#x2019; subdirectories with <span style=\"R\">R</span> code or data\n    objects, respectively."
			}, {
				"name": "lib.loc",
				"description": "a character vector of directory names of <span style=\"R\">R</span> libraries,\n    or <code>NULL</code>.  The default value of <code>NULL</code> corresponds to all\n    libraries currently known.  The specified library trees are used to\n    search for <code>package</code>."
			}]
		}, {
			"name": "texi2dvi",
			"args": [{
				"name": "file",
				"description": "character string.  Name of the LaTeX source file."
			}, {
				"name": "pdf",
				"description": "logical.  If <code>TRUE</code>, a PDF file is produced instead of\n    the default dvi file (<code>texi2dvi</code> command line option <span class=\"option\">--pdf</span>)."
			}, {
				"name": "clean",
				"description": "logical.  If <code>TRUE</code>, all auxiliary files created\n    during the conversion are removed."
			}, {
				"name": "quiet",
				"description": "logical.  No output unless an error occurs."
			}, {
				"name": "texi2dvi",
				"description": "character string (or <code>NULL</code>).  Script or program\n    used to compile a TeX file to dvi or PDF. The default (selected\n    by <code>&quot;&quot;</code> or <code>&quot;texi2dvi&quot;</code> or <code>NULL</code>) is to look\n    for a program or script named &#x2018;<span class=\"file\">texi2dvi</span>&#x2019; on the path and\n    otherwise emulate the script with <code>system2</code> calls (which\n    can be selected by the value <code>&quot;emulation&quot;</code>).  See also\n    &#x2018;Details&#x2019;."
			}, {
				"name": "texinputs",
				"description": "<code>NULL</code> or a character vector of paths to add to\n    the LaTeX and bibtex input search paths."
			}, {
				"name": "index",
				"description": "logical: should indices be prepared?"
			}]
		}, {
			"name": "toHTML",
			"args": [{
				"name": "x",
				"description": "An object to display."
			}, {
				"name": "...",
				"description": "Optional parameters for methods; the <code>&quot;packageIQR&quot;</code> and\n  <code>&quot;news_db&quot;</code> methods pass these to <code><a rd-options=\"\" href=\"/link/HTMLheader?package=tools&amp;version=3.3.2\">HTMLheader</a></code>."
			}]
		}, {
			"name": "write_PACKAGES",
			"args": [{
				"name": "dir",
				"description": "Character vector describing the location of the repository\n    (directory including source or binary packages) to generate the\n    &#x2018;<span class=\"file\">PACKAGES</span>&#x2019; and &#x2018;<span class=\"file\">PACKAGES.gz</span>&#x2019; files from and write them to."
			}, {
				"name": "fields",
				"description": "a character vector giving the fields to be used in the\n    &#x2018;<span class=\"file\">PACKAGES</span>&#x2019; and &#x2018;<span class=\"file\">PACKAGES.gz</span>&#x2019; files in addition to the\n    default ones, or <code>NULL</code> (default).  The default corresponds to\n    the fields needed by <code><a rd-options=\"\" href=\"/link/available.packages?package=tools&amp;version=3.3.2\">available.packages</a></code>:\n    <code>&quot;Package&quot;</code>, <code>&quot;Version&quot;</code>, <code>&quot;Priority&quot;</code>,\n    <code>&quot;Depends&quot;</code>, <code>&quot;Imports&quot;</code>, <code>&quot;LinkingTo&quot;</code>,\n    <code>&quot;Suggests&quot;</code>, <code>&quot;Enhances&quot;</code>, <code>&quot;OS_type&quot;</code>,\n    <code>&quot;License&quot;</code> and <code>&quot;Archs&quot;</code>, and those fields will always\n    be included, plus\n    the file name in field <code>&quot;File&quot;</code> if <code>addFile = TRUE</code>\n    and the path to the subdirectory in field <code>&quot;Path&quot;</code> if subdirectories\n    are used."
			}, {
				"name": "type",
				"description": "Type of packages: currently source &#x2018;<span class=\"file\">.tar.{gz,bz2,xz}</span>&#x2019; archives,\n    and macOS or Windows binary (&#x2018;<span class=\"file\">.tgz</span>&#x2019; or &#x2018;<span class=\"file\">.zip</span>&#x2019;,\n    respectively) packages are supported.  Defaults to\n    <code>&quot;win.binary&quot;</code> on Windows and to <code>&quot;source&quot;</code> otherwise."
			}, {
				"name": "verbose",
				"description": "logical.  Should packages be listed as they are\n    processed?"
			}, {
				"name": "unpacked",
				"description": "a logical indicating whether the package contents are\n    available in unpacked form or not (default)."
			}, {
				"name": "subdirs",
				"description": "either logical (to indicate if subdirectories should be\n    included, recursively) or a character vector of name of subdirectories\n    to include."
			}, {
				"name": "latestOnly",
				"description": "logical: if multiple versions of a package are\n    available should only the latest version be included?"
			}, {
				"name": "addFiles",
				"description": "logical: should the filenames be included as field\n    <span class=\"samp\">File</span> in the &#x2018;<span class=\"file\">PACKAGES</span>&#x2019; file."
			}]
		}, {
			"name": "vignetteEngine",
			"args": [{
				"name": "name",
				"description": "the name of the engine."
			}, {
				"name": "weave",
				"description": "a function to convert vignette source files to LaTeX output."
			}, {
				"name": "tangle",
				"description": "a function to convert vignette source files to <span style=\"R\">R</span> code."
			}, {
				"name": "pattern",
				"description": "a regular expression pattern for the filenames handled\n    by this engine, or <code>NULL</code> for the default pattern."
			}, {
				"name": "package",
				"description": "the package registering the engine.  By default, this\n    is the package calling <code>vignetteEngine</code>."
			}, {
				"name": "aspell",
				"description": "a list with element names <code>filter</code> and/or\n    <code>control</code> giving the respective arguments to be used when spell\n    checking the text in the vignette source file with\n    <code><a rd-options=\"\" href=\"/link/aspell?package=tools&amp;version=3.3.2\">aspell</a></code>."
			}]
		}, {
			"name": "xgettext",
			"args": [{
				"name": "dir",
				"description": "the directory of a source package."
			}, {
				"name": "verbose",
				"description": "logical: should each file be listed as it is processed?"
			}, {
				"name": "asCall",
				"description": "logical: if <code>TRUE</code> each argument is returned whole,\n    otherwise the strings within each argument are extracted."
			}, {
				"name": "potFile",
				"description": "name of <code>po</code> template file to be produced.\n    Defaults to &#x2018;<span class=\"file\">R-<var>pkgname</var>.pot</span>&#x2019; where\n    <var>pkgname</var> is the basename of &#x2018;<span class=\"file\">dir</span>&#x2019;."
			}, {
				"name": "name, version, bugs",
				"description": "as recorded in the template file:\n    <code>version</code> defaults the version number of the currently running\n    <span style=\"R\">R</span>, and <code>bugs</code> to <code>&quot;bugs.r-project.org&quot;</code>."
			}]
		}]
	}
}, {
	"translations": {
		"functions": []
	}
}, {
	"utils": {
		"functions": [{
			"name": "aregexec",
			"args": [{
				"name": "pattern",
				"description": "a non-empty character string or a character string\n    containing a regular expression (for <code>fixed = FALSE</code>) to be\n    matched.\n    Coerced by <code><a rd-options=\"\" href=\"/link/as.character?package=utils&amp;version=3.3.2\">as.character</a></code> to a string if possible."
			}, {
				"name": "text",
				"description": "character vector where matches are sought.\n    Coerced by <code><a rd-options=\"\" href=\"/link/as.character?package=utils&amp;version=3.3.2\">as.character</a></code> to a character vector if\n    possible."
			}, {
				"name": "max.distance",
				"description": "maximum distance allowed for a match.\n    See <code><a rd-options=\"\" href=\"/link/agrep?package=utils&amp;version=3.3.2\">agrep</a></code>."
			}, {
				"name": "costs",
				"description": "cost of transformations.\n    See <code><a rd-options=\"\" href=\"/link/agrep?package=utils&amp;version=3.3.2\">agrep</a></code>."
			}, {
				"name": "ignore.case",
				"description": "a logical.  If <code>TRUE</code>, case is ignored for\n    computing the distances."
			}, {
				"name": "fixed",
				"description": "If <code>TRUE</code>, the pattern is matched literally (as is).\n    Otherwise (default), it is matched as a regular expression."
			}, {
				"name": "useBytes",
				"description": "a logical.  If <code>TRUE</code> comparisons are\n    byte-by-byte rather than character-by-character."
			}]
		}, {
			"name": "available.packages",
			"args": [{
				"name": "contriburl",
				"description": "URL(s) of the &#x2018;<span class=\"file\">contrib</span>&#x2019; sections of the repositories.\n    Specify this argument only if your repository mirror is incomplete,\n    e.g., because you burned only the &#x2018;<span class=\"file\">contrib</span>&#x2019; section on a CD."
			}, {
				"name": "method",
				"description": "download method, see <code><a rd-options=\"\" href=\"/link/download.file?package=utils&amp;version=3.3.2\">download.file</a></code>."
			}, {
				"name": "type",
				"description": "character string, indicate which type of packages: see\n    <code><a rd-options=\"\" href=\"/link/install.packages?package=utils&amp;version=3.3.2\">install.packages</a></code>.\n  \n    If <code>type = &quot;both&quot;</code> this will use the source repository."
			}, {
				"name": "fields",
				"description": "a character vector giving the fields to extract from\n    the &#x2018;<span class=\"file\">PACKAGES</span>&#x2019; file(s) in addition to the default ones, or\n    <code>NULL</code> (default).  Unavailable fields result in <code>NA</code>\n    values."
			}, {
				"name": "filters",
				"description": "a character vector or list or <code>NULL</code> (default). See &#x2018;Details&#x2019;."
			}, {
				"name": "repos",
				"description": "character vector, the base URL(s) of the repositories to use."
			}]
		}, {
			"name": "aspell-utils",
			"args": [{
				"name": "dir",
				"description": "a character string specifying the path to a package&apos;s root\n    directory."
			}, {
				"name": "drop",
				"description": "a character vector naming additional Rd sections to drop\n    when selecting text via <code><a rd-options=\"tools\" href=\"/link/RdTextFilter?package=utils&amp;version=3.3.2&amp;to=tools\">RdTextFilter</a></code>."
			}, {
				"name": "control",
				"description": "a list or character vector of control options for\n    the spell checker."
			}, {
				"name": "program",
				"description": "a character string giving the name (if on the system\n    path) or full path of the spell check program to be used, or\n    <code>NULL</code> (default).  By default, the system path is searched for\n    <code>aspell</code>, <code>hunspell</code> and <code>ispell</code> (in that\n    order), and the first one found is used."
			}, {
				"name": "dictionaries",
				"description": "a character vector of names or file paths of\n    additional R level dictionaries to use.  See <code><a rd-options=\"\" href=\"/link/aspell?package=utils&amp;version=3.3.2\">aspell</a></code>."
			}, {
				"name": "ignore",
				"description": "a character vector with regular expressions to be\n    replaced by blanks when filtering the message strings."
			}, {
				"name": "x",
				"description": "a character vector, or the result of a call to\n    <code><a rd-options=\"\" href=\"/link/aspell?package=utils&amp;version=3.3.2\">aspell</a>()</code>."
			}, {
				"name": "out",
				"description": "a character string naming the personal dictionary file to\n    write to."
			}, {
				"name": "language",
				"description": "a character string indicating a language as used by\n    Aspell."
			}]
		}, {
			"name": "apropos",
			"args": [{
				"name": "what",
				"description": "character string.  For <code>simple.words = FALSE</code>\n    the name of an object; otherwise\n    a <a rd-options=\"\" href=\"/link/regular%20expression?package=utils&amp;version=3.3.2\">regular expression</a> to match object names against."
			}, {
				"name": "where, numeric",
				"description": "a logical indicating whether positions in the\n    search list should also be returned"
			}, {
				"name": "ignore.case",
				"description": "logical indicating if the search should be\n    case-insensitive, <code>TRUE</code> by default."
			}, {
				"name": "mode",
				"description": "character; if not <code>&quot;any&quot;</code>, only objects whose\n    <code><a rd-options=\"\" href=\"/link/mode?package=utils&amp;version=3.3.2\">mode</a></code> equals <code>mode</code> are searched."
			}, {
				"name": "simple.words",
				"description": "logical; if <code>TRUE</code>, the <code>what</code> argument is\n    only searched as a whole word."
			}]
		}, {
			"name": "alarm",
			"args": []
		}, {
			"name": "bibentry",
			"args": [{
				"name": "bibtype",
				"description": "a character string with a BibTeX entry type.\n    See <b>Entry Types</b> for details."
			}, {
				"name": "textVersion",
				"description": "a character string with a text representation of\n    the reference to optionally be employed for printing."
			}, {
				"name": "header",
				"description": "a character string with optional header text."
			}, {
				"name": "footer",
				"description": "a character string with optional footer text."
			}, {
				"name": "key",
				"description": "a character string giving the citation key for the entry."
			}, {
				"name": "...",
				"description": "for <code>bibentry</code>: arguments of the form\n    <code><var>tag</var>=<var>value</var></code> giving the fields of the entry, with\n    <var>tag</var> and <var>value</var> the name and value of the field,\n    respectively.  Arguments with empty values are dropped.\n    See <b>Entry Fields</b> for details.\n\n    For the <code>print</code> method, extra parameters to pass to the\n    renderer."
			}, {
				"name": "other",
				"description": "a list of arguments as in <code>...</code> (useful in\n    particular for fields named the same as formals of\n    <code>bibentry</code>)."
			}, {
				"name": "mheader",
				"description": "a character string with optional &#x201C;outer&#x201D; header\n    text."
			}, {
				"name": "mfooter",
				"description": "a character string with optional &#x201C;outer&#x201D; footer\n    text."
			}, {
				"name": "x",
				"description": "an object inheriting from class <code>&quot;bibentry&quot;</code>."
			}, {
				"name": "style",
				"description": "an optional character string specifying the print style.\n    If present, must be a unique abbreviation (with case ignored) of the available\n    styles, see <b>Details</b>."
			}, {
				"name": ".bibstyle",
				"description": "a character string naming a bibliography style."
			}]
		}, {
			"name": "adist",
			"args": [{
				"name": "x",
				"description": "a character vector.  <a rd-options=\"\" href=\"/link/Long%20vectors?package=utils&amp;version=3.3.2\">Long vectors</a> are not supported."
			}, {
				"name": "y",
				"description": "a character vector, or <code>NULL</code> (default) indicating\n    taking <code>x</code> as <code>y</code>."
			}, {
				"name": "costs",
				"description": "a numeric vector or list with names partially matching\n    <span class=\"samp\">insertions</span>, <span class=\"samp\">deletions</span> and <span class=\"samp\">substitutions</span> giving\n    the respective costs for computing the Levenshtein distance, or\n    <code>NULL</code> (default) indicating using unit cost for all three\n    possible transformations."
			}, {
				"name": "counts",
				"description": "a logical indicating whether to optionally return the\n    transformation counts (numbers of insertions, deletions and\n    substitutions) as the <code>&quot;counts&quot;</code> attribute of the return\n    value."
			}, {
				"name": "fixed",
				"description": "a logical.  If <code>TRUE</code> (default), the <code>x</code>\n    elements are used as string literals.  Otherwise, they are taken as\n    regular expressions and <code>partial = TRUE</code> is implied\n    (corresponding to the approximate string distance used by\n    <code><a rd-options=\"\" href=\"/link/agrep?package=utils&amp;version=3.3.2\">agrep</a></code> with <code>fixed = FALSE</code>."
			}, {
				"name": "partial",
				"description": "a logical indicating whether the transformed <code>x</code>\n    elements must exactly match the complete <code>y</code> elements, or only\n    substrings of these.  The latter corresponds to the approximate\n    string distance used by <code><a rd-options=\"\" href=\"/link/agrep?package=utils&amp;version=3.3.2\">agrep</a></code> (by default)."
			}, {
				"name": "ignore.case",
				"description": "a logical.  If <code>TRUE</code>, case is ignored for\n    computing the distances."
			}, {
				"name": "useBytes",
				"description": "a logical.  If <code>TRUE</code> distance computations are\n    done byte-by-byte rather than character-by-character."
			}]
		}, {
			"name": "aspell",
			"args": [{
				"name": "files",
				"description": "a character vector with the names of files to be checked."
			}, {
				"name": "filter",
				"description": "an optional filter for processing the files before spell\n    checking, given as either a function (with formals <code>ifile</code> and\n    <code>encoding</code>), or a character string specifying a built-in\n    filter, or a list with the name of a built-in filter and additional\n    arguments to be passed to it.  See <b>Details</b> for available\n    filters.  If missing or <code>NULL</code>, no filtering is performed."
			}, {
				"name": "control",
				"description": "a list or character vector of control options for the\n    spell checker."
			}, {
				"name": "encoding",
				"description": "the encoding of the files.  Recycled as needed."
			}, {
				"name": "program",
				"description": "a character string giving the name (if on the system\n    path) or full path of the spell check program to be used, or\n    <code>NULL</code> (default).  By default, the system path is searched for\n    <code>aspell</code>, <code>hunspell</code> and <code>ispell</code> (in that\n    order), and the first one found is used."
			}, {
				"name": "dictionaries",
				"description": "a character vector of names or file paths of\n    additional R level dictionaries to use.  Elements with no path\n    separator specify R system dictionaries (in subdirectory\n    &#x2018;<span class=\"file\">share/dictionaries</span>&#x2019; of the R home directory).  The file\n    extension (currently, only &#x2018;<span class=\"file\">.rds</span>&#x2019;) can be omitted."
			}]
		}, {
			"name": "browseEnv",
			"args": [{
				"name": "envir",
				"description": "an <code><a rd-options=\"\" href=\"/link/environment?package=utils&amp;version=3.3.2\">environment</a></code> the objects of which are to\n    be browsed."
			}, {
				"name": "pattern",
				"description": "a <a rd-options=\"\" href=\"/link/regular%20expression?package=utils&amp;version=3.3.2\">regular expression</a> for object subselection\n    is passed to the internal <code><a rd-options=\"\" href=\"/link/ls?package=utils&amp;version=3.3.2\">ls</a>()</code> call."
			}, {
				"name": "excludepatt",
				"description": "a regular expression for <em>dropping</em> objects\n    with matching names."
			}, {
				"name": "html",
				"description": "is used to display the workspace\n    on a HTML page in your favorite browser.  The default except when\n    running from <code>R.app</code> on macOS."
			}, {
				"name": "expanded",
				"description": "whether to show one level of recursion.  It can be useful\n    to switch it to <code>FALSE</code> if your workspace is large.  This\n    option is ignored if <code>html</code> is set to <code>FALSE</code>."
			}, {
				"name": "properties",
				"description": "a named list of global properties (of the objects chosen)\n    to be showed in the browser;  when <code>NULL</code> (as per default),\n    user, date, and machine information is used."
			}, {
				"name": "main",
				"description": "a title string to be used in the browser; when <code>NULL</code>\n    (as per default) a title is constructed."
			}, {
				"name": "debugMe",
				"description": "logical switch; if true, some diagnostic output is produced."
			}]
		}, {
			"name": "BATCH",
			"args": [{
				"name": "infile",
				"description": "the name of a file with <span style=\"R\">R</span> code to be executed."
			}, {
				"name": "options",
				"description": "a list of <span style=\"R\">R</span> command line options, e.g., for setting the\n    amount of memory available and controlling the load/save process.\n    If <code>infile</code> starts with a <span class=\"samp\">-</span>, use <span class=\"option\">--</span> as the final\n    option.\n    The default options are <span class=\"option\">--restore --save --no-readline</span>.\n    (Without <span class=\"option\">--no-readline</span> on Windows.)"
			}, {
				"name": "outfile",
				"description": "the name of a file to which to write output.  If not\n    given, the name used is that of <code>infile</code>, with a possible\n    &#x2018;<span class=\"file\">.R</span>&#x2019; extension stripped, and &#x2018;<span class=\"file\">.Rout</span>&#x2019; appended."
			}]
		}, {
			"name": "browseVignettes",
			"args": [{
				"name": "package",
				"description": "a character vector with the names of packages to\n    search through, or <code>NULL</code> in which &quot;all&quot; packages (as defined\n    by argument <code>all</code>) are searched."
			}, {
				"name": "lib.loc",
				"description": "a character vector of directory names of <span style=\"R\">R</span> libraries,\n    or <code>NULL</code>.  The default value of <code>NULL</code> corresponds to all\n    libraries currently known."
			}, {
				"name": "all",
				"description": "logical; if <code>TRUE</code> search\n    all available packages in the library trees specified by <code>lib.loc</code>,\n    and if <code>FALSE</code>, search only attached packages."
			}, {
				"name": "x",
				"description": "Object of class <code>browseVignettes</code>."
			}, {
				"name": "...",
				"description": "Further arguments, ignored by the <code>print</code> method."
			}]
		}, {
			"name": "bug.report",
			"args": [{
				"name": "subject",
				"description": "Subject of the email."
			}, {
				"name": "address",
				"description": "Recipient&apos;s email address, where applicable: for\n    package bug reports sent by email this defaults to the address of\n    the package maintainer (the first if more than one is listed)."
			}, {
				"name": "file",
				"description": "filename to use (if needed) for setting up the email."
			}, {
				"name": "package",
				"description": "Optional character vector naming a single package which is\n    the subject of the bug report."
			}, {
				"name": "lib.loc",
				"description": "A character vector describing the location of <span style=\"R\">R</span>\n    library trees in which to search for the package, or <code>NULL</code>.\n    The default value of <code>NULL</code> corresponds to all libraries\n    currently known."
			}, {
				"name": "...",
				"description": "additional named arguments such as <code>method</code> and\n    <code>ccaddress</code> to pass to <code><a rd-options=\"\" href=\"/link/create.post?package=utils&amp;version=3.3.2\">create.post</a></code>."
			}]
		}, {
			"name": "chooseBioCmirror",
			"args": [{
				"name": "graphics",
				"description": "Logical.  If true, use a graphical list: on Windows or\n    the macOS GUI use a list box, and on a Unix-alike use a Tk widget if\n    package <span class=\"pkg\">tcltk</span> and an X server are available.  Otherwise use a\n    text <code><a rd-options=\"\" href=\"/link/menu?package=utils&amp;version=3.3.2\">menu</a></code>."
			}, {
				"name": "ind",
				"description": "Optional numeric value giving which entry to select."
			}, {
				"name": "useHTTPS",
				"description": "Whether to prefer HTTPS mirrors (see\n    <code><a rd-options=\"\" href=\"/link/chooseCRANmirror?package=utils&amp;version=3.3.2\">chooseCRANmirror</a></code>)."
			}, {
				"name": "local.only",
				"description": "Logical, try to get most recent list from the\n    Bioconductor master or use file on local disk only."
			}]
		}, {
			"name": "close.socket",
			"args": [{
				"name": "socket",
				"description": "a <code>socket</code> object"
			}, {
				"name": "...",
				"description": "further arguments passed to or from other methods."
			}]
		}, {
			"name": "chooseCRANmirror",
			"args": [{
				"name": "graphics",
				"description": "Logical.  If true, use a graphical list: on Windows or\n    the macOS GUI use a list box, and on a Unix-alike  use a Tk widget if\n    package <span class=\"pkg\">tcltk</span> and an X server are available.  Otherwise use a\n    text <code><a rd-options=\"\" href=\"/link/menu?package=utils&amp;version=3.3.2\">menu</a></code>."
			}, {
				"name": "ind",
				"description": "Optional numeric value giving which entry to select."
			}, {
				"name": "useHTTPS",
				"description": "Whether to prefer HTTPS mirrors."
			}, {
				"name": "all",
				"description": "Logical, get all known mirrors or only the ones flagged as OK."
			}, {
				"name": "local.only",
				"description": "Logical, try to get most recent list from the CRAN\n    master or use file on local disk only."
			}]
		}, {
			"name": "citation",
			"args": [{
				"name": "package",
				"description": "a character string with the name of a single package.\n    An error occurs if more than one package name is given."
			}, {
				"name": "lib.loc",
				"description": "a character vector with path names of <span style=\"R\">R</span> libraries, or\n    <code>NULL</code>.  The default value of <code>NULL</code> corresponds to all\n    libraries currently known.  If the default is used, the loaded\n    packages are searched before the libraries."
			}, {
				"name": "auto",
				"description": "a logical indicating whether the default citation\n    auto-generated from the package &#x2018;<span class=\"file\">DESCRIPTION</span>&#x2019; metadata should\n    be used or not, or <code>NULL</code> (default), indicating that a\n    &#x2018;<span class=\"file\">CITATION</span>&#x2019; file is used if it exists, or an object of class\n    <code>&quot;<a rd-options=\"\" href=\"/link/packageDescription?package=utils&amp;version=3.3.2\">packageDescription</a>&quot;</code> with package metadata (see\n    below)."
			}, {
				"name": "file",
				"description": "a file name."
			}, {
				"name": "meta",
				"description": "a list of package metadata as obtained by\n    <code><a rd-options=\"\" href=\"/link/packageDescription?package=utils&amp;version=3.3.2\">packageDescription</a></code>, or <code>NULL</code> (the default)."
			}]
		}, {
			"name": "citEntry",
			"args": [{
				"name": "entry",
				"description": "a character string with a BibTeX entry type.\n    See section <b>Entry Types</b> in <code><a rd-options=\"\" href=\"/link/bibentry?package=utils&amp;version=3.3.2\">bibentry</a></code> for\n    details."
			}, {
				"name": "textVersion",
				"description": "a character string with a text representation of\n    the reference."
			}, {
				"name": "header",
				"description": "a character string with optional header text."
			}, {
				"name": "footer",
				"description": "a character string with optional footer text."
			}, {
				"name": "...",
				"description": "for <code>citEntry</code>, arguments of the form\n    <code><var>tag</var>=<var>value</var></code> giving the fields of the entry, with\n    <var>tag</var> and <var>value</var> the name and value of the field,\n    respectively.\n    See section <b>Entry Fields</b> in <code><a rd-options=\"\" href=\"/link/bibentry?package=utils&amp;version=3.3.2\">bibentry</a></code> for\n    details.\n\n    For <code>citHeader</code> and <code>citFooter</code>, character strings."
			}]
		}, {
			"name": "changedFiles",
			"args": [{
				"name": "path",
				"description": "character vector; the path(s) to record."
			}, {
				"name": "file.info",
				"description": "logical; whether to record <code><a rd-options=\"\" href=\"/link/file.info?package=utils&amp;version=3.3.2\">file.info</a></code>\nvalues for each file."
			}, {
				"name": "timestamp",
				"description": "character string or <code>NULL</code>; the name of a file\nto write at the time the snapshot is taken.  This gives a quick test\nfor modification, but may be unreliable; see the Details."
			}, {
				"name": "md5sum",
				"description": "logical; whether MD5 summaries of each file should be\ntaken as part of the snapshot."
			}, {
				"name": "digest",
				"description": "a function or <code>NULL</code>; a function with header\n<code>function(filename)</code> which will take a vector of filenames and\nproduce a vector of values of the same length, or a matrix with that\nnumber of rows."
			}, {
				"name": "full.names",
				"description": "logical; whether full names (as in\n<code><a rd-options=\"\" href=\"/link/list.files?package=utils&amp;version=3.3.2\">list.files</a></code>) should be recorded. Must be <code>TRUE</code> if\n<code>length(path) &gt; 1</code>."
			}, {
				"name": "...",
				"description": "additional parameters to pass to\n<code><a rd-options=\"\" href=\"/link/list.files?package=utils&amp;version=3.3.2\">list.files</a></code> to control the set of files in the snapshots."
			}, {
				"name": "before, after",
				"description": "objects produced by <code>fileSnapshot</code>; two\nsnapshots to compare.  If <code>after</code> is missing, a new snapshot of\nthe current file system will be produced for comparison, using\narguments recorded in <code>before</code> as defaults."
			}, {
				"name": "check.file.info",
				"description": "character vector; which columns from\n<code><a rd-options=\"\" href=\"/link/file.info?package=utils&amp;version=3.3.2\">file.info</a></code> should be compared."
			}, {
				"name": "x",
				"description": "the object to print."
			}, {
				"name": "verbose",
				"description": "logical; whether to list all data when printing."
			}]
		}, {
			"name": "capture.output",
			"args": [{
				"name": "...",
				"description": "Expressions to be evaluated."
			}, {
				"name": "file",
				"description": "A file name or a <a rd-options=\"\" href=\"/link/connection?package=utils&amp;version=3.3.2\">connection</a>, or <code>NULL</code> to return\n    the output as a character vector.  If the connection is not open,\n    it will be opened initially and closed on exit."
			}, {
				"name": "append",
				"description": "logical.  If <code>file</code> a file name or unopened\n    connection, append or overwrite?"
			}, {
				"name": "type, split",
				"description": "are passed to <code><a rd-options=\"\" href=\"/link/sink?package=utils&amp;version=3.3.2\">sink</a>()</code>, see there."
			}]
		}, {
			"name": "cite",
			"args": [{
				"name": "keys",
				"description": "A character vector of keys of entries to cite.  May contain multiple keys in\na single entry, separated by commas."
			}, {
				"name": "bib",
				"description": "A <code>&quot;<a rd-options=\"\" href=\"/link/bibentry?package=utils&amp;version=3.3.2\">bibentry</a>&quot;</code> object containing the list of documents in which\nto find the keys."
			}, {
				"name": "...",
				"description": "Additional arguments to pass to the <code>cite()</code> function for the\ndefault style."
			}, {
				"name": "textual",
				"description": "Produce a &#x201C;textual&#x201D; style of citation, i.e.\\ifelse{latex}{\\out{~}}{ } what <code>\\citet</code> would\nproduce in LaTeX."
			}, {
				"name": "before",
				"description": "Optional text to display before the citation."
			}, {
				"name": "after",
				"description": "Optional text to display after the citation."
			}, {
				"name": "mode",
				"description": "The &#x201C;mode&#x201D; of citation."
			}, {
				"name": "abbreviate",
				"description": "Whether to abbreviate long author lists."
			}, {
				"name": "longnamesfirst",
				"description": "If <code>abbreviate == TRUE</code>, whether to leave the first citation long."
			}, {
				"name": "bibpunct",
				"description": "A vector of punctuation to use in the citation, as used in <span class=\"pkg\">natbib</span>.  See\nthe Details section."
			}, {
				"name": "previous",
				"description": "A list of keys that have been previously cited, to be used when\n<code>abbreviate == TRUE</code> and <code>longnamesfirst == TRUE</code>"
			}]
		}, {
			"name": "demo",
			"args": [{
				"name": "topic",
				"description": "the topic which should be demonstrated, given as a\n    <a rd-options=\"\" href=\"/link/name?package=utils&amp;version=3.3.2\">name</a> or literal character string, or a character string,\n    depending on whether <code>character.only</code> is <code>FALSE</code> (default)\n    or <code>TRUE</code>.  If omitted, the list of available topics is\n    displayed."
			}, {
				"name": "package",
				"description": "a character vector giving the packages to look into for\n    demos, or <code>NULL</code>.  By default, all packages in the search path\n    are used."
			}, {
				"name": "lib.loc",
				"description": "a character vector of directory names of <span style=\"R\">R</span> libraries,\n    or <code>NULL</code>.  The default value of <code>NULL</code> corresponds to all\n    libraries currently known.  If the default is used, the loaded\n    packages are searched before the libraries."
			}, {
				"name": "character.only",
				"description": "logical; if <code>TRUE</code>, use <code>topic</code> as\n    character string."
			}, {
				"name": "verbose",
				"description": "a logical.  If <code>TRUE</code>, additional diagnostics are\n    printed."
			}, {
				"name": "echo",
				"description": "a logical.  If <code>TRUE</code>, show the <span style=\"R\">R</span> input when sourcing."
			}, {
				"name": "ask",
				"description": "a logical (or <code>&quot;default&quot;</code>) indicating if\n    <code><a rd-options=\"\" href=\"/link/devAskNewPage?package=utils&amp;version=3.3.2\">devAskNewPage</a>(ask = TRUE)</code> should be called before\n    graphical output happens from the demo code.  The value\n    <code>&quot;default&quot;</code> (the factory-fresh default) means to ask if\n    <code>echo == TRUE</code> and the graphics device appears to be\n    interactive.  This parameter applies both to any currently opened\n    device and to any devices opened by the demo code.  If this is\n    evaluated to <code>TRUE</code> and the session is <a rd-options=\"\" href=\"/link/interactive?package=utils&amp;version=3.3.2\">interactive</a>, the\n    user is asked to press RETURN to start."
			}, {
				"name": "encoding",
				"description": "See <code><a rd-options=\"\" href=\"/link/source?package=utils&amp;version=3.3.2\">source</a></code>.  If the package has a\n    declared encoding, that takes preference."
			}]
		}, {
			"name": "data",
			"args": [{
				"name": "...",
				"description": "literal character strings or names."
			}, {
				"name": "list",
				"description": "a character vector."
			}, {
				"name": "package",
				"description": "a character vector giving the package(s) to look\n    in for data sets, or <code>NULL</code>.\n\n    By default, all packages in the search path are used, then\n    the &#x2018;<span class=\"file\">data</span>&#x2019; subdirectory (if present) of the current working\n    directory."
			}, {
				"name": "lib.loc",
				"description": "a character vector of directory names of <span style=\"R\">R</span> libraries,\n    or <code>NULL</code>.  The default value of <code>NULL</code> corresponds to all\n    libraries currently known."
			}, {
				"name": "verbose",
				"description": "a logical.  If <code>TRUE</code>, additional diagnostics are\n    printed."
			}, {
				"name": "envir",
				"description": "the <a rd-options=\"\" href=\"/link/environment?package=utils&amp;version=3.3.2\">environment</a> where the data should be loaded."
			}]
		}, {
			"name": "compareVersion",
			"args": [{
				"name": "a, b",
				"description": "Character strings representing package version numbers."
			}]
		}, {
			"name": "contrib.url",
			"args": [{
				"name": "repos",
				"description": "character vector, the base URL(s) of the repositories\n    to use."
			}, {
				"name": "type",
				"description": "character string, indicating which type of packages: see\n    <code><a rd-options=\"\" href=\"/link/install.packages?package=utils&amp;version=3.3.2\">install.packages</a></code>."
			}]
		}, {
			"name": "debugger",
			"args": [{
				"name": "dumpto",
				"description": "a character string. The name of the object or file to\n    dump to."
			}, {
				"name": "to.file",
				"description": "logical. Should the dump be to an <span style=\"R\">R</span> object or to a\n    file?"
			}, {
				"name": "dump",
				"description": "An <span style=\"R\">R</span> dump object created by <code>dump.frames</code>."
			}]
		}, {
			"name": "count.fields",
			"args": [{
				"name": "file",
				"description": "a character string naming an ASCII data file, or a\n    <code><a rd-options=\"\" href=\"/link/connection?package=utils&amp;version=3.3.2\">connection</a></code>, which will be opened if necessary,\n    and if so closed at the end of the function call."
			}, {
				"name": "sep",
				"description": "the field separator character.  Values on each line of the\n    file are separated by this character.  By default, arbitrary amounts\n    of whitespace can separate fields."
			}, {
				"name": "quote",
				"description": "the set of quoting characters"
			}, {
				"name": "skip",
				"description": "the number of lines of the data file to skip before\n    beginning to read data."
			}, {
				"name": "blank.lines.skip",
				"description": "logical: if <code>TRUE</code> blank lines in the\n    input are ignored."
			}, {
				"name": "comment.char",
				"description": "character: a character vector of length one\n    containing a single character or an empty string."
			}]
		}, {
			"name": "combn",
			"args": [{
				"name": "x",
				"description": "vector source for combinations, or integer <code>n</code> for\n    <code>x <- <a=\"\" rd-options=\"\" href=\"seq_len\">seq_len(n)</-></code>."
			}, {
				"name": "m",
				"description": "number of elements to choose."
			}, {
				"name": "FUN",
				"description": "function to be applied to each combination; default\n    <code>NULL</code> means the identity, i.e., to return the combination\n    (vector of length <code>m</code>)."
			}, {
				"name": "simplify",
				"description": "logical indicating if the result should be simplified\n    to an <code><a rd-options=\"\" href=\"/link/array?package=utils&amp;version=3.3.2\">array</a></code> (typically a <code><a rd-options=\"\" href=\"/link/matrix?package=utils&amp;version=3.3.2\">matrix</a></code>); if\n    FALSE, the function returns a <code><a rd-options=\"\" href=\"/link/list?package=utils&amp;version=3.3.2\">list</a></code>.  Note that when\n    <code>simplify = TRUE</code> as by default, the dimension of the result is\n    simply determined from <code>FUN(<var>1st combination</var>)</code> (for\n    efficiency reasons).  This will badly fail if <code>FUN(u)</code> is not of\n    constant length."
			}, {
				"name": "...",
				"description": "optionally, further arguments to <code>FUN</code>."
			}]
		}, {
			"name": "dataentry",
			"args": [{
				"name": "...",
				"description": "A list of variables: currently these should be numeric or\n    character vectors or list containing such vectors."
			}, {
				"name": "Modes",
				"description": "The modes to be used for the variables."
			}, {
				"name": "Names",
				"description": "The names to be used for the variables."
			}, {
				"name": "data",
				"description": "A list of numeric and/or character vectors."
			}, {
				"name": "modes",
				"description": "A list of length up to that of <code>data</code> giving the\n    modes of (some of) the variables. <code>list()</code> is allowed."
			}]
		}, {
			"name": "download.file",
			"args": [{
				"name": "url",
				"description": "A character string naming the URL of a resource to be\n    downloaded."
			}, {
				"name": "destfile",
				"description": "A character string with the name where the downloaded\n    file is saved.  Tilde-expansion is performed."
			}, {
				"name": "method",
				"description": "Method to be used for downloading files.  Current\n    download methods are <code>&quot;internal&quot;</code>, <code>&quot;wininet&quot;</code> (Windows\n    only) <code>&quot;libcurl&quot;</code>, <code>&quot;wget&quot;</code> and <code>&quot;curl&quot;</code>, and there\n    is a value <code>&quot;auto&quot;</code>: see &#x2018;Details&#x2019; and &#x2018;Note&#x2019;.\n\n    The method can also be set through the option\n    <code>&quot;download.file.method&quot;</code>: see <code><a rd-options=\"\" href=\"/link/options?package=utils&amp;version=3.3.2\">options</a>()</code>."
			}, {
				"name": "quiet",
				"description": "If <code>TRUE</code>, suppress status messages (if any), and\n    the progress bar."
			}, {
				"name": "mode",
				"description": "character.  The mode with which to write the file.  Useful\n    values are <code>&quot;w&quot;</code>, <code>&quot;wb&quot;</code> (binary), <code>&quot;a&quot;</code> (append) and\n    <code>&quot;ab&quot;</code>.  Only used for the <code>&quot;internal&quot;</code> method.\n windows\n    (See also &#x2018;Details&#x2019;.)"
			}, {
				"name": "cacheOK",
				"description": "logical.  Is a server-side cached value acceptable?"
			}, {
				"name": "extra",
				"description": "character vector of additional command-line arguments for\n    the <code>&quot;wget&quot;</code> and <code>&quot;curl&quot;</code> methods."
			}]
		}, {
			"name": "create.post",
			"args": [{
				"name": "instructions",
				"description": "Character vector of instructions to put at the top\n    of the template email."
			}, {
				"name": "description",
				"description": "Character string: a description to be incorporated\n    into messages."
			}, {
				"name": "subject",
				"description": "Subject of the email. Optional except for the\n    <code>&quot;mailx&quot;</code> method."
			}, {
				"name": "method",
				"description": "Submission method, one of <code>&quot;none&quot;</code>, <code>&quot;mailto&quot;</code>,\n    <code>&quot;gnudoit&quot;</code>, <code>&quot;ess&quot;</code> or (Unix only) <code>&quot;mailx&quot;</code>.\n    See &#x2018;Details&#x2019;."
			}, {
				"name": "address",
				"description": "Recipient&apos;s email address, where applicable: for\n    package bug reports sent by email this defaults to the address of\n    the package maintainer (the first if more than one is listed)."
			}, {
				"name": "ccaddress",
				"description": "Optional email address for copies with the\n    <code>&quot;mailx&quot;</code> and <code>&quot;mailto&quot;</code> methods.\n    Use <code>ccaddress = &quot;&quot;</code> for no copy."
			}, {
				"name": "filename",
				"description": "Filename to use for setting up the email (or storing it when\n    method is <code>&quot;none&quot;</code> or sending mail fails)."
			}, {
				"name": "info",
				"description": "character vector of information to include in the template\n    email below the &#x2018;please do not edit the information below&#x2019; line."
			}]
		}, {
			"name": "edit",
			"args": [{
				"name": "name",
				"description": "a named object that you want to edit. If name is missing\n    then the file specified by <code>file</code> is opened for editing."
			}, {
				"name": "file",
				"description": "a string naming the file to write the edited version to."
			}, {
				"name": "title",
				"description": "a display name for the object being edited."
			}, {
				"name": "editor",
				"description": "usually a string naming the text editor you want to use.\n    On Unix the default is set from the environment variables\n    <span class=\"env\">EDITOR</span> or <span class=\"env\">VISUAL</span> if either is set, otherwise <code>vi</code>\n    is used.  On Windows it defaults to <code>&quot;internal&quot;</code>, the script\n    editor.  On the macOS GUI the argument is ignored and the document\n    editor is always used.\n\n    <code>editor</code> can also be a function, in which case it is called\n    with the arguments <code>name</code>, <code>file</code>, and <code>title</code>.  Note\n    that such a function will need to independently implement all\n    desired functionality."
			}, {
				"name": "...",
				"description": "further arguments to be passed to or from methods."
			}]
		}, {
			"name": "format",
			"args": [{
				"name": "x",
				"description": "a character vector of list items."
			}, {
				"name": "label",
				"description": "a character string used for labelling the items."
			}, {
				"name": "offset",
				"description": "a non-negative integer giving the offset (indentation)\n    of the list."
			}, {
				"name": "width",
				"description": "a positive integer giving the target column for wrapping\n    lines in the output."
			}, {
				"name": "type",
				"description": "a character string specifying the &#x2018;type&#x2019; of the\n    labels in the ordered list.  If <code>&quot;arabic&quot;</code> (default), arabic\n    numerals are used.  For <code>&quot;Alph&quot;</code> or <code>&quot;alph&quot;</code>, single upper\n    or lower case letters are employed (in this case, the number of the\n    last item must not exceed 26.  Finally, for <code>&quot;Roman&quot;</code> or\n    <code>&quot;roman&quot;</code>, the labels are given as upper or lower case roman\n    numerals (with the number of the last item maximally 3899).\n    <code>type</code> can be given as a unique abbreviation of the above, or\n    as one of the <acronym>HTML</acronym> style tokens <code>&quot;1&quot;</code> (arabic),\n    <code>&quot;A&quot;</code>/<code>&quot;a&quot;</code> (alphabetic), or <code>&quot;I&quot;</code>/<code>&quot;i&quot;</code>\n    (roman), respectively."
			}, {
				"name": "start",
				"description": "a positive integer specifying the starting number of the\n    first item in an ordered list."
			}]
		}, {
			"name": "download.packages",
			"args": [{
				"name": "pkgs",
				"description": "character vector of the names of packages whose latest available\n    versions should be downloaded from the repositories."
			}, {
				"name": "destdir",
				"description": "directory where downloaded packages are to be stored."
			}, {
				"name": "available",
				"description": "an object as returned by <code><a rd-options=\"\" href=\"/link/available.packages?package=utils&amp;version=3.3.2\">available.packages</a></code>\n    listing packages available at the repositories, or <code>NULL</code> which\n    makes an internal call to <code>available.packages</code>."
			}, {
				"name": "repos",
				"description": "character vector, the base URL(s) of the repositories\n    to use, i.e., the URL of the CRAN master such as\n    <code>&quot;https://cran.r-project.org&quot;</code> or its Statlib mirror,\n    <code>&quot;http://lib.stat.cmu.edu/R/CRAN&quot;</code>."
			}, {
				"name": "contriburl",
				"description": "URL(s) of the contrib sections of the\n    repositories.  Use this argument only if your repository mirror is\n    incomplete, e.g., because you burned only the &#x2018;<span class=\"file\">contrib</span>&#x2019; section on a\n    CD.  Overrides argument <code>repos</code>."
			}, {
				"name": "method",
				"description": "Download method, see <code><a rd-options=\"\" href=\"/link/download.file?package=utils&amp;version=3.3.2\">download.file</a></code>."
			}, {
				"name": "type",
				"description": "character string, indicate which type of packages: see\n    <code><a rd-options=\"\" href=\"/link/install.packages?package=utils&amp;version=3.3.2\">install.packages</a></code>."
			}, {
				"name": "...",
				"description": "additional arguments to be passed to\n    <code><a rd-options=\"\" href=\"/link/download.file?package=utils&amp;version=3.3.2\">download.file</a></code>."
			}]
		}, {
			"name": "example",
			"args": [{
				"name": "topic",
				"description": "name or literal character string: the online\n    <code><a rd-options=\"\" href=\"/link/help?package=utils&amp;version=3.3.2\">help</a></code> topic the examples of which should be run."
			}, {
				"name": "package",
				"description": "a character vector giving the package names to look\n    into for the topic, or <code>NULL</code> (the default), when all packages on\n    the <a rd-options=\"\" href=\"/link/search?package=utils&amp;version=3.3.2\">search</a> path are used."
			}, {
				"name": "lib.loc",
				"description": "a character vector of directory names of <span style=\"R\">R</span> libraries,\n    or <code>NULL</code>.  The default value of <code>NULL</code> corresponds to all\n    libraries currently known.  If the default is used, the loaded\n    packages are searched before the libraries."
			}, {
				"name": "character.only",
				"description": "a logical indicating whether <code>topic</code> can be\n    assumed to be a character string."
			}, {
				"name": "give.lines",
				"description": "logical: if true, the <em>lines</em> of the example\n    source code are returned as a character vector."
			}, {
				"name": "local",
				"description": "logical: if <code>TRUE</code> evaluate locally, if <code>FALSE</code>\n    evaluate in the workspace."
			}, {
				"name": "echo",
				"description": "logical;  if <code>TRUE</code>, show the <span style=\"R\">R</span> input when sourcing."
			}, {
				"name": "verbose",
				"description": "logical;  if <code>TRUE</code>, show even more when running\n    example code."
			}, {
				"name": "setRNG",
				"description": "logical or expression;  if not <code>FALSE</code>, the random\n    number generator state is saved, then initialized to a specified state,\n    the example is run and the (saved) state is restored.\n    <code>setRNG = TRUE</code> sets the same state as\n    <code>R CMD <a rd-options=\"\" href=\"/link/check?package=utils&amp;version=3.3.2\">check</a></code> does for\n    running a package&apos;s examples.  This is currently equivalent to\n    <code>setRNG = {RNGkind(&quot;default&quot;, &quot;default&quot;); set.seed(1)}</code>."
			}, {
				"name": "ask",
				"description": "logical (or <code>&quot;default&quot;</code>) indicating if\n    <code><a rd-options=\"\" href=\"/link/devAskNewPage?package=utils&amp;version=3.3.2\">devAskNewPage</a>(ask = TRUE)</code> should be called\n    before graphical output happens from the example code.  The value\n    <code>&quot;default&quot;</code> (the factory-fresh default) means to ask if\n    <code>echo == TRUE</code> and the graphics device appears to be\n    interactive.  This parameter applies both to any currently opened\n    device and to any devices opened by the example code."
			}, {
				"name": "prompt.prefix",
				"description": "character; prefixes the prompt to be used if\n    <code>echo = TRUE</code>."
			}, {
				"name": "run.dontrun",
				"description": "logical indicating that <code>\\dontrun</code>\n    should be ignored."
			}, {
				"name": "run.donttest",
				"description": "logical indicating that <code>\\donttest</code>\n    should be ignored."
			}]
		}, {
			"name": "file_test",
			"args": [{
				"name": "op",
				"description": "a character string specifying the test to be performed.\n    Unary tests (only <code>x</code> is used) are <code>&quot;-f&quot;</code> (existence and\n    not being a directory), <code>&quot;-d&quot;</code> (existence and directory) and\n    <code>&quot;-x&quot;</code> (executable as a file or searchable as a directory).\n    Binary tests are <code>&quot;-nt&quot;</code> (strictly newer than, using the modification\n    dates) and <code>&quot;-ot&quot;</code> (strictly older than): in both cases the\n    test is false unless both files exist."
			}, {
				"name": "x, y",
				"description": "character vectors giving file paths."
			}]
		}, {
			"name": "file.edit",
			"args": [{
				"name": "...",
				"description": "one or more character vectors containing the names of the\n    files to be displayed.  These will be tilde-expanded: see\n    <code><a rd-options=\"\" href=\"/link/path.expand?package=utils&amp;version=3.3.2\">path.expand</a></code>."
			}, {
				"name": "title",
				"description": "the title to use in the editor; defaults to the filename."
			}, {
				"name": "editor",
				"description": "the text editor to be used.  See &#x2018;Details&#x2019;."
			}, {
				"name": "fileEncoding",
				"description": "the encoding to assume for the file: the default\n    is to assume the native encoding.  See the &#x2018;Encoding&#x2019; section\n    of the help for <code><a rd-options=\"\" href=\"/link/file?package=utils&amp;version=3.3.2\">file</a></code>."
			}]
		}, {
			"name": "findLineNum",
			"args": [{
				"name": "srcfile",
				"description": "The name of the file containing the source code."
			}, {
				"name": "line",
				"description": "The line number within the file.  See Details for an\n    alternate way to specify this."
			}, {
				"name": "nameonly",
				"description": "If <code>TRUE</code> (the default), we require only a match\n    to <code>basename(srcfile)</code>, not to the full path."
			}, {
				"name": "envir",
				"description": "Where do we start looking for function objects?"
			}, {
				"name": "lastenv",
				"description": "Where do we stop?  See the Details."
			}, {
				"name": "verbose",
				"description": "Should we print information on where breakpoints were set?"
			}, {
				"name": "tracer",
				"description": "An optional <code>tracer</code> function to pass to\n    <code><a rd-options=\"\" href=\"/link/trace?package=utils&amp;version=3.3.2\">trace</a></code>.  By default, a call to <code><a rd-options=\"\" href=\"/link/browser?package=utils&amp;version=3.3.2\">browser</a></code>\n    is inserted."
			}, {
				"name": "print",
				"description": "The <code>print</code> argument to pass to <code><a rd-options=\"\" href=\"/link/trace?package=utils&amp;version=3.3.2\">trace</a></code>."
			}, {
				"name": "clear",
				"description": "If <code>TRUE</code>, call <code><a rd-options=\"\" href=\"/link/untrace?package=utils&amp;version=3.3.2\">untrace</a></code> rather than\n    <code><a rd-options=\"\" href=\"/link/trace?package=utils&amp;version=3.3.2\">trace</a></code>."
			}, {
				"name": "...",
				"description": "Additional arguments to pass to <code><a rd-options=\"\" href=\"/link/trace?package=utils&amp;version=3.3.2\">trace</a></code>."
			}]
		}, {
			"name": "fix",
			"args": [{
				"name": "x",
				"description": "the name of an <span style=\"R\">R</span> object, as a name or a character string."
			}, {
				"name": "...",
				"description": "arguments to pass to editor: see <code><a rd-options=\"\" href=\"/link/edit?package=utils&amp;version=3.3.2\">edit</a></code>."
			}]
		}, {
			"name": "flush.console",
			"args": []
		}, {
			"name": "edit.data.frame",
			"args": [{
				"name": "name",
				"description": "A data frame or (numeric, logical or character) matrix."
			}, {
				"name": "factor.mode",
				"description": "How to handle factors (as integers or using\n    character levels) in a data frame.  Can be abbreviated."
			}, {
				"name": "edit.row.names",
				"description": "logical. Show the row names (if they exist) be\n    displayed as a separate editable column?  It is an error to ask for\n    this on a matrix with <code>NULL</code> row names."
			}, {
				"name": "...",
				"description": "further arguments passed to or from other methods."
			}]
		}, {
			"name": "glob2rx",
			"args": [{
				"name": "pattern",
				"description": "character vector"
			}, {
				"name": "trim.head",
				"description": "logical specifying if leading <code>&quot;^.*&quot;</code> should be\n    trimmed from the result."
			}, {
				"name": "trim.tail",
				"description": "logical specifying if trailing <code>&quot;.*$&quot;</code> should be\n    trimmed from the result."
			}]
		}, {
			"name": "getParseData",
			"args": [{
				"name": "x",
				"description": "an expression returned from <code><a rd-options=\"\" href=\"/link/parse?package=utils&amp;version=3.3.2\">parse</a></code>, or a function or other\n    object with source reference information"
			}, {
				"name": "includeText",
				"description": "logical; whether to include the text of parsed items in the result"
			}, {
				"name": "parseData",
				"description": "a data frame returned from <code>getParseData</code>"
			}, {
				"name": "id",
				"description": "a vector of item identifiers whose text is to be retrieved"
			}]
		}, {
			"name": "getAnywhere",
			"args": [{
				"name": "x",
				"description": "a character string or name."
			}]
		}, {
			"name": "head",
			"args": [{
				"name": "x",
				"description": "an object"
			}, {
				"name": "n",
				"description": "a single integer. If positive, size for the resulting\n    object: number of elements for a vector (including lists), rows for\n    a matrix or data frame or lines for a function. If negative, all but\n    the <code>n</code> last/first number of elements of <code>x</code>."
			}, {
				"name": "addrownums",
				"description": "if there are no row names, create them from the row\n    numbers."
			}, {
				"name": "...",
				"description": "arguments to be passed to or from other methods."
			}]
		}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
			"name": "relist",
			"args": [{
				"name": "flesh",
				"description": "a vector to be relisted"
			}, {
				"name": "skeleton",
				"description": "a list, the structure of which determines the structure\n    of the result"
			}, {
				"name": "x",
				"description": "an <span style=\"R\">R</span> object, typically a list (or vector)."
			}, {
				"name": "recursive",
				"description": "logical.  Should unlisting be applied to list\n    components of <code>x</code>?"
			}, {
				"name": "use.names",
				"description": "logical.  Should names be preserved?"
			}]
		}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
			"name": "SweaveSyntConv",
			"args": [{
				"name": "file",
				"description": "Name of Sweave source file."
			}, {
				"name": "syntax",
				"description": "An object of class <code>SweaveSyntax</code> or a character\n    string with its name giving the target syntax to which the file is\n    converted."
			}, {
				"name": "output",
				"description": "Name of output file, default is to remove the extension\n    from the input file and to add the default extension of the target\n    syntax. Any directory names in <code>file</code> are also removed such\n    that the output is created in the current working directory."
			}]
		}, {}, {}, {
			"name": "tar",
			"args": [{
				"name": "tarfile",
				"description": "The pathname of the tar file: tilde expansion (see\n    <code><a rd-options=\"\" href=\"/link/path.expand?package=utils&amp;version=3.3.2\">path.expand</a></code>) will be performed.  Alternatively, a\n    <a rd-options=\"\" href=\"/link/connection?package=utils&amp;version=3.3.2\">connection</a> that can be used for binary writes."
			}, {
				"name": "files",
				"description": "A character vector of filepaths to be archived:\n    the default is to archive all files under the current directory."
			}, {
				"name": "compression",
				"description": "character string giving the type of compression to\n    be used (default none).  Can be abbreviated."
			}, {
				"name": "compression_level",
				"description": "integer: the level of compression.  Only used\n    for the internal method."
			}, {
				"name": "tar",
				"description": "character string: the path to the command to be used.  If\n    the command itself contains spaces it needs to be quoted (e.g., by\n    <code><a rd-options=\"\" href=\"/link/shQuote?package=utils&amp;version=3.3.2\">shQuote</a></code>) -- but argument <code>tar</code> can also contain\n    flags separated from the command by spaces."
			}, {
				"name": "extra_flags",
				"description": "any extra flags for an external <code>tar</code>."
			}]
		}, {
			"name": "vignette",
			"args": [{
				"name": "topic",
				"description": "a character string giving the (base) name of the vignette\n    to view.  If omitted, all vignettes from all installed packages are\n    listed."
			}, {
				"name": "package",
				"description": "a character vector with the names of packages to\n    search through, or <code>NULL</code> in which &#x2018;all&#x2019; packages (as\n    defined by argument <code>all</code>) are searched."
			}, {
				"name": "lib.loc",
				"description": "a character vector of directory names of <span style=\"R\">R</span> libraries,\n    or <code>NULL</code>.  The default value of <code>NULL</code> corresponds to all\n    libraries currently known."
			}, {
				"name": "all",
				"description": "logical; if <code>TRUE</code> search all available packages in\n    the library trees specified by <code>lib.loc</code>, and if <code>FALSE</code>,\n    search only attached packages."
			}, {
				"name": "x, name",
				"description": "object of class <code>vignette</code>."
			}, {
				"name": "...",
				"description": "ignored by the <code>print</code> method, passed on to\n    <code><a rd-options=\"\" href=\"/link/file.edit?package=utils&amp;version=3.3.2\">file.edit</a></code> by the <code>edit</code> method."
			}]
		}, {
			"name": "write.table",
			"args": [{
				"name": "x",
				"description": "the object to be written, preferably a matrix or data frame.\n    If not, it is attempted to coerce <code>x</code> to a data frame."
			}, {
				"name": "file",
				"description": "either a character string naming a file or a <a rd-options=\"\" href=\"/link/connection?package=utils&amp;version=3.3.2\">connection</a>\n    open for writing.  <code>&quot;&quot;</code> indicates output to the console."
			}, {
				"name": "append",
				"description": "logical. Only relevant if <code>file</code> is a character\n    string.  If <code>TRUE</code>, the output is appended to the\n    file.  If <code>FALSE</code>, any existing file of the name is destroyed."
			}, {
				"name": "quote",
				"description": "a logical value (<code>TRUE</code> or <code>FALSE</code>) or a\n    numeric vector.  If <code>TRUE</code>, any character or factor columns\n    will be surrounded by double quotes.  If a numeric vector, its\n    elements are taken as the indices of columns to quote.  In both\n    cases, row and column names are quoted if they are written.  If\n    <code>FALSE</code>, nothing is quoted."
			}, {
				"name": "sep",
				"description": "the field separator string.  Values within each row of\n    <code>x</code> are separated by this string."
			}, {
				"name": "eol",
				"description": "the character(s) to print at the end of each line (row).\n    For example, <code>eol = &quot;\\r\\n&quot;</code> will produce Windows&apos; line endings on\n    a Unix-alike OS, and <code>eol = &quot;\\r&quot;</code> will produce files as expected by\n    Excel:mac 2004."
			}, {
				"name": "na",
				"description": "the string to use for missing values in the data."
			}, {
				"name": "dec",
				"description": "the string to use for decimal points in numeric or complex\n    columns: must be a single character."
			}, {
				"name": "row.names",
				"description": "either a logical value indicating whether the row\n    names of <code>x</code> are to be written along with <code>x</code>, or a\n    character vector of row names to be written."
			}, {
				"name": "col.names",
				"description": "either a logical value indicating whether the column\n    names of <code>x</code> are to be written along with <code>x</code>, or a\n    character vector of column names to be written.  See the section on\n    &#x2018;CSV files&#x2019; for the meaning of <code>col.names = NA</code>."
			}, {
				"name": "qmethod",
				"description": "a character string specifying how to deal with embedded\n    double quote characters when quoting strings.  Must be one of\n    <code>&quot;escape&quot;</code> (default for <code>write.table</code>), in which case the\n    quote character is escaped in C style by a backslash, or\n    <code>&quot;double&quot;</code> (default for <code>write.csv</code> and\n    <code>write.csv2</code>), in which case it is doubled.  You can specify\n    just the initial letter."
			}, {
				"name": "fileEncoding",
				"description": "character string: if non-empty declares the\n    encoding to be used on a file (not a connection) so the character data can\n    be re-encoded as they are written.  See <code><a rd-options=\"\" href=\"/link/file?package=utils&amp;version=3.3.2\">file</a></code>."
			}, {
				"name": "...",
				"description": "arguments to <code>write.table</code>: <code>append</code>,\n    <code>col.names</code>, <code>sep</code>, <code>dec</code> and <code>qmethod</code>\n    cannot be altered."
			}]
		}]
	}
}, {
	"dynamichazard": {
		"functions": [{
			"name": "plot.fahrmeier_94_SpaceErrors",
			"args": [{
				"name": "x",
				"description": "Result of <code><a rd-options=\"=residuals.fahrmeier_94\" href=\"/link/residuals?package=dynamichazard&amp;version=0.2.0&amp;to=%3Dresiduals.fahrmeier_94\">residuals</a></code> for state space errors"
			}, {
				"name": "mod",
				"description": "The <code><a rd-options=\"\" href=\"/link/ddhazard?package=dynamichazard&amp;version=0.2.0\">ddhazard</a></code> result used in the <code><a rd-options=\"=residuals.fahrmeier_94\" href=\"/link/residuals?package=dynamichazard&amp;version=0.2.0&amp;to=%3Dresiduals.fahrmeier_94\">residuals</a></code> call"
			}, {
				"name": "cov_index",
				"description": "The indices of state vector errors to plot. Default is to use all which is likely what you want if the state space errors are standardized"
			}, {
				"name": "t_index",
				"description": "The bin indices to plot. Default is to use all bins"
			}, {
				"name": "p_cex",
				"description": "<code>cex</code> argument for the points"
			}, {
				"name": "pch, ylab, xlab",
				"description": "Arguments to override defaults set in the function"
			}, {
				"name": "x_tick_loc, x_tick_mark",
				"description": "<code>at</code> and <code>labels</code> arguments passed to <code>axis</code>"
			}, {
				"name": "...",
				"description": "Arguments passed to plot"
			}]
		}, {
			"name": "static_glm",
			"args": [{
				"name": "formula",
				"description": "<code><a rd-options=\"survival\" href=\"/link/coxph?package=dynamichazard&amp;version=0.2.0&amp;to=survival\">coxph</a></code> like formula with <code><a rd-options=\"survival\" href=\"/link/Surv?package=dynamichazard&amp;version=0.2.0&amp;to=survival\">Surv</a>(tstart, tstop, event)</code> on the left hand site of <code>~</code>"
			}, {
				"name": "data",
				"description": "Data frame or environment containing the outcome and co-variates"
			}, {
				"name": "by",
				"description": "Length of each intervals that cases are binned into"
			}, {
				"name": "max_T",
				"description": "The end time of the last bin"
			}, {
				"name": "id",
				"description": "The id for each row in <code>data</code>. This is important when variables are time varying"
			}, {
				"name": "family",
				"description": "<code>&quot;logit&quot;</code> or <code>&quot;exponential&quot;</code> for the static equivalent model of <code><a rd-options=\"\" href=\"/link/ddhazard?package=dynamichazard&amp;version=0.2.0\">ddhazard</a></code>"
			}, {
				"name": "model",
				"description": "<code>TRUE</code> if you want to save the design matrix used in <code><a rd-options=\"\" href=\"/link/glm?package=dynamichazard&amp;version=0.2.0\">glm</a></code>"
			}, {
				"name": "weights",
				"description": "weights if a skewed sample or similar is used"
			}, {
				"name": "risk_obj",
				"description": "A pre-computed result from a <code><a rd-options=\"\" href=\"/link/get_risk_obj?package=dynamichazard&amp;version=0.2.0\">get_risk_obj</a></code>. Will be used to skip some computations"
			}, {
				"name": "...",
				"description": "arguments passed to <code><a rd-options=\"\" href=\"/link/glm?package=dynamichazard&amp;version=0.2.0\">glm</a></code>"
			}]
		}, {
			"name": "ddhazard_app",
			"args": []
		}, {
			"name": "print.ddhazard_boot",
			"args": [{
				"name": "x",
				"description": "Returned object from a <code><a rd-options=\"\" href=\"/link/ddhazard_boot?package=dynamichazard&amp;version=0.2.0\">ddhazard_boot</a></code> call"
			}, {
				"name": "digits",
				"description": "The number of digits to be printed in the summary statistics"
			}, {
				"name": "index",
				"description": "Indices indicating for which elements of the bootstrap output summary statistics are required"
			}, {
				"name": "...",
				"description": "Not used"
			}]
		}, {
			"name": "get_survival_case_weights_and_data",
			"args": [{
				"name": "formula",
				"description": "<code><a rd-options=\"survival\" href=\"/link/coxph?package=dynamichazard&amp;version=0.2.0&amp;to=survival\">coxph</a></code> like formula with <code><a rd-options=\"survival\" href=\"/link/Surv?package=dynamichazard&amp;version=0.2.0&amp;to=survival\">Surv</a>(tstart, tstop, event)</code> on the left hand site of <code>~</code>"
			}, {
				"name": "data",
				"description": "Data frame or environment containing the outcome and co-variates"
			}, {
				"name": "by",
				"description": "Length of each intervals that cases are binned into"
			}, {
				"name": "max_T",
				"description": "The end time of the last bin"
			}, {
				"name": "id",
				"description": "The id for each row in <code>data</code>. This is important when variables are time varying"
			}, {
				"name": "init_weights",
				"description": "Weights for the rows <code>data</code>. Useful with skewed sampling and will be used when computing the final weights"
			}, {
				"name": "risk_obj",
				"description": "A pre-computed result from a <code><a rd-options=\"\" href=\"/link/get_risk_obj?package=dynamichazard&amp;version=0.2.0\">get_risk_obj</a></code>. Will be used to skip some computations"
			}, {
				"name": "use_weights",
				"description": "<code>TRUE</code> if weights should be used. See details"
			}, {
				"name": "is_for_discrete_model",
				"description": "<code>TRUE</code> if the model is for a discrete hazard model like the logistic model. Affects how deaths are included when individuals have time varying coefficients"
			}, {
				"name": "c_outcome, c_weights, c_end_t",
				"description": "Alternative names to use for the added columns described in the return section. Useful if you already have a column named <code>Y</code>, <code>t</code> or <code>weights</code>"
			}]
		}, {
			"name": "ddhazard_boot",
			"args": [{
				"name": "ddhazard_fit",
				"description": "Returned object from a <code><a rd-options=\"\" href=\"/link/ddhazard?package=dynamichazard&amp;version=0.2.0\">ddhazard</a></code> call"
			}, {
				"name": "strata",
				"description": "Strata to sample within. These need to be on an individual by individual basis and not rows in the design matrix"
			}, {
				"name": "unique_id",
				"description": "Unique ids where entries match entries of <code>strata</code>"
			}, {
				"name": "R",
				"description": "Number of bootstrap estimates"
			}, {
				"name": "do_stratify_with_event",
				"description": "<code>TRUE</code> if sampling should be by strata of whether the individual has an event. An interaction factor will be made if <code>strata</code> is provided"
			}, {
				"name": "do_sample_weights",
				"description": "<code>TRUE</code> if weights should be sample instead of individuals"
			}, {
				"name": "print_errors",
				"description": "<code>TRUE</code> if errors should be printed when estimations fails"
			}]
		}, {
			"name": "ddFixed",
			"args": [{
				"name": "object",
				"description": "Expression that would be used in formula. E.g. <code>x</code> or <code>poly(x, degree = 3)</code>"
			}]
		}, {
			"name": "plot.fahrmeier_94",
			"args": [{
				"name": "x",
				"description": "Result of <code><a rd-options=\"\" href=\"/link/ddhazard?package=dynamichazard&amp;version=0.2.0\">ddhazard</a></code> call"
			}, {
				"name": "xlab, ylab, ylim, col",
				"description": "Arguments to override defaults set in the function"
			}, {
				"name": "type",
				"description": "Type of plot. Currently, only <code>&quot;cov&quot;</code> is available for plot of the state space parameters"
			}, {
				"name": "plot_type",
				"description": "The <code>type</code> argument passed to <code>plot</code>"
			}, {
				"name": "cov_index",
				"description": "The index (indices) of the state space parameter(s) to plot"
			}, {
				"name": "add",
				"description": "<code>FALSE</code> if you want to make a new plot"
			}, {
				"name": "do_alter_mfcol",
				"description": "<code>TRUE</code> if the function should alter <code>par(mfcol)</code> in case that <code>cov_index</code> has more than one element"
			}, {
				"name": "ddhazard_boot",
				"description": "Object from a <code><a rd-options=\"\" href=\"/link/ddhazard_boot?package=dynamichazard&amp;version=0.2.0\">ddhazard_boot</a></code> call which confidence bounds will be based on and where bootstrap samples will be printed with a transparent color"
			}, {
				"name": "...",
				"description": "Arguments passed to <code>plot</code> or <code>lines</code> depending on the value of <code>add</code>"
			}]
		}, {
			"name": "print.fahrmeier_94",
			"args": [{
				"name": "x",
				"description": "Object returned from <code><a rd-options=\"\" href=\"/link/ddhazard?package=dynamichazard&amp;version=0.2.0\">ddhazard</a></code>"
			}, {
				"name": "var_indices",
				"description": "Variable indices to print for time-varying effects"
			}, {
				"name": "time_indices",
				"description": "Time intervals to print for time-varying effects"
			}, {
				"name": "digits",
				"description": "Number of digits to print"
			}, {
				"name": "...",
				"description": "Not used"
			}]
		}]
	}
}, {
	"lrmest": {
		"functions": [{
			"name": "lrmest-package",
			"args": []
		}, {
			"name": "mixe",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a rd-options=\"\" href=\"/link/formula?package=lrmest&amp;version=3.0\">formula</a></code>."
			}, {
				"name": "r",
				"description": "is a $j$ by $1$ matrix of linear restriction, $r = R\\beta + \\delta + \\nu$. Values for <code>r</code> should be given as either a <code><a rd-options=\"\" href=\"/link/vector?package=lrmest&amp;version=3.0\">vector</a></code> or a <code><a rd-options=\"\" href=\"/link/matrix?package=lrmest&amp;version=3.0\">matrix</a></code>. See &#x2018;Examples&#x2019;."
			}, {
				"name": "R",
				"description": "is a $j$ by $p$ of full row rank $j \\le p$ matrix of linear restriction, $r = R\\beta + \\delta + \\nu$. Values for <code>R</code> should be given as either a <code>vector</code> or a <code>matrix</code>. See &#x2018;Examples&#x2019;."
			}, {
				"name": "dpn",
				"description": "dispersion matrix of vector of disturbances of linear restricted model, $r = R\\beta + \\delta + \\nu$. Values for <code>dpn</code> should be given as either a <code>vector</code> (only the diagonal elements) or a <code>matrix</code>. See &#x2018;Examples&#x2019;."
			}, {
				"name": "delt",
				"description": "values of $E(r) - R\\beta$ and that should be given as either a <code>vector</code> or a <code>matrix</code>. See &#x2018;Examples&#x2019;."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a rd-options=\"\" href=\"/link/na.action?package=lrmest&amp;version=3.0\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "liu",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "d",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Examples</squote>."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "ogrls",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a rd-options=\"\" href=\"/link/formula?package=lrmest&amp;version=3.0\">formula</a></code>."
			}, {
				"name": "r",
				"description": "is a $j$ by $1$ matrix of linear restriction, $r = R\\beta + \\delta + \\nu$. Values for <code>r</code> should be given as either a <code><a rd-options=\"\" href=\"/link/vector?package=lrmest&amp;version=3.0\">vector</a></code> or a <code><a rd-options=\"\" href=\"/link/matrix?package=lrmest&amp;version=3.0\">matrix</a></code>. See &#x2018;Examples&#x2019;."
			}, {
				"name": "R",
				"description": "is a $j$ by $p$ of full row rank $j \\le p$ matrix of linear restriction, $r = R\\beta + \\delta + \\nu$. Values for <code>R</code> should be given as either a <code>vector</code> or a <code>matrix</code>. See &#x2018;Examples&#x2019;."
			}, {
				"name": "delt",
				"description": "values of $E(r) - R\\beta$ and that should be given as either a <code>vector</code> or a <code>matrix</code>. See &#x2018;Examples&#x2019;."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a rd-options=\"\" href=\"/link/na.action?package=lrmest&amp;version=3.0\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "ogliu",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "d",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Example</squote>."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "ogrrre",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "r",
				"description": "is a $j$ by $1$ matrix of linear restriction, $r = R\\beta + \\delta + \\nu$. Values for <code>r</code> should be given as either a <code><a href=\"/link/vector?package=lrmest&amp;version=3.0\" rd-options=\"\">vector</a></code> or a <code><a href=\"/link/matrix?package=lrmest&amp;version=3.0\" rd-options=\"\">matrix</a></code>. See"
			}, {
				"name": "R",
				"description": "is a $j$ by $p$ of full row rank $j \\le p$ matrix of linear restriction, $r = R\\beta + \\delta + \\nu$. Values for <code>R</code> should be given as either a <code>vector</code> or a <code>matrix</code>. See <squote>Examples</squote>."
			}, {
				"name": "dpn",
				"description": "dispersion matrix of vector of disturbances of linear restricted model, $r = R\\beta + \\delta + \\nu$. Values for <code>dpn</code> should be given as either a <code>vector</code> (only the diagonal elements) or a <code>matrix</code>. See <squote>Examples</squote>"
			}, {
				"name": "delt",
				"description": "values of $E(r) - R\\beta$ and that should be given as either a <code>vector</code> or a <code>matrix</code>. See <squote>Examples</squote>."
			}, {
				"name": "k",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Example</squote>."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "lte3",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "k",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Examples</squote>."
			}, {
				"name": "d",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Examples</squote>."
			}, {
				"name": "press",
				"description": "if <dquote>press=TRUE</dquote> then all the PRESS values and its corresponding parameter values are returned. Otherwise all the scalar MSE values and its corresponding parameter values are returned."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "ogols",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a rd-options=\"\" href=\"/link/formula?package=lrmest&amp;version=3.0\">formula</a></code>."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a rd-options=\"\" href=\"/link/na.action?package=lrmest&amp;version=3.0\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "alte3",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "k",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Examples</squote>."
			}, {
				"name": "d",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Examples</squote>."
			}, {
				"name": "aa",
				"description": "this is a set of scalars belongs to real number system. Values for <dquote>aa</dquote> should be given as a <code><a href=\"/link/vector?package=lrmest&amp;version=3.0\" rd-options=\"\">vector</a></code>, format. See <squote>Details</squote>."
			}, {
				"name": "press",
				"description": "if <dquote>press=TRUE</dquote> then all the PRESS values and its corresponding parameter values are returned. Otherwise all the scalar MSE values and its corresponding parameter values are returned."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "alte1",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "k",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Examples</squote>."
			}, {
				"name": "d",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Examples</squote>."
			}, {
				"name": "aa",
				"description": "this is a set of scalars belongs to real number system. Values for <dquote>aa</dquote> should be given as a <code><a href=\"/link/vector?package=lrmest&amp;version=3.0\" rd-options=\"\">vector</a></code>, format. See <squote>Details</squote>."
			}, {
				"name": "press",
				"description": "if <dquote>press=TRUE</dquote> then all the PRESS values and its corresponding parameter values are returned. Otherwise all the scalar MSE values and its corresponding parameter values are returned."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "lte1",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "k",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Examples</squote>."
			}, {
				"name": "d",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Examples</squote>."
			}, {
				"name": "press",
				"description": "if <dquote>press=TRUE</dquote> then all the PRESS values and its corresponding parameter values are returned. Otherwise all the scalar MSE values and its corresponding parameter values are returned."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "ogalt1",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "k",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Example</squote>."
			}, {
				"name": "d",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Example</squote>."
			}, {
				"name": "aa",
				"description": "this is a set of scalars belongs to real number system. Values for <dquote>aa</dquote> should be given as a <code><a href=\"/link/vector?package=lrmest&amp;version=3.0\" rd-options=\"\">vector</a></code>, format. See <squote>Details</squote>."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "aul",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "d",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Examples</squote>."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "oglt1",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "k",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Example</squote>."
			}, {
				"name": "d",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Example</squote>."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "checkm",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a rd-options=\"\" href=\"/link/formula?package=lrmest&amp;version=3.0\">formula</a></code>."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a rd-options=\"\" href=\"/link/na.action?package=lrmest&amp;version=3.0\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "srliu",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "r",
				"description": "is a $j$ by $1$ matrix of linear restriction, $r = R\\beta + \\delta + \\nu$. Values for <code>r</code> should be given as either a <code><a href=\"/link/vector?package=lrmest&amp;version=3.0\" rd-options=\"\">vector</a></code> or a <code><a href=\"/link/matrix?package=lrmest&amp;version=3.0\" rd-options=\"\">matrix</a></code>. See"
			}, {
				"name": "R",
				"description": "is a $j$ by $p$ of full row rank $j \\le p$ matrix of linear restriction, $r = R\\beta + \\delta + \\nu$. Values for <code>R</code> should be given as either a <code>vector</code> or a <code>matrix</code>. See <squote>Examples</squote>."
			}, {
				"name": "dpn",
				"description": "dispersion matrix of vector of disturbances of linear restricted model, $r = R\\beta + \\delta + \\nu$. Values for <code>dpn</code> should be given as either a <code>vector</code> (only the diagonal elements) or a <code>matrix</code>. See <squote>Examples</squote>"
			}, {
				"name": "delt",
				"description": "values of $E(r) - R\\beta$ and that should be given as either a <code>vector</code> or a <code>matrix</code>. See <squote>Examples</squote>."
			}, {
				"name": "d",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Examples</squote>."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "ogaur",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "k",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Example</squote>."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "ogre",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "k",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Example</squote>."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "rid",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "k",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Examples</squote>."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "rrre",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "r",
				"description": "is a $j$ by $1$ matrix of linear restriction, $r = R\\beta + \\delta + \\nu$. Values for <code>r</code> should be given as either a <code><a href=\"/link/vector?package=lrmest&amp;version=3.0\" rd-options=\"\">vector</a></code> or a <code><a href=\"/link/matrix?package=lrmest&amp;version=3.0\" rd-options=\"\">matrix</a></code>. See"
			}, {
				"name": "R",
				"description": "is a $j$ by $p$ of full row rank $j \\le p$ matrix of linear restriction, $r = R\\beta + \\delta + \\nu$. Values for <code>R</code> should be given as either a <code>vector</code> or a <code>matrix</code>. See <squote>Examples</squote>."
			}, {
				"name": "dpn",
				"description": "dispersion matrix of vector of disturbances of linear restricted model, $r = R\\beta + \\delta + \\nu$. Values for <code>dpn</code> should be given as either a <code>vector</code> (only the diagonal elements) or a <code>matrix</code>. See <squote>Examples</squote>"
			}, {
				"name": "delt",
				"description": "values of $E(r) - R\\beta$ and that should be given as either a <code>vector</code> or a <code>matrix</code>. See <squote>Examples</squote>."
			}, {
				"name": "k",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Examples</squote>."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "alte2",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "k",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Examples</squote>."
			}, {
				"name": "d",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Examples</squote>."
			}, {
				"name": "aa",
				"description": "this is a set of scalars belongs to real number system. Values for <dquote>aa</dquote> should be given as a <code><a href=\"/link/vector?package=lrmest&amp;version=3.0\" rd-options=\"\">vector</a></code>, format. See <squote>Details</squote>."
			}, {
				"name": "press",
				"description": "if <dquote>press=TRUE</dquote> then all the PRESS values and its corresponding parameter values are returned. Otherwise all the scalar MSE values and its corresponding parameter values are returned."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "aur",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "k",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Examples</squote>."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "lte2",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "k",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Examples</squote>."
			}, {
				"name": "d",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Examples</squote>."
			}, {
				"name": "press",
				"description": "if <dquote>press=TRUE</dquote> then all the PRESS values and its corresponding parameter values are returned. Otherwise all the scalar MSE values and its corresponding parameter values are returned."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "ogaul",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "d",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Example</squote>."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "ogalt3",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "k",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Example</squote>."
			}, {
				"name": "d",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Example</squote>."
			}, {
				"name": "aa",
				"description": "this is a set of scalars belongs to real number system. Values for <dquote>aa</dquote> should be given as a <code><a href=\"/link/vector?package=lrmest&amp;version=3.0\" rd-options=\"\">vector</a></code>, format. See <squote>Details</squote>."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "ogrliu",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "r",
				"description": "is a $j$ by $1$ matrix of linear restriction, $r = R\\beta + \\delta + \\nu$. Values for <code>r</code> should be given as either a <code><a href=\"/link/vector?package=lrmest&amp;version=3.0\" rd-options=\"\">vector</a></code> or a <code><a href=\"/link/matrix?package=lrmest&amp;version=3.0\" rd-options=\"\">matrix</a></code>. See"
			}, {
				"name": "R",
				"description": "is a $j$ by $p$ of full row rank $j \\le p$ matrix of linear restriction, $r = R\\beta + \\delta + \\nu$. Values for <code>R</code> should be given as either a <code>vector</code> or a <code>matrix</code>. See <squote>Examples</squote>."
			}, {
				"name": "delt",
				"description": "values of $E(r) - R\\beta$ and that should be given as either a <code>vector</code> or a <code>matrix</code>. See <squote>Examples</squote>."
			}, {
				"name": "d",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Example</squote>."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "optimum",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a rd-options=\"\" href=\"/link/formula?package=lrmest&amp;version=3.0\">formula</a></code>."
			}, {
				"name": "r",
				"description": "is a $j$ by $1$ matrix of linear restriction, $r = R\\beta + \\delta + \\nu$. Values for <code>r</code> should be given as either a <code><a rd-options=\"\" href=\"/link/vector?package=lrmest&amp;version=3.0\">vector</a></code> or a <code><a rd-options=\"\" href=\"/link/matrix?package=lrmest&amp;version=3.0\">matrix</a></code>. See &#x2018;Examples&#x2019;."
			}, {
				"name": "R",
				"description": "is a $j$ by $p$ of full row rank $j \\le p$ matrix of linear restriction, $r = R\\beta + \\delta + \\nu$. Values for <code>R</code> should be given as either a <code>vector</code> or a <code>matrix</code>. See &#x2018;Examples&#x2019;."
			}, {
				"name": "dpn",
				"description": "dispersion matrix of vector of disturbances of linear restricted model, $r = R\\beta + \\delta + \\nu$. Values for <code>dpn</code> should be given as either a <code>vector</code> (only the diagonal elements) or a <code>matrix</code>. See &#x2018;Examples&#x2019;."
			}, {
				"name": "delt",
				"description": "values of $E(r) - R\\beta$ and that should be given as either a <code>vector</code> or a <code>matrix</code>. See &#x2018;Examples&#x2019;."
			}, {
				"name": "aa1",
				"description": "adjusted parameters of Type (1) Adjusted Liu Estimators and that should be a set of scalars belongs to real number system. Values for &#x201C;aa1&#x201D; should be given as a <code><a rd-options=\"\" href=\"/link/vector?package=lrmest&amp;version=3.0\">vector</a></code>, format. See &#x2018;Details&#x2019;."
			}, {
				"name": "aa2",
				"description": "adjusted parameters of Type (2) Adjusted Liu Estimators and that should be a set of scalars belongs to real number system. Values for &#x201C;aa2&#x201D; should be given as a <code><a rd-options=\"\" href=\"/link/vector?package=lrmest&amp;version=3.0\">vector</a></code>, format. See &#x2018;Details&#x2019;."
			}, {
				"name": "aa3",
				"description": "adjusted parameters of Type (3) Adjusted Liu Estimators and that should be a set of scalars belongs to real number system. Values for &#x201C;aa3&#x201D; should be given as a <code><a rd-options=\"\" href=\"/link/vector?package=lrmest&amp;version=3.0\">vector</a></code>, format. See &#x2018;Details&#x2019;."
			}, {
				"name": "k",
				"description": "a vector of set of numeric values. See &#x2018;Examples&#x2019;."
			}, {
				"name": "d",
				"description": "a vector of set of numeric values. See &#x2018;Examples&#x2019;."
			}, {
				"name": "press",
				"description": "an optional object specifying the PRESS values. That is, if &#x201C;press=TRUE&#x201D; then summary of PRESS of some of the estimators are returned with corresponding <code>k</code> and <code>d</code> values. Otherwise summary of scalar MSE of all estimators are returned with corresponding <code>k</code> and/or <code>d</code> values."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a rd-options=\"\" href=\"/link/na.action?package=lrmest&amp;version=3.0\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "ogsrre",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "r",
				"description": "is a $j$ by $1$ matrix of linear restriction, $r = R\\beta + \\delta + \\nu$. Values for <code>r</code> should be given as either a <code><a href=\"/link/vector?package=lrmest&amp;version=3.0\" rd-options=\"\">vector</a></code> or a <code><a href=\"/link/matrix?package=lrmest&amp;version=3.0\" rd-options=\"\">matrix</a></code>. See"
			}, {
				"name": "R",
				"description": "is a $j$ by $p$ of full row rank $j \\le p$ matrix of linear restriction, $r = R\\beta + \\delta + \\nu$. Values for <code>R</code> should be given as either a <code>vector</code> or a <code>matrix</code>. See <squote>Examples</squote>."
			}, {
				"name": "dpn",
				"description": "dispersion matrix of vector of disturbances of linear restricted model, $r = R\\beta + \\delta + \\nu$. Values for <code>dpn</code> should be given as either a <code>vector</code> (only the diagonal elements) or a <code>matrix</code>. See <squote>Examples</squote>"
			}, {
				"name": "delt",
				"description": "values of $E(r) - R\\beta$ and that should be given as either a <code>vector</code> or a <code>matrix</code>. See <squote>Examples</squote>."
			}, {
				"name": "k",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Example</squote>."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "rliu",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "r",
				"description": "is a $j$ by $1$ matrix of linear restriction, $r = R\\beta + \\delta + \\nu$. Values for <code>r</code> should be given as either a <code><a href=\"/link/vector?package=lrmest&amp;version=3.0\" rd-options=\"\">vector</a></code> or a <code><a href=\"/link/matrix?package=lrmest&amp;version=3.0\" rd-options=\"\">matrix</a></code>. See"
			}, {
				"name": "R",
				"description": "is a $j$ by $p$ of full row rank $j \\le p$ matrix of linear restriction, $r = R\\beta + \\delta + \\nu$. Values for <code>R</code> should be given as either a <code>vector</code> or a <code>matrix</code>. See <squote>Examples</squote>."
			}, {
				"name": "delt",
				"description": "values of $E(r) - R\\beta$ and that should be given as either a <code>vector</code> or a <code>matrix</code>. See <squote>Examples</squote>."
			}, {
				"name": "d",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Examples</squote>."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "ogalt2",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "k",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Example</squote>."
			}, {
				"name": "d",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Example</squote>."
			}, {
				"name": "aa",
				"description": "this is a set of scalars belongs to real number system. Values for <dquote>aa</dquote> should be given as a <code><a href=\"/link/vector?package=lrmest&amp;version=3.0\" rd-options=\"\">vector</a></code>, format. See <squote>Details</squote>."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "rls",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a rd-options=\"\" href=\"/link/formula?package=lrmest&amp;version=3.0\">formula</a></code>."
			}, {
				"name": "r",
				"description": "is a $j$ by $1$ matrix of linear restriction, $r = R\\beta + \\delta + \\nu$. Values for <code>r</code> should be given as either a <code><a rd-options=\"\" href=\"/link/vector?package=lrmest&amp;version=3.0\">vector</a></code> or a <code><a rd-options=\"\" href=\"/link/matrix?package=lrmest&amp;version=3.0\">matrix</a></code>. See &#x2018;Examples&#x2019;."
			}, {
				"name": "R",
				"description": "is a $j$ by $p$ of full row rank $j \\le p$ matrix of linear restriction, $r = R\\beta + \\delta + \\nu$. Values for <code>R</code> should be given as either a <code>vector</code> or a <code>matrix</code>. See &#x2018;Examples&#x2019;."
			}, {
				"name": "delt",
				"description": "values of $E(r) - R\\beta$ and that should be given as either a <code>vector</code> or a <code>matrix</code>. See &#x2018;Examples&#x2019;."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a rd-options=\"\" href=\"/link/na.action?package=lrmest&amp;version=3.0\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "pcd",
			"args": []
		}, {
			"name": "ogsrliu",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "r",
				"description": "is a $j$ by $1$ matrix of linear restriction, $r = R\\beta + \\delta + \\nu$. Values for <code>r</code> should be given as either a <code><a href=\"/link/vector?package=lrmest&amp;version=3.0\" rd-options=\"\">vector</a></code> or a <code><a href=\"/link/matrix?package=lrmest&amp;version=3.0\" rd-options=\"\">matrix</a></code>. See"
			}, {
				"name": "R",
				"description": "is a $j$ by $p$ of full row rank $j \\le p$ matrix of linear restriction, $r = R\\beta + \\delta + \\nu$. Values for <code>R</code> should be given as either a <code>vector</code> or a <code>matrix</code>. See <squote>Examples</squote>."
			}, {
				"name": "dpn",
				"description": "dispersion matrix of vector of disturbances of linear restricted model, $r = R\\beta + \\delta + \\nu$. Values for <code>dpn</code> should be given as either a <code>vector</code> (only the diagonal elements) or a <code>matrix</code>. See <squote>Examples</squote>"
			}, {
				"name": "delt",
				"description": "values of $E(r) - R\\beta$ and that should be given as either a <code>vector</code> or a <code>matrix</code>. See <squote>Examples</squote>."
			}, {
				"name": "d",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Example</squote>."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "ogmix",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a rd-options=\"\" href=\"/link/formula?package=lrmest&amp;version=3.0\">formula</a></code>."
			}, {
				"name": "r",
				"description": "is a $j$ by $1$ matrix of linear restriction, $r = R\\beta + \\delta + \\nu$. Values for <code>r</code> should be given as either a <code><a rd-options=\"\" href=\"/link/vector?package=lrmest&amp;version=3.0\">vector</a></code> or a <code><a rd-options=\"\" href=\"/link/matrix?package=lrmest&amp;version=3.0\">matrix</a></code>. See &#x2018;Examples&#x2019;."
			}, {
				"name": "R",
				"description": "is a $j$ by $p$ of full row rank $j \\le p$ matrix of linear restriction, $r = R\\beta + \\delta + \\nu$. Values for <code>R</code> should be given as either a <code>vector</code> or a <code>matrix</code>. See &#x2018;Examples&#x2019;."
			}, {
				"name": "dpn",
				"description": "dispersion matrix of vector of disturbances of linear restricted model, $r = R\\beta + \\delta + \\nu$. Values for <code>dpn</code> should be given as either a <code>vector</code> (only the diagonal elements) or a <code>matrix</code>. See &#x2018;Examples&#x2019;."
			}, {
				"name": "delt",
				"description": "values of $E(r) - R\\beta$ and that should be given as either a <code>vector</code> or a <code>matrix</code>. See &#x2018;Examples&#x2019;."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a rd-options=\"\" href=\"/link/na.action?package=lrmest&amp;version=3.0\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "ols",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a rd-options=\"\" href=\"/link/formula?package=lrmest&amp;version=3.0\">formula</a></code>."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a rd-options=\"\" href=\"/link/na.action?package=lrmest&amp;version=3.0\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "oglt2",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "k",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Example</squote>."
			}, {
				"name": "d",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Example</squote>."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "oglt3",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "k",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Example</squote>."
			}, {
				"name": "d",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Example</squote>."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}, {
			"name": "srre",
			"args": [{
				"name": "formula",
				"description": "in this section interested model should be given. This should be given as a <code><a href=\"/link/formula?package=lrmest&amp;version=3.0\" rd-options=\"\">formula</a></code>."
			}, {
				"name": "r",
				"description": "is a $j$ by $1$ matrix of linear restriction, $r = R\\beta + \\delta + \\nu$. Values for <code>r</code> should be given as either a <code><a href=\"/link/vector?package=lrmest&amp;version=3.0\" rd-options=\"\">vector</a></code> or a <code><a href=\"/link/matrix?package=lrmest&amp;version=3.0\" rd-options=\"\">matrix</a></code>. See"
			}, {
				"name": "R",
				"description": "is a $j$ by $p$ of full row rank $j \\le p$ matrix of linear restriction, $r = R\\beta + \\delta + \\nu$. Values for <code>R</code> should be given as either a <code>vector</code> or a <code>matrix</code>. See <squote>Examples</squote>."
			}, {
				"name": "dpn",
				"description": "dispersion matrix of vector of disturbances of linear restricted model, $r = R\\beta + \\delta + \\nu$. Values for <code>dpn</code> should be given as either a <code>vector</code> (only the diagonal elements) or a <code>matrix</code>. See <squote>Examples</squote>"
			}, {
				"name": "delt",
				"description": "values of $E(r) - R\\beta$ and that should be given as either a <code>vector</code> or a <code>matrix</code>. See <squote>Examples</squote>."
			}, {
				"name": "k",
				"description": "a single numeric value or a vector of set of numeric values. See <squote>Examples</squote>."
			}, {
				"name": "data",
				"description": "an optional data frame, list or environment containing the variables in the model. If not found in <code>data</code>, the variables are taken from <code>environment(formula)</code>, typically the environment from which the function is called."
			}, {
				"name": "na.action",
				"description": "if the dataset contain <code>NA</code> values, then <code><a href=\"/link/na.action?package=lrmest&amp;version=3.0\" rd-options=\"\">na.action</a></code> indicate what should happen to those <code>NA</code> values."
			}, {
				"name": "...",
				"description": "currently disregarded."
			}]
		}]
	}
}]
